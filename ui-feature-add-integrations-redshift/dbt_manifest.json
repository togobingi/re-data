{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v7.json", "dbt_version": "1.3.0", "generated_at": "2022-10-17T12:19:38.827684Z", "invocation_id": "6f26d794-2d08-426d-9533-a966b613c364", "env": {}, "project_id": "e59f6cd29b40112dbd475c7339275e98", "user_id": "1f0d32bb-e344-4cd4-83fc-b1fba4505071", "send_anonymous_usage_stats": true, "adapter_type": "redshift"}, "nodes": {"model.toy_shop.not_monitored": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations", "fqn": ["toy_shop", "not_monitored"], "unique_id": "model.toy_shop.not_monitored", "raw_code": "select 1 as my_number", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "not_monitored.sql", "original_file_path": "models/not_monitored.sql", "name": "not_monitored", "alias": "not_monitored", "checksum": {"name": "sha256", "checksum": "3385a7203d1cebc7f2ffdac330fcad71e260430692738180453a755de58b2fbf"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/toy_shop/models/not_monitored.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1666008871.485412, "compiled_code": "select 1 as my_number", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations\".\"not_monitored\""}, "model.toy_shop.sanitized_user_data": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.filter_remove_duplicates", "macro.re_data.clean_additional_whitespaces", "macro.re_data.clean_capitalize_words", "macro.re_data.clean_blacklist", "macro.re_data.valid_email", "macro.re_data.normalize_values"], "nodes": ["seed.toy_shop.user_data"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations", "fqn": ["toy_shop", "sanitized_user_data"], "unique_id": "model.toy_shop.sanitized_user_data", "raw_code": "{% set states_mapping = {'AZ': 'Arizona', 'IN': 'Indiana', 'WV': 'West Virginia', 'MN': 'Minnesota', 'NY': 'New York'}%}\n\nwith deduplicated as (\n    select * from {{ re_data.filter_remove_duplicates(ref('user_data'), ['email'], ['created_at DESC']) }} as dedup\n), \ncleaned as (\n    select\n        *,\n        {{ re_data.clean_capitalize_words(re_data.clean_additional_whitespaces('full_name')) }} as formatted_full_name,\n        {{ re_data.clean_blacklist('email', ['^[a-zA-Z0-9_.+-]+'], '*****') }} as redacted_email,\n        {{ re_data.valid_email('email') }} is_valid_email\n    from deduplicated \n)\n\nselect\n    *\nfrom {{ re_data.normalize_values('cleaned', 'state', states_mapping) }} u", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "sanitized_user_data.sql", "original_file_path": "models/sanitized_user_data.sql", "name": "sanitized_user_data", "alias": "sanitized_user_data", "checksum": {"name": "sha256", "checksum": "28f1cb385b38973a1b22ff69001309d95c38ee802e539b08e2d7da799ea5005b"}, "tags": [], "refs": [["user_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/toy_shop/models/sanitized_user_data.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1666008871.502961, "compiled_code": "\n\nwith deduplicated as (\n    select * from \n    (\n        with with_row_num as (\n            \n\n            select \n\n    \"full_name\",\n  \"email\",\n  \"state\",\n  \"created_at\"\n            , count(*) over (\n                 partition by email\n \n            ) as re_data_duplicate_group_row_count\n            , row_number() over (\n                partition by email\n  order by created_at DESC\n \n            ) as re_data_duplicate_group_row_number\n\n            from \"re_data_testing\".\"toy_shop_feature_add_integrations\".\"user_data\"\n\n\n        ),\n        one_row_num as (\n            select * from with_row_num where re_data_duplicate_group_row_number = 1\n        )\n        select \n\n    \"full_name\",\n  \"email\",\n  \"state\",\n  \"created_at\"\n        from one_row_num\n    ) \n as dedup\n), \ncleaned as (\n    select\n        *,\n        \n    initcap( \n    \n    trim(regexp_replace( full_name, '\\\\s\\\\s+', ' '))\n\n )\n as formatted_full_name,\n        \n\n    regexp_replace( email, '(^[a-zA-Z0-9_.+-]+)', '*****') as redacted_email,\n        \n    \n\n  case when \n    email is null then false \n    else \n    \n    (email ~ '^[A\\-Za\\-z0\\-9\\.\\-_%]+@[A\\-Za\\-z0\\-9\\.\\-]+\\\\.[A\\-Za\\-z]{2,4}$')\n\n\n  end\n\n is_valid_email\n    from deduplicated \n)\n\nselect\n    *\nfrom ( \n        \n    with target_table as (\n        \n            \n                select 'AZ' as source, 'Arizona' as target\n                union all\n            \n                select 'IN' as source, 'Indiana' as target\n                union all\n            \n                select 'WV' as source, 'West Virginia' as target\n                union all\n            \n                select 'MN' as source, 'Minnesota' as target\n                union all\n            \n                select 'NY' as source, 'New York' as target\n                \n            \n        \n    )\n\n        \n        select s.*, \n        case when t.source is null\n                then s.state\n            else t.target\n            end as state__normalized \n        from cleaned s\n        left join target_table t \n        on t.source = s.state\n    ) u", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations\".\"sanitized_user_data\""}, "model.toy_shop.orders_per_age": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.toy_shop.toy_shop_feature_add_integrations_sources.toy_shop_customers", "seed.toy_shop.orders"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "re_data_monitored": true, "re_data_time_filter": "created_at", "re_data_metrics": {"table": ["orders_above_100"]}, "re_data_columns": ["amount", "status", "age"], "re_data_anomaly_detector": {"name": "z_score", "threshold": 2.0}, "re_data_owners": ["frontend"], "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations", "fqn": ["toy_shop", "revenue", "orders_per_age"], "unique_id": "model.toy_shop.orders_per_age", "raw_code": "{{\n    config(\n        re_data_metrics={'table': ['orders_above_100']},\n        re_data_columns=['amount', 'status', 'age'],\n        re_data_anomaly_detector={'name': 'z_score', 'threshold': 2.0},\n        re_data_owners=['frontend'],\n    )\n}}\n\nselect o.id, o.amount, o.status, c.age, o.created_at from \n    {{ ref('orders') }} o, {{ source(target.schema + '_sources', 'toy_shop_customers') }} c\nwhere\n    o.customer_id = c.id\norder by\n    o.created_at desc", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "revenue/orders_per_age.sql", "original_file_path": "models/revenue/orders_per_age.sql", "name": "orders_per_age", "alias": "orders_per_age", "checksum": {"name": "sha256", "checksum": "b5595969c0f2a6b3a98153625328150efa2172120dcbb689c521f4ee2be1cac6"}, "tags": [], "refs": [["orders"]], "sources": [["toy_shop_feature_add_integrations_sources", "toy_shop_customers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/toy_shop/models/revenue/orders_per_age.sql", "build_path": null, "deferred": false, "unrendered_config": {"re_data_monitored": true, "re_data_time_filter": "created_at", "re_data_metrics": {"table": ["orders_above_100"]}, "re_data_columns": ["amount", "status", "age"], "re_data_anomaly_detector": {"name": "z_score", "threshold": 2.0}, "re_data_owners": ["frontend"]}, "created_at": 1666008871.5929463, "compiled_code": "\n\nselect o.id, o.amount, o.status, c.age, o.created_at from \n    \"re_data_testing\".\"toy_shop_feature_add_integrations\".\"orders\" o, \"re_data_testing\".\"toy_shop_feature_add_integrations_sources\".\"toy_shop_customers\" c\nwhere\n    o.customer_id = c.id\norder by\n    o.created_at desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations\".\"orders_per_age\""}, "model.toy_shop.pending_orders": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["seed.toy_shop.orders"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "re_data_monitored": true, "re_data_time_filter": "created_at", "re_data_columns": ["amount", "status"], "re_data_metrics": {"table": ["orders_above_100"]}, "re_data_anomaly_detector": {"name": "z_score", "threshold": 3.0}, "re_data_owners": ["deji"], "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations", "fqn": ["toy_shop", "revenue", "pending_orders"], "unique_id": "model.toy_shop.pending_orders", "raw_code": "{{\n    config(\n        re_data_columns=['amount', 'status'],\n        re_data_metrics={'table': ['orders_above_100']},\n        re_data_anomaly_detector={'name': 'z_score', 'threshold': 3.0},\n        materialized='table'\n    )\n}}\n\nselect id, customer_id, status, amount, created_at from {{ ref('orders') }} where status = 'pending'", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "revenue/pending_orders.sql", "original_file_path": "models/revenue/pending_orders.sql", "name": "pending_orders", "alias": "pending_orders", "checksum": {"name": "sha256", "checksum": "3d722029316e21172caf7b7dabd5d1c8b3a16050cdf49a4e1963c3bcf6dfaae4"}, "tags": [], "refs": [["orders"]], "sources": [], "metrics": [], "description": "", "columns": {"status": {"name": "status", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "toy_shop://models/revenue/schema.yml", "compiled_path": "target/compiled/toy_shop/models/revenue/pending_orders.sql", "build_path": null, "deferred": false, "unrendered_config": {"re_data_monitored": true, "re_data_time_filter": "created_at", "re_data_columns": ["amount", "status"], "re_data_owners": ["deji"], "re_data_metrics": {"table": ["orders_above_100"]}, "re_data_anomaly_detector": {"name": "z_score", "threshold": 3.0}, "materialized": "table"}, "created_at": 1666008872.4142582, "compiled_code": "\n\nselect id, customer_id, status, amount, created_at from \"re_data_testing\".\"toy_shop_feature_add_integrations\".\"orders\" where status = 'pending'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations\".\"pending_orders\""}, "model.toy_shop.revenue_per_age": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.toy_shop.orders_per_age"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "re_data_monitored": true, "re_data_time_filter": "created_at", "re_data_columns": ["sum", "age"], "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations", "fqn": ["toy_shop", "revenue", "revenue_per_age"], "unique_id": "model.toy_shop.revenue_per_age", "raw_code": "select cast (created_at as date) as created_at, age, sum(amount) as amount\nfrom {{ ref('orders_per_age') }}\nwhere\n    status = 'paid'\n    and age is not null\ngroup by\n    created_at, age", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "revenue/revenue_per_age.sql", "original_file_path": "models/revenue/revenue_per_age.sql", "name": "revenue_per_age", "alias": "revenue_per_age", "checksum": {"name": "sha256", "checksum": "48dab85827380457f1e69916fbe3b8e52d86e93f8111f61499a66cc458e631a4"}, "tags": [], "refs": [["orders_per_age"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/toy_shop/models/revenue/revenue_per_age.sql", "build_path": null, "deferred": false, "unrendered_config": {"re_data_monitored": true, "re_data_time_filter": "created_at", "re_data_columns": ["sum", "age"]}, "created_at": 1666008871.6150403, "compiled_code": "select cast (created_at as date) as created_at, age, sum(amount) as amount\nfrom \"re_data_testing\".\"toy_shop_feature_add_integrations\".\"orders_per_age\"\nwhere\n    status = 'paid'\n    and age is not null\ngroup by\n    created_at, age", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations\".\"revenue_per_age\""}, "seed.toy_shop.customers": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations", "fqn": ["toy_shop", "customers"], "unique_id": "seed.toy_shop.customers", "raw_code": "", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "customers.csv", "original_file_path": "seeds/customers.csv", "name": "customers", "alias": "customers", "checksum": {"name": "sha256", "checksum": "601bdf208be53cd725e05fe566b26b4decad0eaf4f904fcdd0c88ecf09f66617"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1666008871.6410253, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations\".\"customers\""}, "seed.toy_shop.orders": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "re_data_monitored": true, "re_data_time_filter": "created_at", "re_data_metrics": {"table": ["orders_above_100"], "column": {"status": ["distinct_values"]}}, "re_data_columns": ["amount", "status"], "re_data_anomaly_detector": {"name": "boxplot", "whisker_boundary_multiplier": 2.0}, "re_data_owners": ["backend"], "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations", "fqn": ["toy_shop", "orders"], "unique_id": "seed.toy_shop.orders", "raw_code": "", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "orders.csv", "original_file_path": "seeds/orders.csv", "name": "orders", "alias": "orders", "checksum": {"name": "sha256", "checksum": "d570699ccf0b403f0fe1fd45dc29f235a6432a805c7462b193aef94d4977e837"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {"status": {"name": "status", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "toy_shop://seeds/schema.yml", "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"re_data_monitored": true, "re_data_time_filter": "created_at", "re_data_metrics": {"table": ["orders_above_100"], "column": {"status": ["distinct_values"]}}, "re_data_columns": ["amount", "status"], "re_data_anomaly_detector": {"name": "boxplot", "whisker_boundary_multiplier": 2.0}, "re_data_owners": ["backend"]}, "created_at": 1666008872.3767304, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations\".\"orders\""}, "seed.toy_shop.user_data": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations", "fqn": ["toy_shop", "user_data"], "unique_id": "seed.toy_shop.user_data", "raw_code": "", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "user_data.csv", "original_file_path": "seeds/user_data.csv", "name": "user_data", "alias": "user_data", "checksum": {"name": "sha256", "checksum": "e856ed5ca8c30bc03909b201059f346290bb92d7aa693ffd48994a2d9d9b595e"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1666008871.6472266, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations\".\"user_data\""}, "seed.toy_shop.companies": {"compiled": true, "resource_type": "seed", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "quote_columns": null, "re_data_monitored": true, "re_data_time_filter": null, "re_data_columns": ["brand_name", "show", "year"], "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations", "fqn": ["toy_shop", "companies"], "unique_id": "seed.toy_shop.companies", "raw_code": "", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "companies.csv", "original_file_path": "seeds/companies.csv", "name": "companies", "alias": "companies", "checksum": {"name": "sha256", "checksum": "8d3df7b1e7218a41aaf30aebd576ff80bc21292f59cfef57c6c2f551398f5448"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "toy_shop://seeds/schema.yml", "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"re_data_monitored": true, "re_data_time_filter": null, "re_data_columns": ["brand_name", "show", "year"]}, "created_at": 1666008872.371484, "compiled_code": "", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations\".\"companies\""}, "model.re_data.re_data_metrics": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.re_data.re_data_base_metrics"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "metrics", "final", "re_data_metrics"], "unique_id": "model.re_data.re_data_metrics", "raw_code": "select * from {{ ref('re_data_base_metrics') }}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "metrics/final/re_data_metrics.sql", "original_file_path": "models/metrics/final/re_data_metrics.sql", "name": "re_data_metrics", "alias": "re_data_metrics", "checksum": {"name": "sha256", "checksum": "035c9fce751ff39b423bed0790f8e00d8de07dfdb32b4c4d0e3cc3996728e8f4"}, "tags": [], "refs": [["re_data_base_metrics"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/metrics/final/re_data_metrics.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "enabled": true}, "created_at": 1666008871.7156115, "compiled_code": "select * from \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_base_metrics\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_metrics\""}, "model.re_data.re_data_base_metrics": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.time_window_start", "macro.re_data.time_window_end", "macro.dbt_utils.surrogate_key", "macro.re_data.string_type", "macro.re_data.numeric_type", "macro.re_data.timestamp_type", "macro.re_data.interval_length_sec", "macro.re_data.integer_type", "macro.dbt_utils.current_timestamp_in_utc"], "nodes": ["model.re_data.re_data_columns", "model.re_data.re_data_last_base_metrics_thread0", "model.re_data.re_data_last_base_metrics_thread1", "model.re_data.re_data_last_base_metrics_thread2", "model.re_data.re_data_last_base_metrics_thread3", "model.re_data.re_data_last_base_metrics_part0", "model.re_data.re_data_last_base_metrics_part1", "model.re_data.re_data_last_base_metrics_part2", "model.re_data.re_data_last_base_metrics_part3", "model.re_data.re_data_run_started_at", "model.re_data.re_data_monitored", "model.re_data.re_data_selected", "model.re_data.re_data_last_base_metrics_part0", "model.re_data.re_data_last_base_metrics_part1", "model.re_data.re_data_last_base_metrics_part2", "model.re_data.re_data_last_base_metrics_part3"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "sync_all_columns", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "metrics", "types", "base", "re_data_base_metrics"], "unique_id": "model.re_data.re_data_base_metrics", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key = 'id',\n        on_schema_change='sync_all_columns',\n    )\n}}\n\n-- depends_on: {{ ref('re_data_columns') }}\n-- depends_on: {{ ref('re_data_last_base_metrics_thread0') }}\n-- depends_on: {{ ref('re_data_last_base_metrics_thread1') }}\n-- depends_on: {{ ref('re_data_last_base_metrics_thread2') }}\n-- depends_on: {{ ref('re_data_last_base_metrics_thread3') }}\n-- depends_on: {{ ref('re_data_last_base_metrics_part0') }}\n-- depends_on: {{ ref('re_data_last_base_metrics_part1') }}\n-- depends_on: {{ ref('re_data_last_base_metrics_part2') }}\n-- depends_on: {{ ref('re_data_last_base_metrics_part3') }}\n-- depends_on: {{ ref('re_data_run_started_at') }}\n-- depends_on: {{ ref('re_data_monitored') }}\n-- depends_on: {{ ref('re_data_selected') }}\n\nwith \n\nwith_time_window as (\n    {% set parts = ['0','1','2','3'] %}\n    {% for part in parts %}\n        {% set ref_name = 're_data_last_base_metrics_part' + part %}\n        select\n            *,\n            {{ time_window_start() }} as time_window_start,\n            {{ time_window_end() }} as time_window_end\n        from {{ ref(ref_name) }}\n        {%- if not loop.last %} union all {%- endif %}\n    {% endfor %}\n)\nselect\n    cast ({{ dbt_utils.surrogate_key([\n        'table_name',\n        'column_name',\n        'metric',\n        'time_window_start',\n        'time_window_end'\n    ]) }} as {{ string_type() }} ) as id,\n    cast (table_name as {{ string_type() }} ) as table_name,\n    cast (column_name as {{ string_type() }} ) as column_name,\n    cast (metric as {{ string_type() }} ) as metric,\n    cast (value as {{ numeric_type() }} ) as value,\n    cast (time_window_start as {{ timestamp_type() }} ) as time_window_start,\n    cast (time_window_end as {{ timestamp_type() }} ) as time_window_end,\n    cast (\n        {{ interval_length_sec('time_window_start', 'time_window_end') }} as {{ integer_type() }}\n    ) as interval_length_sec,\n    cast ({{- dbt_utils.current_timestamp_in_utc() -}} as {{ timestamp_type() }}) as computed_on\nfrom with_time_window", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "metrics/types/base/re_data_base_metrics.sql", "original_file_path": "models/metrics/types/base/re_data_base_metrics.sql", "name": "re_data_base_metrics", "alias": "re_data_base_metrics", "checksum": {"name": "sha256", "checksum": "d11b36c17069ac2864153dac5b6793dd81e64e235bdb7cb53d3dcb4b31e78ba7"}, "tags": [], "refs": [["re_data_columns"], ["re_data_last_base_metrics_thread0"], ["re_data_last_base_metrics_thread1"], ["re_data_last_base_metrics_thread2"], ["re_data_last_base_metrics_thread3"], ["re_data_last_base_metrics_part0"], ["re_data_last_base_metrics_part1"], ["re_data_last_base_metrics_part2"], ["re_data_last_base_metrics_part3"], ["re_data_run_started_at"], ["re_data_monitored"], ["re_data_selected"], ["re_data_last_base_metrics_part0"], ["re_data_last_base_metrics_part1"], ["re_data_last_base_metrics_part2"], ["re_data_last_base_metrics_part3"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/metrics/types/base/re_data_base_metrics.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "materialized": "incremental", "unique_key": "id", "on_schema_change": "sync_all_columns", "enabled": true}, "created_at": 1666008871.7199116, "compiled_code": "\n\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_thread0\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_thread1\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_thread2\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_thread3\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part0\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part1\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part2\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part3\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_run_started_at\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_monitored\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_selected\"\n\nwith \n\nwith_time_window as (\n    \n    \n        \n        select\n            *,\n            \n    cast('2022-10-16 00:00:00' as timestamp) \n as time_window_start,\n            \n    cast('2022-10-17 00:00:00' as timestamp)\n as time_window_end\n        from \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part0\" union all\n    \n        \n        select\n            *,\n            \n    cast('2022-10-16 00:00:00' as timestamp) \n as time_window_start,\n            \n    cast('2022-10-17 00:00:00' as timestamp)\n as time_window_end\n        from \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part1\" union all\n    \n        \n        select\n            *,\n            \n    cast('2022-10-16 00:00:00' as timestamp) \n as time_window_start,\n            \n    cast('2022-10-17 00:00:00' as timestamp)\n as time_window_end\n        from \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part2\" union all\n    \n        \n        select\n            *,\n            \n    cast('2022-10-16 00:00:00' as timestamp) \n as time_window_start,\n            \n    cast('2022-10-17 00:00:00' as timestamp)\n as time_window_end\n        from \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part3\"\n    \n)\nselect\n    cast (md5(cast(coalesce(cast(table_name as varchar), '') || '-' || coalesce(cast(column_name as varchar), '') || '-' || coalesce(cast(metric as varchar), '') || '-' || coalesce(cast(time_window_start as varchar), '') || '-' || coalesce(cast(time_window_end as varchar), '') as varchar)) as \n    \n    varchar(2047)\n\n ) as id,\n    cast (table_name as \n    \n    varchar(2047)\n\n ) as table_name,\n    cast (column_name as \n    \n    varchar(2047)\n\n ) as column_name,\n    cast (metric as \n    \n    varchar(2047)\n\n ) as metric,\n    cast (value as \n    \n    DOUBLE PRECISION\n\n ) as value,\n    cast (time_window_start as \n    \n    TIMESTAMP\n\n ) as time_window_start,\n    cast (time_window_end as \n    \n    TIMESTAMP\n\n ) as time_window_end,\n    cast (\n        \n    \n   DATEDIFF(second, time_window_start, time_window_end)\n\n as \n    INTEGER\n\n    ) as interval_length_sec,\n    cast (\n    \n    getdate()\n\nas \n    \n    TIMESTAMP\n\n) as computed_on\nfrom with_time_window", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_base_metrics\""}, "model.re_data.re_data_table_samples": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.current_timestamp_in_utc", "macro.re_data.timestamp_type"], "nodes": ["model.re_data.re_data_last_table_samples", "model.re_data.re_data_last_table_samples_part", "model.re_data.re_data_last_table_samples_part"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "table_name", "on_schema_change": "sync_all_columns", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "metrics", "types", "samples", "re_data_table_samples"], "unique_id": "model.re_data.re_data_table_samples", "raw_code": "{{\n    config(\n        materialized='table',\n        unique_key = 'table_name',\n        on_schema_change='sync_all_columns',\n    )\n}}\n\n-- depends_on: {{ ref('re_data_last_table_samples') }}\n-- depends_on: {{ ref('re_data_last_table_samples_part') }}\n\nselect\n    table_name,\n    sample_data,\n    cast ({{- dbt_utils.current_timestamp_in_utc() -}} as {{ timestamp_type() }}) as sampled_on\n\nfrom {{ ref('re_data_last_table_samples_part') }}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "metrics/types/samples/re_data_table_samples.sql", "original_file_path": "models/metrics/types/samples/re_data_table_samples.sql", "name": "re_data_table_samples", "alias": "re_data_table_samples", "checksum": {"name": "sha256", "checksum": "d89989e8569fa002bf39787a588faf370e7baee6b2fc524c0dc972542e0308ea"}, "tags": [], "refs": [["re_data_last_table_samples"], ["re_data_last_table_samples_part"], ["re_data_last_table_samples_part"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/metrics/types/samples/re_data_table_samples.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "materialized": "table", "unique_key": "table_name", "on_schema_change": "sync_all_columns", "enabled": true}, "created_at": 1666008871.8021991, "compiled_code": "\n\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_table_samples\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_table_samples_part\"\n\nselect\n    table_name,\n    sample_data,\n    cast (\n    \n    getdate()\n\nas \n    \n    TIMESTAMP\n\n) as sampled_on\n\nfrom \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_table_samples_part\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_table_samples\""}, "model.re_data.re_data_columns_over_time": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.full_table_name", "macro.dbt_utils.current_timestamp_in_utc", "macro.re_data.timestamp_type", "macro.dbt_utils.surrogate_key", "macro.re_data.string_type"], "nodes": ["model.re_data.re_data_columns", "model.re_data.re_data_selected"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "sync_all_columns", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "metrics", "types", "schema", "re_data_columns_over_time"], "unique_id": "model.re_data.re_data_columns_over_time", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key = 'id',\n        on_schema_change='sync_all_columns',\n    )\n}}\n\n\nwith columns as (\n\nselect\n    {{ full_table_name('cols.name', 'cols.schema', 'cols.database') }} as table_name,\n    cols.column_name,\n    cols.data_type,\n    cols.is_nullable,\n    cast ({{dbt_utils.current_timestamp_in_utc()}} as {{ timestamp_type() }} ) as detected_time\nfrom\n    {{ ref('re_data_columns')}} cols, {{ ref('re_data_selected')}} tables\nwhere\n    cols.name = tables.name and cols.schema = tables.schema and cols.database = tables.database\n)\n\nselect\n    cast ({{ dbt_utils.surrogate_key([\n      'table_name',\n      'column_name',\n      'detected_time'\n    ]) }} as {{ string_type() }} ) as id,\n    table_name,\n    column_name,\n    data_type,\n    is_nullable,\n    detected_time\nfrom columns", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "metrics/types/schema/re_data_columns_over_time.sql", "original_file_path": "models/metrics/types/schema/re_data_columns_over_time.sql", "name": "re_data_columns_over_time", "alias": "re_data_columns_over_time", "checksum": {"name": "sha256", "checksum": "04acabd70a73daa085e37b6adb351c4503aef6c79f54e0743cc9d5bdd2733c87"}, "tags": [], "refs": [["re_data_columns"], ["re_data_selected"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/metrics/types/schema/re_data_columns_over_time.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "materialized": "incremental", "unique_key": "id", "on_schema_change": "sync_all_columns", "enabled": true}, "created_at": 1666008871.8148892, "compiled_code": "\n\n\nwith columns as (\n\nselect\n    \n    \n    '\"' || cols.database || '\"' || '.' || '\"' || cols.schema || '\"' || '.' || '\"' || cols.name || '\"'\n\n as table_name,\n    cols.column_name,\n    cols.data_type,\n    cols.is_nullable,\n    cast (\n    \n    getdate()\n\n as \n    \n    TIMESTAMP\n\n ) as detected_time\nfrom\n    \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns\" cols, \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_selected\" tables\nwhere\n    cols.name = tables.name and cols.schema = tables.schema and cols.database = tables.database\n)\n\nselect\n    cast (md5(cast(coalesce(cast(table_name as varchar), '') || '-' || coalesce(cast(column_name as varchar), '') || '-' || coalesce(cast(detected_time as varchar), '') as varchar)) as \n    \n    varchar(2047)\n\n ) as id,\n    table_name,\n    column_name,\n    data_type,\n    is_nullable,\n    detected_time\nfrom columns", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns_over_time\""}, "model.re_data.re_data_last_stats": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.percentile", "macro.re_data.anamaly_detection_time_window_start", "macro.re_data.time_window_end"], "nodes": ["model.re_data.re_data_base_metrics", "model.re_data.re_data_base_metrics", "model.re_data.re_data_base_metrics"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "metrics", "for_anomalies", "re_data_last_stats"], "unique_id": "model.re_data.re_data_last_stats", "raw_code": "{% set columns_to_group_by = 'table_name, column_name, metric, interval_length_sec' %}\n\nwith median_value as (\n    select distinct\n        table_name,\n        column_name,\n        metric,\n        interval_length_sec,\n        avg(value) {% if target.type != 'postgres' %} over(partition by {{ columns_to_group_by }}) {% endif %} as last_avg,\n        {{ percentile(percentile_field='value', partition_field=columns_to_group_by, percent='0.25') }} as last_first_quartile,\n        {{ percentile(percentile_field='value', partition_field=columns_to_group_by, percent='0.5') }} as last_median,\n        {{ percentile(percentile_field='value', partition_field=columns_to_group_by, percent='0.75') }} as last_third_quartile\n    from\n        {{ ref('re_data_base_metrics') }}\n    where\n        time_window_end > {{- anamaly_detection_time_window_start() -}} and\n        time_window_end <= {{- time_window_end() -}}\n    {% if target.type == 'postgres' %} \n        group by\n            {{ columns_to_group_by }}\n    {% endif %}\n    \n), abs_deviation as (\n    select \n        s.table_name,\n        s.column_name,\n        s.metric,\n        s.interval_length_sec,\n        abs( s.value - mv.last_avg ) as absolute_deviation_from_mean,\n        abs( s.value - mv.last_median ) as absolute_deviation_from_median\n    from\n        {{ ref('re_data_base_metrics') }} s\n    left join \n        median_value mv\n        on\n            s.table_name = mv.table_name and\n            s.column_name = mv.column_name and\n            s.metric = mv.metric and\n            s.interval_length_sec = mv.interval_length_sec\n    where\n        s.time_window_end > {{- anamaly_detection_time_window_start() -}} and\n        s.time_window_end <= {{- time_window_end() -}}\n), median_abs_deviation as (\n    select distinct\n        table_name,\n        column_name,\n        metric,\n        interval_length_sec,\n        avg(absolute_deviation_from_mean) {% if target.type != 'postgres' %} over(partition by {{ columns_to_group_by }}) {% endif %} as mean_absolute_deviation,\n        {{ percentile(percentile_field='absolute_deviation_from_median', partition_field=columns_to_group_by, percent='0.5') }} as median_absolute_deviation\n    from\n        abs_deviation\n    {% if target.type == 'postgres' %} \n        group by\n            {{ columns_to_group_by }}\n    {% endif %}\n), stats as (\n    select\n        table_name,\n        column_name,\n        metric,\n        stddev(value) as last_stddev,\n        max(time_window_end) as last_metric_time,\n        interval_length_sec,\n        max(computed_on) as computed_on\n    from\n        {{ ref('re_data_base_metrics') }}\n    where\n        time_window_end > {{- anamaly_detection_time_window_start() -}} and\n        time_window_end <= {{- time_window_end() -}}\n    group by\n        {{ columns_to_group_by }}\n)\n\nselect\n    s.table_name,\n    s.column_name,\n    s.metric,\n    mv.last_avg,\n    s.last_stddev,\n    s.last_metric_time,\n    s.interval_length_sec,\n    s.computed_on,\n    mv.last_median,\n    mv.last_first_quartile,\n    mv.last_third_quartile,\n    md.median_absolute_deviation last_median_absolute_deviation,\n    md.mean_absolute_deviation last_mean_absolute_deviation\nfrom\n    stats s\nleft join\n    median_value mv\n    on\n        s.table_name = mv.table_name and\n        s.column_name = mv.column_name and\n        s.metric = mv.metric and\n        s.interval_length_sec = mv.interval_length_sec\nleft join\n    median_abs_deviation md\n    on \n        s.table_name = md.table_name and\n        s.column_name = md.column_name and\n        s.metric = md.metric and\n        s.interval_length_sec = md.interval_length_sec", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "metrics/for_anomalies/re_data_last_stats.sql", "original_file_path": "models/metrics/for_anomalies/re_data_last_stats.sql", "name": "re_data_last_stats", "alias": "re_data_last_stats", "checksum": {"name": "sha256", "checksum": "3cadb7526eae836c567aece87219ccaad384a95f7db57d780ab69020e7745883"}, "tags": [], "refs": [["re_data_base_metrics"], ["re_data_base_metrics"], ["re_data_base_metrics"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/metrics/for_anomalies/re_data_last_stats.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "enabled": true}, "created_at": 1666008871.835235, "compiled_code": "\n\nwith median_value as (\n    select distinct\n        table_name,\n        column_name,\n        metric,\n        interval_length_sec,\n        avg(value)  over(partition by table_name, column_name, metric, interval_length_sec)  as last_avg,\n        \n\n    percentile_cont( \n        0.25 )\n        within group ( order by value )\n        over ( partition by table_name, column_name, metric, interval_length_sec )\n\n as last_first_quartile,\n        \n\n    percentile_cont( \n        0.5 )\n        within group ( order by value )\n        over ( partition by table_name, column_name, metric, interval_length_sec )\n\n as last_median,\n        \n\n    percentile_cont( \n        0.75 )\n        within group ( order by value )\n        over ( partition by table_name, column_name, metric, interval_length_sec )\n\n as last_third_quartile\n    from\n        \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_base_metrics\"\n    where\n        time_window_end >\n   \n    \n    cast('2022-10-16 00:00:00' as timestamp) \n - interval '30 days'\n\nand\n        time_window_end <=\n    cast('2022-10-17 00:00:00' as timestamp)\n\n    \n), abs_deviation as (\n    select \n        s.table_name,\n        s.column_name,\n        s.metric,\n        s.interval_length_sec,\n        abs( s.value - mv.last_avg ) as absolute_deviation_from_mean,\n        abs( s.value - mv.last_median ) as absolute_deviation_from_median\n    from\n        \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_base_metrics\" s\n    left join \n        median_value mv\n        on\n            s.table_name = mv.table_name and\n            s.column_name = mv.column_name and\n            s.metric = mv.metric and\n            s.interval_length_sec = mv.interval_length_sec\n    where\n        s.time_window_end >\n   \n    \n    cast('2022-10-16 00:00:00' as timestamp) \n - interval '30 days'\n\nand\n        s.time_window_end <=\n    cast('2022-10-17 00:00:00' as timestamp)\n), median_abs_deviation as (\n    select distinct\n        table_name,\n        column_name,\n        metric,\n        interval_length_sec,\n        avg(absolute_deviation_from_mean)  over(partition by table_name, column_name, metric, interval_length_sec)  as mean_absolute_deviation,\n        \n\n    percentile_cont( \n        0.5 )\n        within group ( order by absolute_deviation_from_median )\n        over ( partition by table_name, column_name, metric, interval_length_sec )\n\n as median_absolute_deviation\n    from\n        abs_deviation\n    \n), stats as (\n    select\n        table_name,\n        column_name,\n        metric,\n        stddev(value) as last_stddev,\n        max(time_window_end) as last_metric_time,\n        interval_length_sec,\n        max(computed_on) as computed_on\n    from\n        \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_base_metrics\"\n    where\n        time_window_end >\n   \n    \n    cast('2022-10-16 00:00:00' as timestamp) \n - interval '30 days'\n\nand\n        time_window_end <=\n    cast('2022-10-17 00:00:00' as timestamp)\ngroup by\n        table_name, column_name, metric, interval_length_sec\n)\n\nselect\n    s.table_name,\n    s.column_name,\n    s.metric,\n    mv.last_avg,\n    s.last_stddev,\n    s.last_metric_time,\n    s.interval_length_sec,\n    s.computed_on,\n    mv.last_median,\n    mv.last_first_quartile,\n    mv.last_third_quartile,\n    md.median_absolute_deviation last_median_absolute_deviation,\n    md.mean_absolute_deviation last_mean_absolute_deviation\nfrom\n    stats s\nleft join\n    median_value mv\n    on\n        s.table_name = mv.table_name and\n        s.column_name = mv.column_name and\n        s.metric = mv.metric and\n        s.interval_length_sec = mv.interval_length_sec\nleft join\n    median_abs_deviation md\n    on \n        s.table_name = md.table_name and\n        s.column_name = md.column_name and\n        s.metric = md.metric and\n        s.interval_length_sec = md.interval_length_sec", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_last_stats\""}, "model.re_data.re_data_last_metrics": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.time_window_end"], "nodes": ["model.re_data.re_data_base_metrics"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "metrics", "for_anomalies", "re_data_last_metrics"], "unique_id": "model.re_data.re_data_last_metrics", "raw_code": "select\n    table_name,\n    column_name,\n    metric,\n    value as last_value,\n    interval_length_sec,\n    computed_on\nfrom \n    {{ ref('re_data_base_metrics') }}\nwhere\n    time_window_end = {{- time_window_end() -}}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "metrics/for_anomalies/re_data_last_metrics.sql", "original_file_path": "models/metrics/for_anomalies/re_data_last_metrics.sql", "name": "re_data_last_metrics", "alias": "re_data_last_metrics", "checksum": {"name": "sha256", "checksum": "4de5025df7b9dc672b793596d5a2435f017279c483bdb0ec9d05fbff53b5bf6b"}, "tags": [], "refs": [["re_data_base_metrics"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/metrics/for_anomalies/re_data_last_metrics.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "enabled": true}, "created_at": 1666008871.8737142, "compiled_code": "select\n    table_name,\n    column_name,\n    metric,\n    value as last_value,\n    interval_length_sec,\n    computed_on\nfrom \n    \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_base_metrics\"\nwhere\n    time_window_end =\n    cast('2022-10-17 00:00:00' as timestamp)\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_last_metrics\""}, "model.re_data.re_data_selected": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.re_data.re_data_monitored"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "meta", "re_data_selected"], "unique_id": "model.re_data.re_data_selected", "raw_code": "select \n    name, schema, database, time_filter, metrics, columns, anomaly_detector, owners\nfrom {{ ref('re_data_monitored')}}\nwhere \n    selected = true", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "meta/re_data_selected.sql", "original_file_path": "models/meta/re_data_selected.sql", "name": "re_data_selected", "alias": "re_data_selected", "checksum": {"name": "sha256", "checksum": "3acfffe4b54e1f7cf1101f6ca1a5ce2c85432c12c82c086f0bb9236d3629c7a7"}, "tags": [], "refs": [["re_data_monitored"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/meta/re_data_selected.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "enabled": true}, "created_at": 1666008871.8852527, "compiled_code": "select \n    name, schema, database, time_filter, metrics, columns, anomaly_detector, owners\nfrom \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_monitored\"\nwhere \n    selected = true", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_selected\""}, "model.re_data.re_data_monitored": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.empty_table_generic"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "table_name", "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [{"sql": "{% if execute %}{{ pub_insert_into_re_data_monitored() }}{% endif %}", "transaction": true, "index": null}], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "meta", "re_data_monitored"], "unique_id": "model.re_data.re_data_monitored", "raw_code": "{{\n    config(\n        materialized='table',\n        unique_key = 'table_name',\n        post_hook=\"{% if execute %}{{ pub_insert_into_re_data_monitored() }}{% endif %}\"\n    )\n}}\n\n{{\n    re_data.empty_table_generic([\n        ('name', 'string'),\n        ('schema', 'string'),\n        ('database', 'string'),\n        ('time_filter', 'string'),\n        ('metrics_groups', 'string'),\n        ('additional_metrics', 'string'),\n        ('metrics', 'string'),\n        ('columns', 'string'),\n        ('anomaly_detector', 'string'),\n        ('owners', 'string'),\n        ('selected', 'boolean')\n    ])\n}}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "meta/re_data_monitored.sql", "original_file_path": "models/meta/re_data_monitored.sql", "name": "re_data_monitored", "alias": "re_data_monitored", "checksum": {"name": "sha256", "checksum": "ac536608cd17e00f2d502860fadbae32947e053a408711f74b10506824445eb0"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/meta/re_data_monitored.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "materialized": "table", "unique_key": "table_name", "post-hook": ["{% if execute %}{{ pub_insert_into_re_data_monitored() }}{% endif %}"], "enabled": true}, "created_at": 1666008871.8892229, "compiled_code": "\n\n\n    \n    with types_table as (\n        select\n            cast (null as \n    \n    varchar(2047)\n\n) as string_type,\n            cast (null as \n    \n    varchar(65535)\n\n) as long_string_type,\n            cast (1 as \n    \n    DOUBLE PRECISION\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP\n\n) as timestamp_type,\n            cast (true as \n    \n    boolean\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as name,\n    \n         string_type as schema,\n    \n         string_type as database,\n    \n         string_type as time_filter,\n    \n         string_type as metrics_groups,\n    \n         string_type as additional_metrics,\n    \n         string_type as metrics,\n    \n         string_type as columns,\n    \n         string_type as anomaly_detector,\n    \n         string_type as owners,\n    \n         boolean_type as selected\n    \n    from types_table\n    where string_type is not null\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_monitored\""}, "model.re_data.re_data_columns": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.empty_columns_table", "macro.re_data.get_schemas", "macro.dbt.run_query", "macro.re_data.row_value", "macro.re_data.name_in_db", "macro.re_data.get_monitored_columns", "macro.re_data.string_type", "macro.re_data.boolean_type", "macro.dbt_utils.current_timestamp_in_utc", "macro.re_data.timestamp_type"], "nodes": ["model.re_data.re_data_run_started_at", "model.re_data.re_data_monitored", "model.re_data.re_data_selected"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "meta", "re_data_columns"], "unique_id": "model.re_data.re_data_columns", "raw_code": "{{\n    config(\n        materialized='table',\n    )\n}}\n\n-- depends_on: {{ ref('re_data_run_started_at') }}\n-- depends_on: {{ ref('re_data_monitored') }}\n-- depends_on: {{ ref('re_data_selected') }}\n\n{% if execute %}\n    {% set schemas = run_query(re_data.get_schemas()) %}\n    {% if schemas %}\n\n    with columns_from_select as (\n        {% for row in schemas %}\n            {% set schema_name = re_data.name_in_db(re_data.row_value(row, 'schema')) %}\n            {{ get_monitored_columns(schema_name, re_data.row_value(row, 'database')) }}\n        {%- if not loop.last %} union all {%- endif %}\n        {% endfor %}\n    )\n\n    select\n        cast (table_name as {{ string_type() }} ) as name,\n        cast (table_schema as {{ string_type() }} ) as schema,\n        cast (table_catalog as {{ string_type() }} ) as database,\n        cast (column_name as {{ string_type() }} ) as column_name,\n        cast (data_type as {{ string_type() }} ) as data_type,\n        cast (case is_nullable when 'YES' then 1 else 0 end as {{ boolean_type() }} ) as is_nullable,\n        cast ({{- dbt_utils.current_timestamp_in_utc() -}} as {{ timestamp_type() }}) as computed_on\n    from columns_from_select\n\n    {% else %}\n        {{ empty_columns_table() }}\n    {% endif %}\n\n{% else %}\n    {{ empty_columns_table() }}\n{% endif %}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "meta/re_data_columns.sql", "original_file_path": "models/meta/re_data_columns.sql", "name": "re_data_columns", "alias": "re_data_columns", "checksum": {"name": "sha256", "checksum": "0f90b2ccf20a1bfce126e226194f8837c9c8cdd81c4f330dd12353aebe544ace"}, "tags": [], "refs": [["re_data_run_started_at"], ["re_data_monitored"], ["re_data_selected"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/meta/re_data_columns.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "materialized": "table", "enabled": true}, "created_at": 1666008871.915966, "compiled_code": "\n\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_run_started_at\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_monitored\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_selected\"\n\n\n    \n    \n\n    with columns_from_select as (\n        \n            \n            \n    \n    select\n        table_name,\n        table_schema,\n        table_catalog,\n        column_name,\n        data_type,\n        is_nullable\n    from\n        svv_columns\n    where\n        table_schema = 'toy_shop_feature_add_integrations_sources'\n\n union all\n        \n            \n            \n    \n    select\n        table_name,\n        table_schema,\n        table_catalog,\n        column_name,\n        data_type,\n        is_nullable\n    from\n        svv_columns\n    where\n        table_schema = 'toy_shop_feature_add_integrations'\n\n\n        \n    )\n\n    select\n        cast (table_name as \n    \n    varchar(2047)\n\n ) as name,\n        cast (table_schema as \n    \n    varchar(2047)\n\n ) as schema,\n        cast (table_catalog as \n    \n    varchar(2047)\n\n ) as database,\n        cast (column_name as \n    \n    varchar(2047)\n\n ) as column_name,\n        cast (data_type as \n    \n    varchar(2047)\n\n ) as data_type,\n        cast (case is_nullable when 'YES' then 1 else 0 end as \n    \n    boolean\n\n ) as is_nullable,\n        cast (\n    \n    getdate()\n\nas \n    \n    TIMESTAMP\n\n) as computed_on\n    from columns_from_select\n\n    \n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns\""}, "model.re_data.re_data_test_history": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.empty_table_generic"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "sync_all_columns", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "logs", "re_data_test_history"], "unique_id": "model.re_data.re_data_test_history", "raw_code": "{{\n    config(\n        materialized='incremental',\n        on_schema_change='sync_all_columns',\n    )\n}}\n\n{{\n    re_data.empty_table_generic([\n        ('table_name', 'string'),\n        ('column_name', 'string'),\n        ('test_name', 'string'),\n        ('status', 'string'),\n        ('execution_time', 'numeric'),\n        ('message', 'string'),\n        ('failures_count', 'numeric'),\n        ('failures_json', 'long_string'),\n        ('failures_table', 'long_string'),\n        ('severity', 'string'),\n        ('compiled_sql', 'long_string'),\n        ('run_at', 'timestamp')\n    ])\n}}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "logs/re_data_test_history.sql", "original_file_path": "models/logs/re_data_test_history.sql", "name": "re_data_test_history", "alias": "re_data_test_history", "checksum": {"name": "sha256", "checksum": "e73d55ac2c224a95a19f06fc98acd14e23536048131384e4f043dfe312c86a1d"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/logs/re_data_test_history.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "materialized": "incremental", "on_schema_change": "sync_all_columns", "enabled": true}, "created_at": 1666008871.9392161, "compiled_code": "\n\n\n    \n    with types_table as (\n        select\n            cast (null as \n    \n    varchar(2047)\n\n) as string_type,\n            cast (null as \n    \n    varchar(65535)\n\n) as long_string_type,\n            cast (1 as \n    \n    DOUBLE PRECISION\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP\n\n) as timestamp_type,\n            cast (true as \n    \n    boolean\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as test_name,\n    \n         string_type as status,\n    \n         numeric_type as execution_time,\n    \n         string_type as message,\n    \n         numeric_type as failures_count,\n    \n         long_string_type as failures_json,\n    \n         long_string_type as failures_table,\n    \n         string_type as severity,\n    \n         long_string_type as compiled_sql,\n    \n         timestamp_type as run_at\n    \n    from types_table\n    where string_type is not null\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_test_history\""}, "model.re_data.re_data_alerts": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.clean_blacklist", "macro.re_data.generate_schema_change_message", "macro.re_data.generate_failed_test_message"], "nodes": ["model.re_data.re_data_anomalies", "model.re_data.re_data_schema_changes", "model.re_data.re_data_test_history"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "alerts", "re_data_alerts"], "unique_id": "model.re_data.re_data_alerts", "raw_code": "select\n    'anomaly' as type,\n    {{ re_data.clean_blacklist('table_name', ['\"', '`'], '') }} as model,\n    message,\n    last_value_text as value,\n    time_window_end\nfrom\n    {{ ref('re_data_anomalies') }}\nunion all\n\nselect\n    'schema_change' as type,\n    {{ re_data.clean_blacklist('table_name', ['\"', '`'], '') }} as model,\n    {{ generate_schema_change_message('operation', 'column_name', 'prev_column_name', 'prev_data_type', 'data_type', 'detected_time') }} as message,\n    '' as value,\n    detected_time as time_window_end\nfrom {{ ref('re_data_schema_changes') }}\n\nunion all\n\nselect\n    'test' as type,\n    table_name as model,\n    {{ generate_failed_test_message('test_name', 'column_name') }},\n    status as value,\n    run_at as time_window_end\n\nfrom {{ ref('re_data_test_history') }}\nwhere status = 'Fail' or status = 'Error'", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "alerts/re_data_alerts.sql", "original_file_path": "models/alerts/re_data_alerts.sql", "name": "re_data_alerts", "alias": "re_data_alerts", "checksum": {"name": "sha256", "checksum": "16f169160f635e8d919d7707991a9341a9df664b2021e0124ca93ef75495287e"}, "tags": [], "refs": [["re_data_anomalies"], ["re_data_schema_changes"], ["re_data_test_history"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/alerts/re_data_alerts.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "enabled": true}, "created_at": 1666008871.9533927, "compiled_code": "select\n    'anomaly' as type,\n    \n\n    regexp_replace( table_name, '(\")|(`)', '') as model,\n    message,\n    last_value_text as value,\n    time_window_end\nfrom\n    \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_anomalies\"\nunion all\n\nselect\n    'schema_change' as type,\n    \n\n    regexp_replace( table_name, '(\")|(`)', '') as model,\n    \n    case \n        when operation = 'column_added'\n            then 'column ' || column_name || ' of type ' || data_type || ' was added.'\n        when operation = 'column_removed'\n            then 'column ' || prev_column_name || ' of type ' || prev_data_type || ' was removed.'\n        when operation = 'type_change'\n            then column_name || ' column data type was changed from ' || prev_data_type || ' to ' || data_type || '.'\n        else ''\n    end\n as message,\n    '' as value,\n    detected_time as time_window_end\nfrom \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_schema_changes\"\n\nunion all\n\nselect\n    'test' as type,\n    table_name as model,\n    \n    case \n        when column_name is null\n            then 'Test ' || test_name || ' failed.'\n        else\n            'Test ' || test_name || ' failed for column ' || column_name || '.'\n    end\n,\n    status as value,\n    run_at as time_window_end\n\nfrom \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_test_history\"\nwhere status = 'Fail' or status = 'Error'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_alerts\""}, "model.re_data.re_data_test_runs": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.re_data.re_data_test_history"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "alerts", "re_data_test_runs"], "unique_id": "model.re_data.re_data_test_runs", "raw_code": "{{\n    config(\n        materialized='view'\n    )\n}}\n\nselect \n    sum(case when status = 'Fail' then 1 else 0 end) as failed,\n    sum(case when status = 'Pass' then 1 else 0 end) as passed,\n    run_at\nfrom {{ ref ('re_data_test_history') }}\ngroup by run_at\norder by run_at desc", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "alerts/re_data_test_runs.sql", "original_file_path": "models/alerts/re_data_test_runs.sql", "name": "re_data_test_runs", "alias": "re_data_test_runs", "checksum": {"name": "sha256", "checksum": "9d0e3fd6a05b5b18dc9da7471a34871402b68acc230f69a771b2c351ec16f6e1"}, "tags": [], "refs": [["re_data_test_history"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/alerts/re_data_test_runs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "materialized": "view", "enabled": true}, "created_at": 1666008871.9716225, "compiled_code": "\n\nselect \n    sum(case when status = 'Fail' then 1 else 0 end) as failed,\n    sum(case when status = 'Pass' then 1 else 0 end) as passed,\n    run_at\nfrom \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_test_history\"\ngroup by run_at\norder by run_at desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_test_runs\""}, "model.re_data.re_data_anomalies": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.json_extract", "macro.re_data.numeric_type", "macro.re_data.generate_anomaly_message", "macro.re_data.generate_metric_value_text", "macro.re_data.split_and_return_nth_value"], "nodes": ["model.re_data.re_data_z_score", "model.re_data.re_data_selected"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "alerts", "re_data_anomalies"], "unique_id": "model.re_data.re_data_anomalies", "raw_code": "{{\n    config(\n        materialized='view'\n    )\n}}\nselect\n    z.id,\n    z.table_name,\n    z.column_name,\n    z.metric,\n    z.z_score_value,\n    z.modified_z_score_value,\n    m.anomaly_detector,\n    z.last_value,\n    z.last_avg,\n    z.last_median,\n    z.last_stddev,\n    z.last_median_absolute_deviation,\n    z.last_mean_absolute_deviation,\n    z.last_iqr,\n    z.last_first_quartile - (cast( {{ json_extract('m.anomaly_detector', 'whisker_boundary_multiplier') }} as {{numeric_type()}} ) * z.last_iqr) lower_bound,\n    z.last_third_quartile + (cast( {{ json_extract('m.anomaly_detector', 'whisker_boundary_multiplier') }} as {{numeric_type()}} ) * z.last_iqr) upper_bound,\n    z.last_first_quartile,\n    z.last_third_quartile,\n    z.time_window_end,\n    z.interval_length_sec,\n    z.computed_on,\n    {{ re_data.generate_anomaly_message('z.column_name', 'z.metric', 'z.last_value', 'z.last_avg') }} as message,\n    {{ re_data.generate_metric_value_text('z.metric', 'z.last_value') }} as last_value_text\nfrom\n    {{ ref('re_data_z_score')}} z \nleft join {{ ref('re_data_selected') }} m \non {{ split_and_return_nth_value('table_name', '.', 1) }} = m.database\nand {{ split_and_return_nth_value('table_name', '.', 2) }} = m.schema\nand {{ split_and_return_nth_value('table_name', '.', 3) }} = m.name\nwhere\n    case \n        when {{ json_extract('m.anomaly_detector', 'name') }} = 'z_score' \n            then abs(z_score_value) > cast({{ json_extract('m.anomaly_detector', 'threshold') }} as {{ numeric_type() }})\n        when {{ json_extract('m.anomaly_detector', 'name') }} = 'modified_z_score' \n            then abs(modified_z_score_value) > cast( {{ json_extract('m.anomaly_detector', 'threshold') }} as {{numeric_type()}} )\n        when {{ json_extract('m.anomaly_detector', 'name') }} = 'boxplot' \n            then (\n                z.last_value < z.last_first_quartile - (cast( {{ json_extract('m.anomaly_detector', 'whisker_boundary_multiplier') }} as {{numeric_type()}} ) * z.last_iqr)\n                or \n                z.last_value > z.last_third_quartile + (cast( {{ json_extract('m.anomaly_detector', 'whisker_boundary_multiplier') }} as {{numeric_type()}} ) * z.last_iqr)\n            )\n        else false\n    end", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "alerts/re_data_anomalies.sql", "original_file_path": "models/alerts/re_data_anomalies.sql", "name": "re_data_anomalies", "alias": "re_data_anomalies", "checksum": {"name": "sha256", "checksum": "4ed1250b6c7c2a82e8b1014823e73cf9d710e99ac36f86c649b88057d425b672"}, "tags": [], "refs": [["re_data_z_score"], ["re_data_selected"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/alerts/re_data_anomalies.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "materialized": "view", "enabled": true}, "created_at": 1666008871.975838, "compiled_code": "\nselect\n    z.id,\n    z.table_name,\n    z.column_name,\n    z.metric,\n    z.z_score_value,\n    z.modified_z_score_value,\n    m.anomaly_detector,\n    z.last_value,\n    z.last_avg,\n    z.last_median,\n    z.last_stddev,\n    z.last_median_absolute_deviation,\n    z.last_mean_absolute_deviation,\n    z.last_iqr,\n    z.last_first_quartile - (cast( \n\n  case when is_valid_json( m.anomaly_detector ) then json_extract_path_text(m.anomaly_detector, 'whisker_boundary_multiplier' ) else null end\n \n as \n    \n    DOUBLE PRECISION\n\n ) * z.last_iqr) lower_bound,\n    z.last_third_quartile + (cast( \n\n  case when is_valid_json( m.anomaly_detector ) then json_extract_path_text(m.anomaly_detector, 'whisker_boundary_multiplier' ) else null end\n \n as \n    \n    DOUBLE PRECISION\n\n ) * z.last_iqr) upper_bound,\n    z.last_first_quartile,\n    z.last_third_quartile,\n    z.time_window_end,\n    z.interval_length_sec,\n    z.computed_on,\n    \n\n    case when z.column_name != '' then metric || '(' || column_name || ')'\n    else metric\n    end \n    || ' is ' ||\n    \n    \n    trim(to_char(\n    abs(\n        ( \n            cast(last_value - last_avg as \n    \n    DOUBLE PRECISION\n\n)\n        ) / \n        nullif(\n            cast( z.last_avg as \n    \n    DOUBLE PRECISION\n\n )\n        , 0) * 100.0\n    )\n, '9999999999999999990D00'))\n\n\n    || '% ' ||\n    \n    case when z.last_value > z.last_avg then 'greater than' \n    when z.last_value = z.last_avg then 'equal to'\n    else 'less than' end\n\n    || ' average.'\n as message,\n    \n    case \n        when z.metric = 'freshness' \n            then cast(\n    \n    trim(to_char(\n    cast(z.last_value as \n    \n    DOUBLE PRECISION\n\n) / 3600\n, '9999999999999999990D00'))\n\n as \n    \n    varchar(2047)\n\n) || ' hours'\n        when \n    \n    (z.metric ~ 'percent')\n\n \n            then cast(\n    \n    trim(to_char(z.last_value, '9999999999999999990D00'))\n\n as \n    \n    varchar(2047)\n\n) || '%'\n        when \n    \n    (z.metric ~ 'count')\n\n \n            then cast(z.last_value as \n    \n    varchar(2047)\n\n)\n        else cast(\n    \n    trim(to_char(z.last_value, '9999999999999999990D00'))\n\n as \n    \n    varchar(2047)\n\n)\n    end\n\n as last_value_text\nfrom\n    \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_z_score\" z \nleft join \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_selected\" m \non split_part(\n\n    regexp_replace( table_name, '(\")|(`)', ''), '.', 1) = m.database\nand split_part(\n\n    regexp_replace( table_name, '(\")|(`)', ''), '.', 2) = m.schema\nand split_part(\n\n    regexp_replace( table_name, '(\")|(`)', ''), '.', 3) = m.name\nwhere\n    case \n        when \n\n  case when is_valid_json( m.anomaly_detector ) then json_extract_path_text(m.anomaly_detector, 'name' ) else null end\n \n = 'z_score' \n            then abs(z_score_value) > cast(\n\n  case when is_valid_json( m.anomaly_detector ) then json_extract_path_text(m.anomaly_detector, 'threshold' ) else null end\n \n as \n    \n    DOUBLE PRECISION\n\n)\n        when \n\n  case when is_valid_json( m.anomaly_detector ) then json_extract_path_text(m.anomaly_detector, 'name' ) else null end\n \n = 'modified_z_score' \n            then abs(modified_z_score_value) > cast( \n\n  case when is_valid_json( m.anomaly_detector ) then json_extract_path_text(m.anomaly_detector, 'threshold' ) else null end\n \n as \n    \n    DOUBLE PRECISION\n\n )\n        when \n\n  case when is_valid_json( m.anomaly_detector ) then json_extract_path_text(m.anomaly_detector, 'name' ) else null end\n \n = 'boxplot' \n            then (\n                z.last_value < z.last_first_quartile - (cast( \n\n  case when is_valid_json( m.anomaly_detector ) then json_extract_path_text(m.anomaly_detector, 'whisker_boundary_multiplier' ) else null end\n \n as \n    \n    DOUBLE PRECISION\n\n ) * z.last_iqr)\n                or \n                z.last_value > z.last_third_quartile + (cast( \n\n  case when is_valid_json( m.anomaly_detector ) then json_extract_path_text(m.anomaly_detector, 'whisker_boundary_multiplier' ) else null end\n \n as \n    \n    DOUBLE PRECISION\n\n ) * z.last_iqr)\n            )\n        else false\n    end", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_anomalies\""}, "model.re_data.re_data_schema_changes": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.empty_table_generic", "macro.re_data.in_compile"], "nodes": ["model.re_data.re_data_run_started_at", "model.re_data.re_data_columns_over_time", "model.re_data.re_data_monitored", "model.re_data.re_data_selected"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "sync_all_columns", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "alerts", "re_data_schema_changes"], "unique_id": "model.re_data.re_data_schema_changes", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key = 'id',\n        on_schema_change='sync_all_columns',\n    )\n}}\n\n-- depends_on: {{ ref('re_data_run_started_at') }}\n-- depends_on: {{ ref('re_data_columns_over_time') }}\n-- depends_on: {{ ref('re_data_monitored') }}\n-- depends_on: {{ ref('re_data_selected') }}\n\n{% if execute and not re_data.in_compile() %}\n    {% set last_data_points %} \n        select\n            distinct detected_time\n        from {{ ref('re_data_columns_over_time') }}\n        order by\n        detected_time desc limit 2;\n    {% endset %}\n\n    {% set detected_times = run_query(last_data_points) %}\n\n    {% set times_list = detected_times.columns[0].values() %}\n    {% set most_recent_time = times_list[0] %}\n\n    {% if times_list | length > 1 %}\n        {% set prev_most_recent = times_list[1] %}\n    {% else %}\n        {% set prev_most_recent = times_list[0] %}\n    {% endif %}\n{% else %}\n    {% set times_list = () %}\n{% endif %}\n\n{% if times_list == () %}\n    {{\n        re_data.empty_table_generic([\n            ('id', 'string'),\n            ('table_name', 'string'),\n            ('operation', 'string'),\n            ('column_name', 'string'),\n            ('data_type', 'string'),\n            ('is_nullable', 'boolean'),\n            ('prev_column_name', 'string'),\n            ('prev_data_type', 'string'),\n            ('prev_is_nullable', 'boolean'),\n            ('detected_time', 'timestamp')\n            ])\n    }}\n{% else %}\n\n    with curr_monitored_schema as (\n        select * from {{ ref('re_data_columns_over_time')}}\n        where detected_time = cast('{{ most_recent_time }}' as {{ timestamp_type() }})\n        and table_name in (\n            select {{ full_table_name('name', 'schema', 'database') }} from {{ ref('re_data_selected')}}\n        )\n    ),\n\n\n    prev_monitored_schema as (\n        select * from {{ ref('re_data_columns_over_time')}}\n        where detected_time = cast('{{ prev_most_recent}}' as {{ timestamp_type() }})\n        and table_name in (\n            select {{ full_table_name('name', 'schema', 'database') }} from {{ ref('re_data_selected')}}\n        )\n    ),\n\n    all_changes as (\n            (\n            select\n                curr.table_name as table_name,\n                'type_change' as operation,\n                curr.column_name as column_name,\n                curr.data_type as data_type,\n                curr.is_nullable as is_nullable,\n\n                prev.column_name as prev_column_name,\n                prev.data_type as prev_data_type,\n                prev.is_nullable as prev_is_nullable\n            \n            from curr_monitored_schema curr inner join prev_monitored_schema prev on (curr.table_name = prev.table_name and curr.column_name = prev.column_name)\n            where\n                curr.data_type != prev.data_type or \n                curr.is_nullable != prev.is_nullable\n            )\n\n        union all\n\n        (\n\n            select\n                curr.table_name as table_name,\n                'column_added' as operation,\n                curr.column_name as column_name,\n                curr.data_type as data_type,\n                curr.is_nullable as is_nullable,\n\n                null as prev_column_name,\n                null as prev_data_type,\n                null as prev_is_nullable\n            \n            from curr_monitored_schema curr left join prev_monitored_schema prev on (curr.table_name = prev.table_name and curr.column_name = prev.column_name)\n            where prev.table_name is null and prev.column_name is null\n            {# note: when a column is added, make sure we only detect for models that were previously monitored,\n            this avoids a situation where a newly monitored model has all its columns detected with 'column_added' operation#}\n            and curr.table_name in (\n                select table_name from prev_monitored_schema\n            )\n        \n        )\n\n        union all\n\n        (\n\n            select\n                prev.table_name as table_name,\n                'column_removed' as operation,\n                null as column_name,\n                null as data_type,\n                null as is_nullable,\n\n                prev.column_name as prev_column_name,\n                prev.data_type as prev_data_type,\n                prev.is_nullable as prev_is_nullable\n            \n            from prev_monitored_schema prev left join curr_monitored_schema curr on (curr.table_name = prev.table_name and curr.column_name = prev.column_name)\n            where curr.table_name is null and curr.column_name is null\n\n        )\n    ),\n\n    all_with_time as (\n        select\n            all_changes.table_name,\n            all_changes.operation,\n            all_changes.column_name,\n            all_changes.data_type,\n            all_changes.is_nullable,\n            all_changes.prev_column_name,\n            all_changes.prev_data_type,\n            all_changes.prev_is_nullable,\n            cast({{dbt_utils.current_timestamp_in_utc()}} as {{ timestamp_type() }}) as detected_time\n        from all_changes\n    )\n\n    select \n        cast ({{ dbt_utils.surrogate_key([\n        'table_name',\n        'column_name',\n        'detected_time'\n        ]) }} as {{ string_type() }} ) as id,\n        table_name,\n        cast (operation as {{ string_type() }}) as operation,\n        column_name,\n        data_type,\n        is_nullable,\n        prev_column_name,\n        prev_data_type,\n        prev_is_nullable,\n        detected_time\n    from all_with_time\n    \n{% endif %}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "alerts/re_data_schema_changes.sql", "original_file_path": "models/alerts/re_data_schema_changes.sql", "name": "re_data_schema_changes", "alias": "re_data_schema_changes", "checksum": {"name": "sha256", "checksum": "512090ea7f7f9d00e7dd3ab6d249fbead654fdad29b774a802a2d51ed75b006c"}, "tags": [], "refs": [["re_data_run_started_at"], ["re_data_columns_over_time"], ["re_data_monitored"], ["re_data_selected"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/alerts/re_data_schema_changes.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "materialized": "incremental", "unique_key": "id", "on_schema_change": "sync_all_columns", "enabled": true}, "created_at": 1666008872.0859015, "compiled_code": "\n\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_run_started_at\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns_over_time\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_monitored\"\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_selected\"\n\n\n    \n\n\n\n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    varchar(2047)\n\n) as string_type,\n            cast (null as \n    \n    varchar(65535)\n\n) as long_string_type,\n            cast (1 as \n    \n    DOUBLE PRECISION\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP\n\n) as timestamp_type,\n            cast (true as \n    \n    boolean\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as id,\n    \n         string_type as table_name,\n    \n         string_type as operation,\n    \n         string_type as column_name,\n    \n         string_type as data_type,\n    \n         boolean_type as is_nullable,\n    \n         string_type as prev_column_name,\n    \n         string_type as prev_data_type,\n    \n         boolean_type as prev_is_nullable,\n    \n         timestamp_type as detected_time\n    \n    from types_table\n    where string_type is not null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_schema_changes\""}, "model.re_data.re_data_z_score": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.time_window_end", "macro.dbt_utils.current_timestamp_in_utc", "macro.re_data.timestamp_type", "macro.dbt_utils.surrogate_key", "macro.re_data.string_type"], "nodes": ["model.re_data.re_data_last_stats", "model.re_data.re_data_last_metrics"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "sync_all_columns", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "alerts", "re_data_z_score"], "unique_id": "model.re_data.re_data_z_score", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key = 'id',\n        on_schema_change='sync_all_columns',\n    )\n}}\n\nwith z_score_without_id as (\n\n    select\n        stats.table_name as table_name,\n        stats.column_name as column_name,\n        stats.metric as metric,\n        stats.interval_length_sec,\n        (last_metric.last_value - stats.last_avg) / (stats.last_stddev + 0.0000000001) as z_score_value,\n        case\n            when stats.last_median_absolute_deviation = 0 then\n                (last_metric.last_value - stats.last_median) / (1.253314 * (stats.last_mean_absolute_deviation + 0.0000000001))\n            else\n                (0.6745 * (last_metric.last_value - stats.last_median)) / (stats.last_median_absolute_deviation + 0.0000000001) \n        end as modified_z_score_value,\n        last_metric.last_value as last_value,\n        stats.last_avg as last_avg,\n        stats.last_median as last_median,\n        stats.last_stddev as last_stddev,\n        stats.last_median_absolute_deviation,\n        stats.last_mean_absolute_deviation,\n        stats.last_third_quartile - stats.last_first_quartile as last_iqr,\n        stats.last_first_quartile,\n        stats.last_third_quartile,\n        {{ time_window_end() }} as time_window_end,\n        cast( {{dbt_utils.current_timestamp_in_utc()}} as {{ timestamp_type() }} ) as computed_on\n    from\n        {{ ref('re_data_last_stats') }} as stats,\n        {{ ref('re_data_last_metrics') }} as last_metric\n    where\n        stats.table_name = last_metric.table_name and\n        stats.column_name = last_metric.column_name and\n        stats.metric = last_metric.metric and\n        (\n            stats.interval_length_sec = last_metric.interval_length_sec or\n            (stats.interval_length_sec is null and last_metric.interval_length_sec is null)\n        ) and\n        last_metric.last_value is not null and\n        stats.last_avg is not null and\n        stats.last_stddev is not null\n    )\n\nselect\n    cast ({{ dbt_utils.surrogate_key([\n      'table_name',\n      'column_name',\n      'metric',\n      'interval_length_sec',\n      'time_window_end'\n    ]) }} as {{ string_type() }} ) as id,\n    table_name,\n    column_name,\n    metric,\n    z_score_value,\n    modified_z_score_value,\n    last_value,\n    last_avg,\n    last_median,\n    last_stddev,\n    last_median_absolute_deviation,\n    last_mean_absolute_deviation,\n    last_iqr,\n    last_first_quartile,\n    last_third_quartile,\n    time_window_end,\n    interval_length_sec,\n    computed_on\n\nfrom z_score_without_id", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "alerts/re_data_z_score.sql", "original_file_path": "models/alerts/re_data_z_score.sql", "name": "re_data_z_score", "alias": "re_data_z_score", "checksum": {"name": "sha256", "checksum": "77745327261d3029ba43bfa78ba9bc8760774627deffcad0d8ef9bdcbcb344c4"}, "tags": [], "refs": [["re_data_last_stats"], ["re_data_last_metrics"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/alerts/re_data_z_score.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "materialized": "incremental", "unique_key": "id", "on_schema_change": "sync_all_columns", "enabled": true}, "created_at": 1666008872.113021, "compiled_code": "\n\nwith z_score_without_id as (\n\n    select\n        stats.table_name as table_name,\n        stats.column_name as column_name,\n        stats.metric as metric,\n        stats.interval_length_sec,\n        (last_metric.last_value - stats.last_avg) / (stats.last_stddev + 0.0000000001) as z_score_value,\n        case\n            when stats.last_median_absolute_deviation = 0 then\n                (last_metric.last_value - stats.last_median) / (1.253314 * (stats.last_mean_absolute_deviation + 0.0000000001))\n            else\n                (0.6745 * (last_metric.last_value - stats.last_median)) / (stats.last_median_absolute_deviation + 0.0000000001) \n        end as modified_z_score_value,\n        last_metric.last_value as last_value,\n        stats.last_avg as last_avg,\n        stats.last_median as last_median,\n        stats.last_stddev as last_stddev,\n        stats.last_median_absolute_deviation,\n        stats.last_mean_absolute_deviation,\n        stats.last_third_quartile - stats.last_first_quartile as last_iqr,\n        stats.last_first_quartile,\n        stats.last_third_quartile,\n        \n    cast('2022-10-17 00:00:00' as timestamp)\n as time_window_end,\n        cast( \n    \n    getdate()\n\n as \n    \n    TIMESTAMP\n\n ) as computed_on\n    from\n        \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_last_stats\" as stats,\n        \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_last_metrics\" as last_metric\n    where\n        stats.table_name = last_metric.table_name and\n        stats.column_name = last_metric.column_name and\n        stats.metric = last_metric.metric and\n        (\n            stats.interval_length_sec = last_metric.interval_length_sec or\n            (stats.interval_length_sec is null and last_metric.interval_length_sec is null)\n        ) and\n        last_metric.last_value is not null and\n        stats.last_avg is not null and\n        stats.last_stddev is not null\n    )\n\nselect\n    cast (md5(cast(coalesce(cast(table_name as varchar), '') || '-' || coalesce(cast(column_name as varchar), '') || '-' || coalesce(cast(metric as varchar), '') || '-' || coalesce(cast(interval_length_sec as varchar), '') || '-' || coalesce(cast(time_window_end as varchar), '') as varchar)) as \n    \n    varchar(2047)\n\n ) as id,\n    table_name,\n    column_name,\n    metric,\n    z_score_value,\n    modified_z_score_value,\n    last_value,\n    last_avg,\n    last_median,\n    last_stddev,\n    last_median_absolute_deviation,\n    last_mean_absolute_deviation,\n    last_iqr,\n    last_first_quartile,\n    last_third_quartile,\n    time_window_end,\n    interval_length_sec,\n    computed_on\n\nfrom z_score_without_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_z_score\""}, "model.re_data.re_data_run_started_at": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "re_internal", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re_internal", "fqn": ["re_data", "internal", "re_data_run_started_at"], "unique_id": "model.re_data.re_data_run_started_at", "raw_code": "{{\n    config(\n        materialized='table',\n    )\n}}\n\nselect {{ run_started_at.timestamp() * 1000000 }} as run_started_at", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "internal/re_data_run_started_at.sql", "original_file_path": "models/internal/re_data_run_started_at.sql", "name": "re_data_run_started_at", "alias": "re_data_run_started_at", "checksum": {"name": "sha256", "checksum": "9eff211f9f07f1678f1b085deab95fc6d74bd74f79014f2f111e2eba01516421"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/internal/re_data_run_started_at.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re_internal", "materialized": "table", "enabled": true}, "created_at": 1666008872.1313167, "compiled_code": "\n\nselect 1666009178506322.0 as run_started_at", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_run_started_at\""}, "model.re_data.re_data_last_table_samples_part": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.empty_last_table_samples"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "re_internal", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re_internal", "fqn": ["re_data", "internal", "samples", "re_data_last_table_samples_part"], "unique_id": "model.re_data.re_data_last_table_samples_part", "raw_code": "{{\n    config(\n        materialized='table',\n    )\n}}\n\n{{ re_data.empty_last_table_samples() }}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "internal/samples/re_data_last_table_samples_part.sql", "original_file_path": "models/internal/samples/re_data_last_table_samples_part.sql", "name": "re_data_last_table_samples_part", "alias": "re_data_last_table_samples_part", "checksum": {"name": "sha256", "checksum": "bf46e48c8777912e23efb87a79c7ee7b1c7d07bd29f56734ed6281cd3acaee87"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/internal/samples/re_data_last_table_samples_part.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re_internal", "materialized": "table", "enabled": true}, "created_at": 1666008872.1412458, "compiled_code": "\n\n\n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    varchar(2047)\n\n) as string_type,\n            cast (null as \n    \n    varchar(65535)\n\n) as long_string_type,\n            cast (1 as \n    \n    DOUBLE PRECISION\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP\n\n) as timestamp_type,\n            cast (true as \n    \n    boolean\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as sample_data\n    \n    from types_table\n    where string_type is not null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_table_samples_part\""}, "model.re_data.re_data_last_table_samples": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.re_data_last_table_samples"], "nodes": ["model.re_data.re_data_selected", "model.re_data.re_data_monitored", "model.re_data.re_data_columns", "model.re_data.re_data_run_started_at", "model.re_data.re_data_last_table_samples_part"]}, "config": {"enabled": true, "alias": null, "schema": "re_internal", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re_internal", "fqn": ["re_data", "internal", "samples", "re_data_last_table_samples"], "unique_id": "model.re_data.re_data_last_table_samples", "raw_code": "{{ re_data_last_table_samples() }}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "internal/samples/re_data_last_table_samples.sql", "original_file_path": "models/internal/samples/re_data_last_table_samples.sql", "name": "re_data_last_table_samples", "alias": "re_data_last_table_samples", "checksum": {"name": "sha256", "checksum": "96c8497110c5bea20dbfa1ca45ad5ae61a5ec998ae86df9317b380fe282b6e6e"}, "tags": [], "refs": [["re_data_selected"], ["re_data_monitored"], ["re_data_columns"], ["re_data_run_started_at"], ["re_data_last_table_samples_part"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/internal/samples/re_data_last_table_samples.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re_internal", "materialized": "table", "enabled": true}, "created_at": 1666008872.1557622, "compiled_code": "\n    \n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_selected\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_monitored\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_run_started_at\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_table_samples_part\"\n    \n\n\n\n    \n\n    \n        \n    \n    \n\n    \n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    varchar(2047)\n\n) as string_type,\n            cast (null as \n    \n    varchar(65535)\n\n) as long_string_type,\n            cast (1 as \n    \n    DOUBLE PRECISION\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP\n\n) as timestamp_type,\n            cast (true as \n    \n    boolean\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as sample_data\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_table_samples\""}, "model.re_data.re_data_last_base_metrics_part1": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.re_data_last_base_metrics_part"], "nodes": ["model.re_data.re_data_columns"]}, "config": {"enabled": true, "alias": null, "schema": "re_internal", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re_internal", "fqn": ["re_data", "internal", "metrics", "base", "re_data_last_base_metrics_part1"], "unique_id": "model.re_data.re_data_last_base_metrics_part1", "raw_code": "{{ re_data_last_base_metrics_part() }}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "internal/metrics/base/re_data_last_base_metrics_part1.sql", "original_file_path": "models/internal/metrics/base/re_data_last_base_metrics_part1.sql", "name": "re_data_last_base_metrics_part1", "alias": "re_data_last_base_metrics_part1", "checksum": {"name": "sha256", "checksum": "3b165368a21099a738af4fa48ef0cdc5e65757334cbc7efb6401ce2fd4990f42"}, "tags": [], "refs": [["re_data_columns"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/internal/metrics/base/re_data_last_base_metrics_part1.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re_internal", "materialized": "table", "enabled": true}, "created_at": 1666008872.1959817, "compiled_code": "\n\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns\"\n\n\n\n\n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    varchar(2047)\n\n) as string_type,\n            cast (null as \n    \n    varchar(65535)\n\n) as long_string_type,\n            cast (1 as \n    \n    DOUBLE PRECISION\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP\n\n) as timestamp_type,\n            cast (true as \n    \n    boolean\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part1\""}, "model.re_data.re_data_last_base_metrics_part2": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.re_data_last_base_metrics_part"], "nodes": ["model.re_data.re_data_columns"]}, "config": {"enabled": true, "alias": null, "schema": "re_internal", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re_internal", "fqn": ["re_data", "internal", "metrics", "base", "re_data_last_base_metrics_part2"], "unique_id": "model.re_data.re_data_last_base_metrics_part2", "raw_code": "{{ re_data_last_base_metrics_part() }}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "internal/metrics/base/re_data_last_base_metrics_part2.sql", "original_file_path": "models/internal/metrics/base/re_data_last_base_metrics_part2.sql", "name": "re_data_last_base_metrics_part2", "alias": "re_data_last_base_metrics_part2", "checksum": {"name": "sha256", "checksum": "3b165368a21099a738af4fa48ef0cdc5e65757334cbc7efb6401ce2fd4990f42"}, "tags": [], "refs": [["re_data_columns"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/internal/metrics/base/re_data_last_base_metrics_part2.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re_internal", "materialized": "table", "enabled": true}, "created_at": 1666008872.2113209, "compiled_code": "\n\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns\"\n\n\n\n\n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    varchar(2047)\n\n) as string_type,\n            cast (null as \n    \n    varchar(65535)\n\n) as long_string_type,\n            cast (1 as \n    \n    DOUBLE PRECISION\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP\n\n) as timestamp_type,\n            cast (true as \n    \n    boolean\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part2\""}, "model.re_data.re_data_last_base_metrics_thread3": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.re_data_last_base_metrics_thread"], "nodes": ["model.re_data.re_data_selected", "model.re_data.re_data_monitored", "model.re_data.re_data_columns", "model.re_data.re_data_run_started_at", "model.re_data.re_data_last_base_metrics_part3"]}, "config": {"enabled": true, "alias": null, "schema": "re_internal", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re_internal", "fqn": ["re_data", "internal", "metrics", "base", "re_data_last_base_metrics_thread3"], "unique_id": "model.re_data.re_data_last_base_metrics_thread3", "raw_code": "{{ re_data_last_base_metrics_thread(3)}}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "internal/metrics/base/re_data_last_base_metrics_thread3.sql", "original_file_path": "models/internal/metrics/base/re_data_last_base_metrics_thread3.sql", "name": "re_data_last_base_metrics_thread3", "alias": "re_data_last_base_metrics_thread3", "checksum": {"name": "sha256", "checksum": "260166d3d7120fdda5b8c28c2a6de356155cc7aad7058cd8e90b31ad0d5b2762"}, "tags": [], "refs": [["re_data_selected"], ["re_data_monitored"], ["re_data_columns"], ["re_data_run_started_at"], ["re_data_last_base_metrics_part3"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/internal/metrics/base/re_data_last_base_metrics_thread3.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re_internal", "materialized": "table", "enabled": true}, "created_at": 1666008872.2225142, "compiled_code": "\n    \n    \n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_selected\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_monitored\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_run_started_at\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part3\"\n    \n\n\n\n    \n\n    \n\n    \n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    varchar(2047)\n\n) as string_type,\n            cast (null as \n    \n    varchar(65535)\n\n) as long_string_type,\n            cast (1 as \n    \n    DOUBLE PRECISION\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP\n\n) as timestamp_type,\n            cast (true as \n    \n    boolean\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_thread3\""}, "model.re_data.re_data_last_base_metrics_thread0": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.re_data_last_base_metrics_thread"], "nodes": ["model.re_data.re_data_selected", "model.re_data.re_data_monitored", "model.re_data.re_data_columns", "model.re_data.re_data_run_started_at", "model.re_data.re_data_last_base_metrics_part0"]}, "config": {"enabled": true, "alias": null, "schema": "re_internal", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re_internal", "fqn": ["re_data", "internal", "metrics", "base", "re_data_last_base_metrics_thread0"], "unique_id": "model.re_data.re_data_last_base_metrics_thread0", "raw_code": "{{ re_data_last_base_metrics_thread(0)}}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "internal/metrics/base/re_data_last_base_metrics_thread0.sql", "original_file_path": "models/internal/metrics/base/re_data_last_base_metrics_thread0.sql", "name": "re_data_last_base_metrics_thread0", "alias": "re_data_last_base_metrics_thread0", "checksum": {"name": "sha256", "checksum": "712c8a9dbf0b14ed9ea070c13489b1966f748e4b57ccc23a75428de29a100f4c"}, "tags": [], "refs": [["re_data_selected"], ["re_data_monitored"], ["re_data_columns"], ["re_data_run_started_at"], ["re_data_last_base_metrics_part0"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/internal/metrics/base/re_data_last_base_metrics_thread0.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re_internal", "materialized": "table", "enabled": true}, "created_at": 1666008872.2401586, "compiled_code": "\n    \n    \n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_selected\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_monitored\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_run_started_at\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part0\"\n    \n\n\n\n    \n\n    \n\n    \n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    varchar(2047)\n\n) as string_type,\n            cast (null as \n    \n    varchar(65535)\n\n) as long_string_type,\n            cast (1 as \n    \n    DOUBLE PRECISION\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP\n\n) as timestamp_type,\n            cast (true as \n    \n    boolean\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_thread0\""}, "model.re_data.re_data_last_base_metrics_part0": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.re_data_last_base_metrics_part"], "nodes": ["model.re_data.re_data_columns"]}, "config": {"enabled": true, "alias": null, "schema": "re_internal", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re_internal", "fqn": ["re_data", "internal", "metrics", "base", "re_data_last_base_metrics_part0"], "unique_id": "model.re_data.re_data_last_base_metrics_part0", "raw_code": "{{ re_data_last_base_metrics_part() }}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "internal/metrics/base/re_data_last_base_metrics_part0.sql", "original_file_path": "models/internal/metrics/base/re_data_last_base_metrics_part0.sql", "name": "re_data_last_base_metrics_part0", "alias": "re_data_last_base_metrics_part0", "checksum": {"name": "sha256", "checksum": "3b165368a21099a738af4fa48ef0cdc5e65757334cbc7efb6401ce2fd4990f42"}, "tags": [], "refs": [["re_data_columns"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/internal/metrics/base/re_data_last_base_metrics_part0.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re_internal", "materialized": "table", "enabled": true}, "created_at": 1666008872.2517247, "compiled_code": "\n\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns\"\n\n\n\n\n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    varchar(2047)\n\n) as string_type,\n            cast (null as \n    \n    varchar(65535)\n\n) as long_string_type,\n            cast (1 as \n    \n    DOUBLE PRECISION\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP\n\n) as timestamp_type,\n            cast (true as \n    \n    boolean\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part0\""}, "model.re_data.re_data_last_base_metrics_thread1": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.re_data_last_base_metrics_thread"], "nodes": ["model.re_data.re_data_selected", "model.re_data.re_data_monitored", "model.re_data.re_data_columns", "model.re_data.re_data_run_started_at", "model.re_data.re_data_last_base_metrics_part1"]}, "config": {"enabled": true, "alias": null, "schema": "re_internal", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re_internal", "fqn": ["re_data", "internal", "metrics", "base", "re_data_last_base_metrics_thread1"], "unique_id": "model.re_data.re_data_last_base_metrics_thread1", "raw_code": "{{ re_data_last_base_metrics_thread(1)}}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "internal/metrics/base/re_data_last_base_metrics_thread1.sql", "original_file_path": "models/internal/metrics/base/re_data_last_base_metrics_thread1.sql", "name": "re_data_last_base_metrics_thread1", "alias": "re_data_last_base_metrics_thread1", "checksum": {"name": "sha256", "checksum": "9d31906e3cef0a10ade87631d4b46f7a3ff8d83c6e240335d2adf6a0eace88fb"}, "tags": [], "refs": [["re_data_selected"], ["re_data_monitored"], ["re_data_columns"], ["re_data_run_started_at"], ["re_data_last_base_metrics_part1"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/internal/metrics/base/re_data_last_base_metrics_thread1.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re_internal", "materialized": "table", "enabled": true}, "created_at": 1666008872.262767, "compiled_code": "\n    \n    \n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_selected\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_monitored\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_run_started_at\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part1\"\n    \n\n\n\n    \n\n    \n\n    \n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    varchar(2047)\n\n) as string_type,\n            cast (null as \n    \n    varchar(65535)\n\n) as long_string_type,\n            cast (1 as \n    \n    DOUBLE PRECISION\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP\n\n) as timestamp_type,\n            cast (true as \n    \n    boolean\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_thread1\""}, "model.re_data.re_data_last_base_metrics_part3": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.re_data_last_base_metrics_part"], "nodes": ["model.re_data.re_data_columns"]}, "config": {"enabled": true, "alias": null, "schema": "re_internal", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re_internal", "fqn": ["re_data", "internal", "metrics", "base", "re_data_last_base_metrics_part3"], "unique_id": "model.re_data.re_data_last_base_metrics_part3", "raw_code": "{{ re_data_last_base_metrics_part() }}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "internal/metrics/base/re_data_last_base_metrics_part3.sql", "original_file_path": "models/internal/metrics/base/re_data_last_base_metrics_part3.sql", "name": "re_data_last_base_metrics_part3", "alias": "re_data_last_base_metrics_part3", "checksum": {"name": "sha256", "checksum": "3b165368a21099a738af4fa48ef0cdc5e65757334cbc7efb6401ce2fd4990f42"}, "tags": [], "refs": [["re_data_columns"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/internal/metrics/base/re_data_last_base_metrics_part3.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re_internal", "materialized": "table", "enabled": true}, "created_at": 1666008872.276059, "compiled_code": "\n\n-- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns\"\n\n\n\n\n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    varchar(2047)\n\n) as string_type,\n            cast (null as \n    \n    varchar(65535)\n\n) as long_string_type,\n            cast (1 as \n    \n    DOUBLE PRECISION\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP\n\n) as timestamp_type,\n            cast (true as \n    \n    boolean\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part3\""}, "model.re_data.re_data_last_base_metrics_thread2": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.re_data.re_data_last_base_metrics_thread"], "nodes": ["model.re_data.re_data_selected", "model.re_data.re_data_monitored", "model.re_data.re_data_columns", "model.re_data.re_data_run_started_at", "model.re_data.re_data_last_base_metrics_part2"]}, "config": {"enabled": true, "alias": null, "schema": "re_internal", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re_internal", "fqn": ["re_data", "internal", "metrics", "base", "re_data_last_base_metrics_thread2"], "unique_id": "model.re_data.re_data_last_base_metrics_thread2", "raw_code": "{{ re_data_last_base_metrics_thread(2)}}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "internal/metrics/base/re_data_last_base_metrics_thread2.sql", "original_file_path": "models/internal/metrics/base/re_data_last_base_metrics_thread2.sql", "name": "re_data_last_base_metrics_thread2", "alias": "re_data_last_base_metrics_thread2", "checksum": {"name": "sha256", "checksum": "1ef292e43baeb737bdab647664e7e0d99cf698424f0767bad3dc9172caafd6d9"}, "tags": [], "refs": [["re_data_selected"], ["re_data_monitored"], ["re_data_columns"], ["re_data_run_started_at"], ["re_data_last_base_metrics_part2"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/models/internal/metrics/base/re_data_last_base_metrics_thread2.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re_internal", "materialized": "table", "enabled": true}, "created_at": 1666008872.2874234, "compiled_code": "\n    \n    \n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_selected\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_monitored\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_columns\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_run_started_at\"\n    \n        -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_part2\"\n    \n\n\n\n    \n\n    \n\n    \n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    varchar(2047)\n\n) as string_type,\n            cast (null as \n    \n    varchar(65535)\n\n) as long_string_type,\n            cast (1 as \n    \n    DOUBLE PRECISION\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP\n\n) as timestamp_type,\n            cast (true as \n    \n    boolean\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_re_internal\".\"re_data_last_base_metrics_thread2\""}, "operation.re_data.re_data-on-run-end-0": {"compiled": true, "resource_type": "operation", "depends_on": {"macros": ["macro.re_data.save_test_history"], "nodes": ["model.re_data.re_data_test_history"]}, "config": {"enabled": true, "alias": null, "schema": "re", "database": null, "tags": [], "meta": {}, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_re", "fqn": ["re_data", "hooks", "re_data-on-run-end-0"], "unique_id": "operation.re_data.re_data-on-run-end-0", "raw_code": "{% if var('re_data:save_test_history') %} {{ re_data.save_test_history(results) }} {% endif %}", "language": "sql", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "hooks/re_data-on-run-end-0.sql", "original_file_path": "./dbt_project.yml", "name": "re_data-on-run-end-0", "alias": "re_data-on-run-end-0", "checksum": {"name": "sha256", "checksum": "56e9151b9308184322c193fcd4c2150e497f0b5b0517cd25c01c96531490e506"}, "tags": ["on-run-end"], "refs": [["re_data_test_history"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/re_data/./dbt_project.yml/hooks/re_data-on-run-end-0.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "re", "enabled": true}, "created_at": 1666008872.3172157, "compiled_code": "  ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 0}, "test.toy_shop.not_null_orders_status.8a27272c0a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "status", "model": "{{ get_where_subquery(ref('orders')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["seed.toy_shop.orders"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_dbt_test__audit", "fqn": ["toy_shop", "not_null_orders_status"], "unique_id": "test.toy_shop.not_null_orders_status.8a27272c0a", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "not_null_orders_status.sql", "original_file_path": "seeds/schema.yml", "name": "not_null_orders_status", "alias": "not_null_orders_status", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["orders"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/toy_shop/seeds/schema.yml/not_null_orders_status.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1666008872.388671, "compiled_code": "\n    \n    \n\n\n\nselect status\nfrom \"re_data_testing\".\"toy_shop_feature_add_integrations\".\"orders\"\nwhere status is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "status", "file_key_name": "seeds.orders"}, "test.toy_shop.re_data_assert_in_range_orders_550__row_count__450.6aae41952a": {"test_metadata": {"name": "assert_in_range", "kwargs": {"metric": "row_count", "min_value": 450, "max_value": 550, "model": "{{ get_where_subquery(ref('orders')) }}"}, "namespace": "re_data"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.re_data.test_assert_in_range", "macro.dbt.get_where_subquery"], "nodes": ["seed.toy_shop.orders", "model.re_data.re_data_base_metrics"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_dbt_test__audit", "fqn": ["toy_shop", "re_data_assert_in_range_orders_550__row_count__450"], "unique_id": "test.toy_shop.re_data_assert_in_range_orders_550__row_count__450.6aae41952a", "raw_code": "{{ re_data.test_assert_in_range(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "re_data_assert_in_range_orders_550__row_count__450.sql", "original_file_path": "seeds/schema.yml", "name": "re_data_assert_in_range_orders_550__row_count__450", "alias": "re_data_assert_in_range_orders_550__row_count__450", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["orders"], ["re_data_base_metrics"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/toy_shop/seeds/schema.yml/re_data_assert_in_range_orders_550__row_count__450.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1666008872.3912838, "compiled_code": "\n    -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_base_metrics\"\n    \n        \n    select * from \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_base_metrics\"\n    where\n        table_name = '\"re_data_testing\".\"toy_shop_feature_add_integrations\".\"orders\"' and\n        metric = 'row_count' and\n        \n        \n        not ( value >= 450 and value <= 550 )\n        \n\n\n    \n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "seeds.orders"}, "test.toy_shop.not_null_pending_orders_status.f8a64aa7bf": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "status", "model": "{{ get_where_subquery(ref('pending_orders')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.toy_shop.pending_orders"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_dbt_test__audit", "fqn": ["toy_shop", "revenue", "not_null_pending_orders_status"], "unique_id": "test.toy_shop.not_null_pending_orders_status.f8a64aa7bf", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "not_null_pending_orders_status.sql", "original_file_path": "models/revenue/schema.yml", "name": "not_null_pending_orders_status", "alias": "not_null_pending_orders_status", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["pending_orders"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/toy_shop/models/revenue/schema.yml/not_null_pending_orders_status.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1666008872.4155793, "compiled_code": "\n    \n    \n\n\n\nselect status\nfrom \"re_data_testing\".\"toy_shop_feature_add_integrations\".\"pending_orders\"\nwhere status is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "status", "file_key_name": "models.pending_orders"}, "test.toy_shop.re_data_source_assert_in_range_toy_shop_feature_add_integrations_sources_toy_shop_customers_20__row_count__10.e41bfaad68": {"test_metadata": {"name": "assert_in_range", "kwargs": {"metric": "row_count", "min_value": 10, "max_value": 20, "model": "{{ get_where_subquery(source('toy_shop_feature_add_integrations_sources', 'toy_shop_customers')) }}"}, "namespace": "re_data"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.re_data.test_assert_in_range", "macro.dbt.get_where_subquery"], "nodes": ["source.toy_shop.toy_shop_feature_add_integrations_sources.toy_shop_customers", "model.re_data.re_data_base_metrics"]}, "config": {"enabled": true, "alias": "re_data_source_assert_in_range_7133b0db4b752bec1c4d600dc5d59ad4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_dbt_test__audit", "fqn": ["toy_shop", "re_data_source_assert_in_range_toy_shop_feature_add_integrations_sources_toy_shop_customers_20__row_count__10"], "unique_id": "test.toy_shop.re_data_source_assert_in_range_toy_shop_feature_add_integrations_sources_toy_shop_customers_20__row_count__10.e41bfaad68", "raw_code": "{{ re_data.test_assert_in_range(**_dbt_generic_test_kwargs) }}{{ config(alias=\"re_data_source_assert_in_range_7133b0db4b752bec1c4d600dc5d59ad4\") }}", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "re_data_source_assert_in_range_7133b0db4b752bec1c4d600dc5d59ad4.sql", "original_file_path": "sources/schema.yml", "name": "re_data_source_assert_in_range_toy_shop_feature_add_integrations_sources_toy_shop_customers_20__row_count__10", "alias": "re_data_source_assert_in_range_7133b0db4b752bec1c4d600dc5d59ad4", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["re_data_base_metrics"]], "sources": [["toy_shop_feature_add_integrations_sources", "toy_shop_customers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/toy_shop/sources/schema.yml/re_data_source_assert_in_range_7133b0db4b752bec1c4d600dc5d59ad4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "re_data_source_assert_in_range_7133b0db4b752bec1c4d600dc5d59ad4"}, "created_at": 1666008872.430054, "compiled_code": "\n    -- depends_on: \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_base_metrics\"\n    \n        \n    select * from \"re_data_testing\".\"toy_shop_feature_add_integrations_re\".\"re_data_base_metrics\"\n    where\n        table_name = '\"re_data_testing\".\"toy_shop_feature_add_integrations_sources\".\"toy_shop_customers\"' and\n        metric = 'row_count' and\n        \n        \n        not ( value >= 10 and value <= 20 )\n        \n\n\n    \n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "sources.toy_shop_feature_add_integrations_sources"}, "test.toy_shop.source_not_null_toy_shop_feature_add_integrations_sources_toy_shop_customers_age.6da1e19b44": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "age", "model": "{{ get_where_subquery(source('toy_shop_feature_add_integrations_sources', 'toy_shop_customers')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["source.toy_shop.toy_shop_feature_add_integrations_sources.toy_shop_customers"]}, "config": {"enabled": true, "alias": "source_not_null_toy_shop_featu_aafbaa485f79fd0bf0ce011f99323417", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_dbt_test__audit", "fqn": ["toy_shop", "source_not_null_toy_shop_feature_add_integrations_sources_toy_shop_customers_age"], "unique_id": "test.toy_shop.source_not_null_toy_shop_feature_add_integrations_sources_toy_shop_customers_age.6da1e19b44", "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"source_not_null_toy_shop_featu_aafbaa485f79fd0bf0ce011f99323417\") }}", "language": "sql", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "source_not_null_toy_shop_featu_aafbaa485f79fd0bf0ce011f99323417.sql", "original_file_path": "sources/schema.yml", "name": "source_not_null_toy_shop_feature_add_integrations_sources_toy_shop_customers_age", "alias": "source_not_null_toy_shop_featu_aafbaa485f79fd0bf0ce011f99323417", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [], "sources": [["toy_shop_feature_add_integrations_sources", "toy_shop_customers"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/toy_shop/sources/schema.yml/source_not_null_toy_shop_featu_aafbaa485f79fd0bf0ce011f99323417.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_toy_shop_featu_aafbaa485f79fd0bf0ce011f99323417"}, "created_at": 1666008872.4378273, "compiled_code": "\n    \n    \n\n\n\nselect age\nfrom \"re_data_testing\".\"toy_shop_feature_add_integrations_sources\".\"toy_shop_customers\"\nwhere age is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "age", "file_key_name": "sources.toy_shop_feature_add_integrations_sources"}}, "sources": {"source.toy_shop.toy_shop_feature_add_integrations_sources.toy_shop_customers": {"fqn": ["toy_shop", "toy_shop_feature_add_integrations_sources", "toy_shop_customers"], "database": "re_data_testing", "schema": "toy_shop_feature_add_integrations_sources", "unique_id": "source.toy_shop.toy_shop_feature_add_integrations_sources.toy_shop_customers", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "sources/schema.yml", "original_file_path": "sources/schema.yml", "name": "toy_shop_customers", "source_name": "toy_shop_feature_add_integrations_sources", "source_description": "", "loader": "", "identifier": "toy_shop_customers", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "age": {"name": "age", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "joined_at": {"name": "joined_at", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "re_data_monitored": true, "re_data_time_filter": "joined_at", "re_data_columns": ["first_name", "last_name", "age"]}, "patch_path": null, "unrendered_config": {"re_data_monitored": true, "re_data_time_filter": "joined_at", "re_data_columns": ["first_name", "last_name", "age"]}, "relation_name": "\"re_data_testing\".\"toy_shop_feature_add_integrations_sources\".\"toy_shop_customers\"", "created_at": 1666008872.4396582}}, "macros": {"macro.toy_shop.schema_change_add_orders_column": {"unique_id": "macro.toy_shop.schema_change_add_orders_column", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "macros/schema_changes.sql", "original_file_path": "macros/schema_changes.sql", "name": "schema_change_add_orders_column", "macro_sql": "{% macro schema_change_add_orders_column() %}\n    {% set alter_table %}\n        alter table {{ ref('orders')}} add column completed boolean\n    {% endset %}\n    {% do run_query(alter_table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.1552453, "supported_languages": null}, "macro.toy_shop.schema_change_drop_orders_column": {"unique_id": "macro.toy_shop.schema_change_drop_orders_column", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "macros/schema_changes.sql", "original_file_path": "macros/schema_changes.sql", "name": "schema_change_drop_orders_column", "macro_sql": "{% macro schema_change_drop_orders_column() %}\n    {% set alter_table %}\n        alter table {{ ref('orders')}} drop column completed\n    {% endset %}\n    {% do run_query(alter_table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.156053, "supported_languages": null}, "macro.toy_shop.get_schemas_used": {"unique_id": "macro.toy_shop.get_schemas_used", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "macros/alter_toy_shop_tables.sql", "original_file_path": "macros/alter_toy_shop_tables.sql", "name": "get_schemas_used", "macro_sql": "{% macro get_schemas_used(schema_name) %}\n    {% set schemas = [\n        schema_name,\n        schema_name + '_re',\n        schema_name + '_re_internal',\n        schema_name + '_sources',\n        schema_name + '_dbt_test__audit'\n    ] %}\n    {{ return (schemas) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.158674, "supported_languages": null}, "macro.toy_shop.drop_all_schemas": {"unique_id": "macro.toy_shop.drop_all_schemas", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "macros/alter_toy_shop_tables.sql", "original_file_path": "macros/alter_toy_shop_tables.sql", "name": "drop_all_schemas", "macro_sql": "{% macro drop_all_schemas(schema_name) %}\n    {% set schemas_to_drop = get_schemas_used(schema_name) %}\n    {{ adapter.dispatch('drop_all_schemas')(schemas_to_drop) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.toy_shop.get_schemas_used", "macro.toy_shop.redshift__drop_all_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.15946, "supported_languages": null}, "macro.toy_shop.default__drop_all_schemas": {"unique_id": "macro.toy_shop.default__drop_all_schemas", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "macros/alter_toy_shop_tables.sql", "original_file_path": "macros/alter_toy_shop_tables.sql", "name": "default__drop_all_schemas", "macro_sql": "{% macro default__drop_all_schemas(schemas_to_drop) %}\n    {% for schema in schemas_to_drop %}\n        {% set relation = api.Relation.create(database=target.database, schema=schema) %}\n        {% do adapter.drop_schema(relation) %}\n    {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.1605883, "supported_languages": null}, "macro.toy_shop.redshift__drop_all_schemas": {"unique_id": "macro.toy_shop.redshift__drop_all_schemas", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "macros/alter_toy_shop_tables.sql", "original_file_path": "macros/alter_toy_shop_tables.sql", "name": "redshift__drop_all_schemas", "macro_sql": "{% macro redshift__drop_all_schemas(schemas_to_drop) %}\n    {# \n        dropping schemas with adapter.drop_schema doesn't seem to work with redshift\n        so we default to issuing DDL commands to redshift\n    #}\n    {% set drop_query %}\n        {% for schema in schemas_to_drop %}\n            drop schema if exists {{schema}} cascade;\n        {% endfor %}\n    {% endset %}\n    {% do run_query(drop_query) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.1615326, "supported_languages": null}, "macro.toy_shop.create_required_schemas": {"unique_id": "macro.toy_shop.create_required_schemas", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "macros/alter_toy_shop_tables.sql", "original_file_path": "macros/alter_toy_shop_tables.sql", "name": "create_required_schemas", "macro_sql": "{% macro create_required_schemas(schema_name) %}\n    {# required to manually create schemas used for redshift tests #}\n    {% set schemas_to_drop = get_schemas_used(schema_name) %}\n    {% set create_query %}\n        {% for schema in schemas_to_drop %}\n            create schema if not exists {{schema}};\n        {% endfor %}\n    {% endset %}\n    {% do run_query(create_query) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.toy_shop.get_schemas_used", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.1626859, "supported_languages": null}, "macro.toy_shop.create_toy_shop_source_tables": {"unique_id": "macro.toy_shop.create_toy_shop_source_tables", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "macros/source_tables.sql", "original_file_path": "macros/source_tables.sql", "name": "create_toy_shop_source_tables", "macro_sql": "{% macro create_toy_shop_source_tables() %}\n\n    {% set sql_to_run %}\n    CREATE SCHEMA IF NOT EXISTS {{target.schema}}_sources;\n    DROP TABLE IF EXISTS {{target.schema}}_sources.toy_shop_customers;\n    CREATE TABLE IF NOT EXISTS {{target.schema}}_sources.toy_shop_customers (\n        id {{ re_data.integer_type() }},\n        first_name {{ re_data.string_type() }},\n        last_name {{ re_data.string_type() }},\n        age {{ re_data.numeric_type() }},\n        joined_at {{ re_data.timestamp_type() }}\n    );\n    INSERT INTO {{target.schema}}_sources.toy_shop_customers (id, first_name, last_name, age, joined_at) VALUES \n        (1, 'Ella', 'Jackson', NULL, '2021-01-16 20:32:43'),\n        (2, 'Charlie', 'Rodriguez', 22, '2021-01-28 21:00:02'),\n        (3, 'George', 'Taylor', NULL, '2021-01-18 20:04:08'),\n        (4, 'Poppy', 'Allen', NULL, '2021-01-18 14:38:53'),\n        (5, 'Leo', 'Thomas', 22, '2021-01-30 17:07:14'),\n        (6, 'Ella', 'Robinson', 57, '2021-01-07 12:29:36'),\n        (7, 'Sophia', 'Perez', NULL, '2021-01-09 01:59:54'),\n        (8, 'Jacob', 'Williams', 0, '2021-01-26 10:44:29'),\n        (9, 'Olivia', 'Williams', NULL, '2021-01-06 05:30:09'),\n        (10, 'Olivia', 'Thomas', 51, '2021-01-10 00:06:46'),\n        (11, 'Alfie', 'Perez', 0, '2021-01-28 09:29:22'),\n        (12, 'Ella', 'Smith', 47, '2021-01-01 20:51:09'),\n        (13, 'Ava', 'Thomas', 27, '2021-01-30 05:02:45'),\n        (14, 'Jacob', 'Hall', 0, '2021-01-30 08:30:44'),\n        (15, 'Harry', 'Lopez', 42, '2021-01-01 15:39:11'),\n        (16, 'Amelia', 'Allen', 36, '2021-01-02 17:24:47'),\n        (17, 'Jacob', 'Brown', 57, '2021-01-08 08:46:44'),\n        (18, 'Sophia', 'Davis', 37, '2021-01-03 04:40:56'),\n        (19, 'Jacob', 'Moore', 21, '2021-01-28 08:39:21'),\n        (20, 'Freddie', 'Hall', 58, '2021-01-17 21:38:10'),\n        (21, 'Charlie', 'Martinez', 37, '2021-01-25 13:47:02'),\n        (22, 'Amelia', 'Johnson', 63, '2021-01-19 15:06:19'),\n        (23, 'Sophia', 'Walker', 51, '2021-01-26 13:32:08'),\n        (24, 'Leo', 'White', 21, '2021-01-08 03:48:55'),\n        (25, 'Grace', 'Taylor', NULL, '2021-01-14 01:25:50'),\n        (26, 'Isla', 'Jones', 42, '2021-01-29 10:12:55'),\n        (27, 'Mia', 'Garcia', 55, '2021-01-08 11:30:34'),\n        (28, 'Jacob', 'Anderson', 58, '2021-01-24 10:36:55'),\n        (29, 'Oliver', 'Clark', NULL, '2021-01-18 01:40:02'),\n        (30, 'Olivia', 'Martin', NULL, '2021-01-18 17:18:48'),\n        (31, 'Ava', 'Taylor', 64, '2021-01-28 10:56:11'),\n        (32, 'Ava', 'Allen', NULL, '2021-01-14 17:51:00'),\n        (33, 'Noah', 'Perez', 0, '2021-01-26 19:48:28'),\n        (34, 'Sophia', 'Taylor', 33, '2021-01-23 19:03:48'),\n        (35, 'Leo', 'Walker', NULL, '2021-01-06 12:20:52'),\n        (36, 'Charlie', 'Harris', 41, '2021-01-13 23:23:32'),\n        (37, 'Alfie', 'Anderson', 43, '2021-01-18 00:55:04'),\n        (38, 'Ella', 'Miller', NULL, '2021-01-13 13:46:26'),\n        (39, 'Leo', 'Smith', 25, '2021-01-27 19:13:45'),\n        (40, 'Amelia', 'Anderson', 44, '2021-01-09 01:36:08'),\n        (41, 'Jack', 'Taylor', 26, '2021-01-27 11:54:13'),\n        (42, 'Ella', 'Lopez', NULL, '2021-01-11 08:19:11'),\n        (43, 'Sophia', 'Perez', 64, '2021-01-29 10:24:19'),\n        (44, 'Alfie', 'Harris', 50, '2021-01-03 13:24:27'),\n        (45, 'Mia', 'Allen', 24, '2021-01-10 12:53:56'),\n        (46, 'Amelia', 'White', 55, '2021-01-12 15:09:40'),\n        (47, 'Alfie', 'Johnson', 59, '2021-01-19 01:43:21'),\n        (48, 'Freddie', 'White', NULL, '2021-01-10 11:57:22'),\n        (49, 'Ella', 'Thompson', 27, '2021-01-17 11:21:57'),\n        (50, 'George', 'Walker', 56, '2021-01-06 09:38:25'),\n        (51, 'Isla', 'Walker', 60, '2021-01-29 17:27:20'),\n        (52, 'Grace', 'Martinez', 56, '2021-01-18 10:58:32'),\n        (53, 'Freddie', 'Harris', 38, '2021-01-11 20:53:39'),\n        (54, 'Jack', 'Wilson', 49, '2021-01-10 06:55:52'),\n        (55, 'Charlie', 'Hernandez', 23, '2021-01-28 06:01:04'),\n        (56, 'Jack', 'Moore', 55, '2021-01-05 12:51:52'),\n        (57, 'Charlie', 'Williams', 55, '2021-01-13 15:37:23'),\n        (58, 'Leo', 'Jones', 40, '2021-01-11 05:58:37'),\n        (59, 'Alfie', 'Thompson', 54, '2021-01-10 17:42:23'),\n        (60, 'Isla', 'Davis', 58, '2021-01-12 10:38:15'),\n        (61, 'Olivia', 'Smith', 35, '2021-01-04 00:37:19'),\n        (62, 'Mia', 'Taylor', 45, '2021-01-03 02:48:09'),\n        (63, 'Harry', 'Anderson', 0, '2021-01-21 09:58:15'),\n        (64, 'Poppy', 'Harris', 52, '2021-01-12 18:58:25'),\n        (65, 'Leo', 'Perez', 63, '2021-01-24 08:32:10'),\n        (66, 'Isla', 'Taylor', 0, '2021-01-21 12:02:53'),\n        (67, 'Ella', 'Thompson', 25, '2021-01-10 02:28:28'),\n        (68, 'Poppy', 'Davis', NULL, '2021-01-10 23:35:49'),\n        (69, 'George', 'Johnson', 29, '2021-01-18 17:44:22'),\n        (70, 'Isla', 'Williams', NULL, '2021-01-07 16:55:33'),\n        (71, 'Alfie', 'Lopez', NULL, '2021-01-10 15:59:05'),\n        (72, 'Alfie', 'Lewis', NULL, '2021-01-13 22:49:02'),\n        (73, 'Harry', 'Hall', 62, '2021-01-25 20:58:43'),\n        (74, 'Harry', 'Anderson', NULL, '2021-01-14 12:09:19'),\n        (75, 'George', 'Wilson', 29, '2021-01-19 08:18:36'),\n        (76, 'Ella', 'Martin', 31, '2021-01-21 14:27:46'),\n        (77, 'Olivia', 'Clark', 62, '2021-01-07 05:04:37'),\n        (78, 'Charlie', 'Martin', 58, '2021-01-03 17:20:40'),\n        (79, 'Noah', 'Lee', 58, '2021-01-26 08:11:10'),\n        (80, 'Ava', 'Taylor', 19, '2021-01-03 17:50:45'),\n        (81, 'Noah', 'Miller', 44, '2021-01-16 23:02:58'),\n        (82, 'Harry', 'Garcia', 43, '2021-01-17 13:04:13'),\n        (83, 'Jack', 'Allen', NULL, '2021-01-18 23:05:02'),\n        (84, 'Mia', 'Clark', NULL, '2021-01-18 18:45:30'),\n        (85, 'Poppy', 'Martinez', NULL, '2021-01-09 13:45:48'),\n        (86, 'Emily', 'Rodriguez', NULL, '2021-01-05 17:52:18'),\n        (87, 'George', 'Hall', NULL, '2021-01-13 06:23:50'),\n        (88, 'Noah', 'Lee', 37, '2021-01-17 16:24:06'),\n        (89, 'Emily', 'Smith', NULL, '2021-01-15 09:37:10'),\n        (90, 'Mia', 'Moore', 61, '2021-01-17 20:31:47'),\n        (91, 'Emily', 'Gonzalez', 0, '2021-01-25 02:53:25'),\n        (92, 'Olivia', 'Taylor', 61, '2021-01-26 01:46:04'),\n        (93, 'Freddie', 'Hernandez', 53, '2021-01-04 04:14:05'),\n        (94, 'Oliver', 'Perez', 29, '2021-01-15 01:36:23'),\n        (95, 'Sophia', 'Brown', 41, '2021-01-01 17:59:14'),\n        (96, 'Emily', 'Miller', 32, '2021-01-25 03:11:49'),\n        (97, 'George', 'Allen', 65, '2021-01-08 02:22:44'),\n        (98, 'Harry', 'Wilson', 50, '2021-01-19 18:33:54'),\n        (99, 'Isla', 'Young', 23, '2021-01-22 11:57:35'),\n        (100, 'Ella', 'Lewis', 45, '2021-01-11 08:26:21'),\n        (101, 'Olivia', 'Lopez', 56, '2021-01-16 19:43:56'),\n        (102, 'Freddie', 'Harris', 0, '2021-01-25 03:29:25'),\n        (103, 'Sophia', 'Miller', 27, '2021-01-21 12:53:21'),\n        (104, 'Ella', 'Anderson', 49, '2021-01-05 02:44:32'),\n        (105, 'Mia', 'Martinez', 0, '2021-01-20 05:53:55'),\n        (106, 'George', 'Lopez', 52, '2021-01-11 03:03:02'),\n        (107, 'Leo', 'Thompson', 20, '2021-01-29 18:51:05'),\n        (108, 'Jacob', 'Wilson', 0, '2021-01-25 15:11:54'),\n        (109, 'Ava', 'Lee', 0, '2021-01-20 12:39:12'),\n        (110, 'Amelia', 'Martinez', 45, '2021-01-26 06:28:56'),\n        (111, 'Oliver', 'Lee', 29, '2021-01-06 05:33:02'),\n        (112, 'Freddie', 'Miller', 19, '2021-01-18 16:37:04'),\n        (113, 'Olivia', 'Harris', 46, '2021-01-01 09:28:16'),\n        (114, 'Noah', 'Miller', 0, '2021-01-26 06:42:00'),\n        (115, 'George', 'Gonzalez', 26, '2021-01-17 13:35:20'),\n        (116, 'Emily', 'Lewis', 37, '2021-01-08 06:13:35'),\n        (117, 'Emily', 'Thompson', 18, '2021-01-26 01:30:44'),\n        (118, 'Olivia', 'Walker', NULL, '2021-01-15 06:47:51'),\n        (119, 'Leo', 'Williams', 45, '2021-01-17 15:19:17'),\n        (120, 'Isla', 'Allen', NULL, '2021-01-16 02:40:11'),\n        (121, 'Amelia', 'Taylor', 63, '2021-01-13 06:33:11'),\n        (122, 'Isla', 'Thomas', NULL, '2021-01-07 08:38:37'),\n        (123, 'Freddie', 'Martinez', 32, '2021-01-18 00:29:05'),\n        (124, 'Harry', 'Perez', NULL, '2021-01-19 20:48:51'),\n        (125, 'Jacob', 'Martin', 64, '2021-01-24 20:43:00'),\n        (126, 'Freddie', 'Allen', 0, '2021-01-30 09:41:58'),\n        (127, 'Grace', 'Jones', 53, '2021-01-18 06:59:01'),\n        (128, 'Oliver', 'Lewis', 19, '2021-01-10 07:59:27'),\n        (129, 'Alfie', 'Lopez', 26, '2021-01-15 20:08:48'),\n        (130, 'Charlie', 'Jones', 0, '2021-01-24 04:29:49'),\n        (131, 'George', 'Garcia', 34, '2021-01-04 15:27:35'),\n        (132, 'Emily', 'Miller', NULL, '2021-01-10 12:07:15'),\n        (133, 'Grace', 'Wilson', 19, '2021-01-03 15:45:54'),\n        (134, 'Jack', 'Jones', 30, '2021-01-05 11:29:47'),\n        (135, 'Ava', 'Jones', NULL, '2021-01-18 01:57:37'),\n        (136, 'Ella', 'Taylor', 0, '2021-01-30 14:30:19'),\n        (137, 'Isla', 'Taylor', NULL, '2021-01-16 09:25:41'),\n        (138, 'Mia', 'Walker', 27, '2021-01-26 17:54:44'),\n        (139, 'Grace', 'Thompson', 54, '2021-01-18 20:59:25'),\n        (140, 'Poppy', 'Johnson', NULL, '2021-01-16 05:41:01'),\n        (141, 'Charlie', 'Wilson', 36, '2021-01-26 22:27:49'),\n        (142, 'Ava', 'Clark', 52, '2021-01-11 21:51:35'),\n        (143, 'Freddie', 'Jackson', 25, '2021-01-10 15:40:19'),\n        (144, 'Jacob', 'Young', 44, '2021-01-18 09:30:59'),\n        (145, 'Olivia', 'Garcia', NULL, '2021-01-05 01:53:48'),\n        (146, 'Sophia', 'Harris', NULL, '2021-01-09 13:15:16'),\n        (147, 'Isla', 'Martinez', 48, '2021-01-12 02:27:02'),\n        (148, 'Amelia', 'Rodriguez', 61, '2021-01-08 16:42:28'),\n        (149, 'Leo', 'Johnson', 33, '2021-01-23 06:25:44'),\n        (150, 'Emily', 'Perez', 48, '2021-01-20 15:54:36'),\n        (151, 'Amelia', 'Hall', 31, '2021-01-15 09:25:22'),\n        (152, 'Olivia', 'Garcia', 19, '2021-01-24 01:35:48'),\n        (153, 'Noah', 'Wilson', 42, '2021-01-17 02:30:41'),\n        (154, 'Oliver', 'Johnson', 57, '2021-01-11 06:34:31'),\n        (155, 'Leo', 'Harris', 26, '2021-01-23 00:45:54'),\n        (156, 'Amelia', 'Clark', 62, '2021-01-15 14:12:31'),\n        (157, 'Ava', 'Lewis', 34, '2021-01-02 20:09:06'),\n        (158, 'Alfie', 'Lee', 38, '2021-01-26 07:31:56'),\n        (159, 'Emily', 'Perez', 27, '2021-01-27 19:26:27'),\n        (160, 'Oliver', 'Harris', 0, '2021-01-30 19:26:22'),\n        (161, 'Jacob', 'Smith', 30, '2021-01-23 09:36:07'),\n        (162, 'Ella', 'Lopez', NULL, '2021-01-05 14:05:01'),\n        (163, 'Emily', 'Miller', 22, '2021-01-20 15:17:28'),\n        (164, 'Oliver', 'Garcia', 65, '2021-01-13 05:48:56'),\n        (165, 'Amelia', 'Williams', 57, '2021-01-09 04:02:55'),\n        (166, 'Ella', 'Taylor', 36, '2021-01-29 01:02:18'),\n        (167, 'Oliver', 'Brown', NULL, '2021-01-19 03:53:24'),\n        (168, 'Mia', 'Allen', 30, '2021-01-03 16:20:56'),\n        (169, 'Jacob', 'Williams', 26, '2021-01-17 23:38:59'),\n        (170, 'George', 'White', 61, '2021-01-10 00:00:29'),\n        (171, 'Ava', 'Jones', 21, '2021-01-02 22:06:00'),\n        (172, 'Jacob', 'Brown', 25, '2021-01-11 05:34:36'),\n        (173, 'Emily', 'Davis', 58, '2021-01-28 17:41:06'),\n        (174, 'Mia', 'Thomas', 44, '2021-01-19 13:16:12'),\n        (175, 'Harry', 'Taylor', NULL, '2021-01-13 16:06:03'),\n        (176, 'Alfie', 'Davis', NULL, '2021-01-05 01:03:30'),\n        (177, 'Emily', 'Perez', 38, '2021-01-24 23:49:06'),\n        (178, 'Ella', 'Hall', 27, '2021-01-29 21:45:57'),\n        (179, 'Poppy', 'Wilson', 49, '2021-01-08 18:34:55'),\n        (180, 'Alfie', 'Clark', 0, '2021-01-27 07:49:16'),\n        (181, 'Ava', 'Lewis', 40, '2021-01-13 22:46:57'),\n        (182, 'Charlie', 'Thomas', 61, '2021-01-23 17:00:05'),\n        (183, 'Noah', 'White', 48, '2021-01-24 06:15:14'),\n        (184, 'Freddie', 'Martin', 64, '2021-01-15 14:33:11'),\n        (185, 'Jack', 'Brown', 55, '2021-01-18 12:07:57'),\n        (186, 'Sophia', 'Garcia', NULL, '2021-01-18 07:39:10'),\n        (187, 'Ella', 'Hernandez', 34, '2021-01-13 12:50:49'),\n        (188, 'Harry', 'Clark', 51, '2021-01-18 12:43:19'),\n        (189, 'Olivia', 'Smith', 63, '2021-01-17 13:28:12'),\n        (190, 'Harry', 'Gonzalez', 55, '2021-01-25 04:43:59'),\n        (191, 'Jacob', 'Gonzalez', 27, '2021-01-02 01:41:24'),\n        (192, 'Isla', 'Lee', 59, '2021-01-01 06:57:23'),\n        (193, 'Jack', 'Clark', 48, '2021-01-09 14:18:07'),\n        (194, 'Ella', 'Taylor', 33, '2021-01-03 14:57:51'),\n        (195, 'Leo', 'Lopez', NULL, '2021-01-19 05:40:34'),\n        (196, 'George', 'Hernandez', 42, '2021-01-04 19:01:18'),\n        (197, 'Isla', 'Davis', 45, '2021-01-20 19:50:56'),\n        (198, 'Harry', 'Martin', 21, '2021-01-30 12:46:17'),\n        (199, 'Mia', 'Garcia', NULL, '2021-01-01 07:51:57'),\n        (200, 'Isla', 'White', 51, '2021-01-19 02:52:46'),\n        (201, 'Oliver', 'Hall', 48, '2021-01-10 19:13:41'),\n        (202, 'Sophia', 'Rodriguez', 0, '2021-01-26 08:13:47'),\n        (203, 'Oliver', 'Smith', 24, '2021-01-18 14:11:21'),\n        (204, 'Leo', 'Jones', 22, '2021-01-22 11:25:17'),\n        (205, 'Oliver', 'Smith', 23, '2021-01-04 12:51:17'),\n        (206, 'Amelia', 'Williams', NULL, '2021-01-06 04:02:33'),\n        (207, 'Jacob', 'Garcia', NULL, '2021-01-06 16:54:00'),\n        (208, 'Amelia', 'Young', NULL, '2021-01-18 12:48:39'),\n        (209, 'George', 'Garcia', 0, '2021-01-21 18:40:19'),\n        (210, 'Alfie', 'Lewis', 64, '2021-01-29 08:38:45'),\n        (211, 'Emily', 'Martin', 18, '2021-01-09 18:15:11'),\n        (212, 'Emily', 'Gonzalez', 26, '2021-01-18 07:29:37'),\n        (213, 'Freddie', 'Johnson', 52, '2021-01-14 13:29:07'),\n        (214, 'Amelia', 'Perez', 0, '2021-01-20 02:41:29'),\n        (215, 'Mia', 'Davis', NULL, '2021-01-07 19:19:01'),\n        (216, 'Ella', 'Wilson', 48, '2021-01-02 12:08:55'),\n        (217, 'Sophia', 'Miller', 0, '2021-01-23 17:25:23'),\n        (218, 'Freddie', 'Thomas', 47, '2021-01-11 08:34:17'),\n        (219, 'Jacob', 'Lewis', 53, '2021-01-05 05:06:57'),\n        (220, 'Poppy', 'Walker', 24, '2021-01-27 18:57:13'),\n        (221, 'Jack', 'Gonzalez', NULL, '2021-01-18 06:57:24'),\n        (222, 'Freddie', 'Rodriguez', 36, '2021-01-10 18:58:47'),\n        (223, 'Sophia', 'Anderson', 20, '2021-01-28 20:02:33'),\n        (224, 'Grace', 'Lewis', 31, '2021-01-24 18:58:53'),\n        (225, 'Isla', 'Davis', NULL, '2021-01-10 23:10:47'),\n        (226, 'Noah', 'Rodriguez', 39, '2021-01-16 18:31:59'),\n        (227, 'Emily', 'Moore', 55, '2021-01-29 09:27:18'),\n        (228, 'Noah', 'Lee', NULL, '2021-01-02 20:32:12'),\n        (229, 'Sophia', 'Robinson', 27, '2021-01-28 05:40:41'),\n        (230, 'Mia', 'Taylor', 0, '2021-01-20 00:53:56'),\n        (231, 'Jacob', 'Gonzalez', 45, '2021-01-08 14:58:54'),\n        (232, 'Ella', 'Martin', 36, '2021-01-23 17:40:19'),\n        (233, 'Jacob', 'Lee', 30, '2021-01-18 12:45:38'),\n        (234, 'Ava', 'Lopez', 61, '2021-01-30 09:44:46'),\n        (235, 'George', 'Harris', 24, '2021-01-25 19:19:16'),\n        (236, 'Emily', 'Lopez', NULL, '2021-01-09 21:07:09'),\n        (237, 'Sophia', 'Jones', 18, '2021-01-19 09:19:04'),\n        (238, 'Oliver', 'White', 59, '2021-01-17 09:11:57'),\n        (239, 'Harry', 'Walker', 47, '2021-01-06 06:35:40'),\n        (240, 'Amelia', 'Taylor', NULL, '2021-01-17 06:28:41'),\n        (241, 'Ava', 'Smith', 20, '2021-01-05 23:49:28'),\n        (242, 'Poppy', 'Smith', 0, '2021-01-25 03:43:13'),\n        (243, 'Grace', 'Miller', 40, '2021-01-08 20:28:32'),\n        (244, 'Harry', 'Brown', 36, '2021-01-12 21:43:01'),\n        (245, 'Ava', 'Davis', NULL, '2021-01-05 19:18:34'),\n        (246, 'Charlie', 'Lee', 30, '2021-01-27 12:33:24'),\n        (247, 'Olivia', 'Johnson', 57, '2021-01-04 17:52:39'),\n        (248, 'Olivia', 'Thompson', 25, '2021-01-27 05:11:33'),\n        (249, 'Freddie', 'Lopez', 27, '2021-01-06 20:55:17'),\n        (250, 'Sophia', 'Gonzalez', 32, '2021-01-03 04:21:18'),\n        (251, 'Isla', 'Jones', NULL, '2021-01-14 12:49:35'),\n        (252, 'Jacob', 'White', 58, '2021-01-28 21:47:47'),\n        (253, 'George', 'Allen', 24, '2021-01-20 10:34:54'),\n        (254, 'Emily', 'Davis', 30, '2021-01-14 12:04:48'),\n        (255, 'George', 'Clark', 61, '2021-01-07 14:14:11'),\n        (256, 'Emily', 'Anderson', 34, '2021-01-16 14:33:38'),\n        (257, 'Ella', 'Wilson', 51, '2021-01-21 19:38:56'),\n        (258, 'Isla', 'Lee', 32, '2021-01-15 13:28:26'),\n        (259, 'Harry', 'Allen', NULL, '2021-01-16 06:34:26'),\n        (260, 'Jack', 'Taylor', 38, '2021-01-31 00:25:01'),\n        (261, 'Isla', 'Martin', NULL, '2021-01-19 19:04:44'),\n        (262, 'Charlie', 'Moore', NULL, '2021-01-18 01:22:11'),\n        (263, 'Grace', 'White', 61, '2021-01-21 20:25:46'),\n        (264, 'Amelia', 'Williams', 60, '2021-01-24 07:24:35'),\n        (265, 'George', 'Hernandez', 18, '2021-01-07 06:30:04'),\n        (266, 'Leo', 'Martinez', 51, '2021-01-06 12:25:03'),\n        (267, 'George', 'Allen', 54, '2021-01-07 17:30:18'),\n        (268, 'Leo', 'Hernandez', 59, '2021-01-02 20:50:31'),\n        (269, 'Emily', 'Garcia', NULL, '2021-01-16 08:31:48'),\n        (270, 'Mia', 'Moore', 62, '2021-01-08 09:00:52'),\n        (271, 'Sophia', 'Rodriguez', 19, '2021-01-09 02:08:18'),\n        (272, 'Ella', 'Jackson', 18, '2021-01-27 03:12:33'),\n        (273, 'Harry', 'Allen', 21, '2021-01-03 05:00:05'),\n        (274, 'Noah', 'Harris', 60, '2021-01-29 07:27:58'),\n        (275, 'Jacob', 'Thompson', 65, '2021-01-18 14:07:44'),\n        (276, 'Mia', 'Perez', 60, '2021-01-10 05:48:55'),\n        (277, 'Jacob', 'Gonzalez', 26, '2021-01-02 23:10:50'),\n        (278, 'Isla', 'Thompson', 34, '2021-01-13 18:36:57'),\n        (279, 'Ava', 'Jones', 43, '2021-01-01 15:29:02'),\n        (280, 'Jack', 'Smith', 38, '2021-01-27 01:12:08'),\n        (281, 'George', 'Davis', 51, '2021-01-26 17:55:17'),\n        (282, 'Olivia', 'Young', 41, '2021-01-26 12:55:47'),\n        (283, 'Harry', 'Gonzalez', 40, '2021-01-07 08:20:11'),\n        (284, 'Charlie', 'Thomas', 28, '2021-01-17 11:39:17'),\n        (285, 'Amelia', 'Perez', 52, '2021-01-02 04:14:09'),\n        (286, 'Emily', 'Williams', 42, '2021-01-05 21:05:08'),\n        (287, 'Mia', 'Jones', NULL, '2021-01-16 15:09:08'),\n        (288, 'Oliver', 'Brown', NULL, '2021-01-15 11:06:13'),\n        (289, 'Amelia', 'Wilson', 63, '2021-01-24 08:50:29'),\n        (290, 'Noah', 'Allen', NULL, '2021-01-04 23:29:49'),\n        (291, 'Emily', 'Thompson', 36, '2021-01-26 14:28:30'),\n        (292, 'Mia', 'Lewis', 50, '2021-01-01 05:16:27'),\n        (293, 'Poppy', 'Martin', 49, '2021-01-29 13:45:28'),\n        (294, 'Grace', 'Lee', 45, '2021-01-05 11:37:56'),\n        (295, 'Noah', 'Lopez', 26, '2021-01-13 21:06:59'),\n        (296, 'Alfie', 'Walker', 41, '2021-01-03 08:14:02'),\n        (297, 'Jack', 'Clark', 47, '2021-01-03 10:58:32'),\n        (298, 'Isla', 'Thomas', 32, '2021-01-07 20:09:04'),\n        (299, 'Leo', 'Smith', 58, '2021-01-21 04:50:14'),\n        (300, 'Jack', 'Johnson', NULL, '2021-01-09 15:03:25'),\n        (301, 'Charlie', 'Brown', 0, '2021-01-24 23:14:11'),\n        (302, 'Grace', 'Harris', NULL, '2021-01-09 10:41:27'),\n        (303, 'Mia', 'Hernandez', 58, '2021-01-20 21:41:19'),\n        (304, 'Oliver', 'Smith', 64, '2021-01-06 07:27:57'),\n        (305, 'Ella', 'Allen', 51, '2021-01-21 06:10:10'),\n        (306, 'Ella', 'Williams', 35, '2021-01-09 00:35:58'),\n        (307, 'Ava', 'Walker', NULL, '2021-01-13 08:22:15'),\n        (308, 'Isla', 'Williams', 52, '2021-01-28 23:49:57'),\n        (309, 'Ava', 'White', 0, '2021-01-20 10:03:38'),\n        (310, 'Freddie', 'Perez', NULL, '2021-01-01 12:56:13'),\n        (311, 'Olivia', 'Davis', 53, '2021-01-25 10:08:25'),\n        (312, 'George', 'Walker', 25, '2021-01-20 13:02:06'),\n        (313, 'Sophia', 'Gonzalez', 54, '2021-01-02 15:20:29'),\n        (314, 'Jacob', 'Hernandez', 37, '2021-01-07 04:28:50'),\n        (315, 'Olivia', 'Taylor', 31, '2021-01-03 00:18:33'),\n        (316, 'Noah', 'Garcia', 43, '2021-01-30 17:20:20'),\n        (317, 'George', 'Anderson', NULL, '2021-01-10 21:19:56'),\n        (318, 'Jack', 'Moore', 50, '2021-01-14 07:05:20'),\n        (319, 'Emily', 'Miller', 41, '2021-01-12 06:24:27'),\n        (320, 'Harry', 'Moore', 19, '2021-01-09 15:06:59'),\n        (321, 'Amelia', 'Robinson', 46, '2021-01-17 06:09:46'),\n        (322, 'Oliver', 'Garcia', 38, '2021-01-07 12:29:42'),\n        (323, 'Ava', 'Smith', 54, '2021-01-08 14:54:41'),\n        (324, 'George', 'White', NULL, '2021-01-04 18:19:38'),\n        (325, 'Charlie', 'Walker', NULL, '2021-01-11 02:53:51'),\n        (326, 'Sophia', 'Lee', 25, '2021-01-12 12:57:44'),\n        (327, 'Sophia', 'Williams', 42, '2021-01-11 14:56:19'),\n        (328, 'Sophia', 'Thompson', 18, '2021-01-25 01:53:33'),\n        (329, 'Grace', 'Anderson', 44, '2021-01-28 02:18:39'),\n        (330, 'Charlie', 'Wilson', 53, '2021-01-25 11:07:35'),\n        (331, 'Mia', 'Martin', 61, '2021-01-09 01:29:26'),\n        (332, 'Oliver', 'Garcia', 25, '2021-01-22 01:52:46'),\n        (333, 'Ella', 'Hall', NULL, '2021-01-19 21:49:35'),\n        (334, 'Mia', 'Thompson', 27, '2021-01-20 06:24:53'),\n        (335, 'Sophia', 'Smith', 64, '2021-01-01 06:16:53'),\n        (336, 'Poppy', 'Taylor', 57, '2021-01-16 12:08:16'),\n        (337, 'Isla', 'Martinez', NULL, '2021-01-06 16:40:12'),\n        (338, 'Alfie', 'Walker', 53, '2021-01-19 10:04:51'),\n        (339, 'Grace', 'Moore', 30, '2021-01-19 08:10:51'),\n        (340, 'Noah', 'Davis', 0, '2021-01-26 01:19:11'),\n        (341, 'Emily', 'Anderson', 61, '2021-01-19 05:00:05'),\n        (342, 'Isla', 'Allen', 0, '2021-01-21 11:19:37'),\n        (343, 'Isla', 'Allen', 22, '2021-01-25 13:03:18'),\n        (344, 'Freddie', 'Lee', 42, '2021-01-23 03:35:33'),\n        (345, 'Ava', 'Lewis', 61, '2021-01-05 10:58:26'),\n        (346, 'Emily', 'Thomas', 61, '2021-01-11 07:01:10'),\n        (347, 'Ella', 'Jones', 25, '2021-01-17 07:53:42'),\n        (348, 'Amelia', 'Garcia', 60, '2021-01-01 03:04:11'),\n        (349, 'Sophia', 'Moore', NULL, '2021-01-11 02:50:38'),\n        (350, 'Mia', 'Jones', 0, '2021-01-28 00:35:05'),\n        (351, 'Alfie', 'Miller', NULL, '2021-01-16 21:29:45'),\n        (352, 'Oliver', 'Clark', NULL, '2021-01-05 08:27:29'),\n        (353, 'Ava', 'Williams', NULL, '2021-01-07 18:04:03'),\n        (354, 'Isla', 'Anderson', 43, '2021-01-05 23:54:38'),\n        (355, 'Sophia', 'Perez', NULL, '2021-01-12 19:51:23'),\n        (356, 'Oliver', 'Garcia', 26, '2021-01-28 11:28:36'),\n        (357, 'Harry', 'Smith', 20, '2021-01-30 13:35:53'),\n        (358, 'Ava', 'Wilson', 30, '2021-01-09 14:33:57'),\n        (359, 'Amelia', 'Moore', 24, '2021-01-12 02:56:52'),\n        (360, 'Oliver', 'Martinez', 0, '2021-01-30 02:49:18'),\n        (361, 'Noah', 'Anderson', NULL, '2021-01-08 05:12:38'),\n        (362, 'Leo', 'Thomas', 53, '2021-01-18 20:54:41'),\n        (363, 'Poppy', 'Hall', 0, '2021-01-23 15:48:40'),\n        (364, 'Harry', 'Jackson', 29, '2021-01-21 20:26:25'),\n        (365, 'Ava', 'Martin', 19, '2021-01-19 07:09:10'),\n        (366, 'Oliver', 'Taylor', NULL, '2021-01-10 03:39:05'),\n        (367, 'Jacob', 'Thomas', NULL, '2021-01-01 07:14:33'),\n        (368, 'Isla', 'Davis', 22, '2021-01-12 13:11:09'),\n        (369, 'Harry', 'Hall', 28, '2021-01-09 23:14:42'),\n        (370, 'George', 'Lewis', 35, '2021-01-17 08:31:41'),\n        (371, 'Jack', 'Robinson', 65, '2021-01-29 02:31:23'),\n        (372, 'Ava', 'Jackson', 64, '2021-01-12 15:04:04'),\n        (373, 'Leo', 'Martinez', 59, '2021-01-22 10:50:07'),\n        (374, 'Olivia', 'Thomas', 27, '2021-01-13 19:53:40'),\n        (375, 'Amelia', 'Thomas', 64, '2021-01-20 09:02:59'),\n        (376, 'Ava', 'Brown', 51, '2021-01-16 16:37:45'),\n        (377, 'Sophia', 'Thomas', 27, '2021-01-05 18:22:22'),\n        (378, 'Freddie', 'Allen', 32, '2021-01-23 03:07:43'),\n        (379, 'Ella', 'Walker', 40, '2021-01-24 10:40:57'),\n        (380, 'Leo', 'Hernandez', 22, '2021-01-09 14:42:59'),\n        (381, 'Grace', 'Jackson', 18, '2021-01-21 02:34:20'),\n        (382, 'Amelia', 'Walker', 29, '2021-01-16 14:44:04'),\n        (383, 'Jack', 'Jackson', 62, '2021-01-24 08:24:16'),\n        (384, 'Freddie', 'Clark', 26, '2021-01-07 16:07:59'),\n        (385, 'Oliver', 'White', 40, '2021-01-18 10:30:42'),\n        (386, 'Grace', 'Jackson', 46, '2021-01-05 07:46:30'),\n        (387, 'Grace', 'Gonzalez', 35, '2021-01-17 23:23:03'),\n        (388, 'Ava', 'Garcia', 43, '2021-01-07 11:47:23'),\n        (389, 'Grace', 'Martin', 31, '2021-01-24 10:13:46'),\n        (390, 'Amelia', 'Moore', 0, '2021-01-26 19:42:21'),\n        (391, 'Amelia', 'White', 0, '2021-01-29 21:47:52'),\n        (392, 'Charlie', 'Clark', NULL, '2021-01-07 10:37:25'),\n        (393, 'Jack', 'Allen', 46, '2021-01-02 20:21:35'),\n        (394, 'Oliver', 'Clark', 0, '2021-01-21 15:45:33'),\n        (395, 'Jacob', 'Young', NULL, '2021-01-14 16:53:41'),\n        (396, 'Noah', 'White', 54, '2021-01-10 11:00:53'),\n        (397, 'Alfie', 'Martin', 20, '2021-01-04 16:02:37'),\n        (398, 'Charlie', 'Walker', 19, '2021-01-20 13:48:37'),\n        (399, 'Jack', 'Moore', 45, '2021-01-20 12:40:05'),\n        (400, 'Ella', 'Jones', 27, '2021-01-11 13:53:14'),\n        (401, 'Freddie', 'Martin', 0, '2021-01-20 06:31:05'),\n        (402, 'Jack', 'Hernandez', 50, '2021-01-21 02:00:48'),\n        (403, 'Leo', 'Robinson', 28, '2021-01-18 03:17:20'),\n        (404, 'George', 'Lewis', NULL, '2021-01-12 01:21:49'),\n        (405, 'Leo', 'Lee', NULL, '2021-01-16 18:03:44'),\n        (406, 'Leo', 'Martinez', 35, '2021-01-28 08:53:22'),\n        (407, 'Oliver', 'White', 0, '2021-01-21 07:01:38'),\n        (408, 'Noah', 'Taylor', 20, '2021-01-07 12:20:23'),\n        (409, 'Freddie', 'Hernandez', 0, '2021-01-20 08:43:43'),\n        (410, 'Mia', 'Lee', NULL, '2021-01-05 13:43:54'),\n        (411, 'Ava', 'Johnson', 0, '2021-01-28 07:35:47'),\n        (412, 'Alfie', 'Young', 0, '2021-01-23 01:03:00'),\n        (413, 'Emily', 'Moore', 38, '2021-01-28 19:56:31'),\n        (414, 'Amelia', 'Thomas', 53, '2021-01-10 05:43:46'),\n        (415, 'Mia', 'Smith', 46, '2021-01-03 19:03:21'),\n        (416, 'Ella', 'Thomas', 29, '2021-01-30 22:54:47'),\n        (417, 'Jack', 'Hernandez', NULL, '2021-01-10 02:20:48'),\n        (418, 'Noah', 'Hall', 64, '2021-01-04 22:53:38'),\n        (419, 'Grace', 'Allen', NULL, '2021-01-11 00:11:51'),\n        (420, 'Noah', 'Taylor', 0, '2021-01-23 08:58:01'),\n        (421, 'Ava', 'Gonzalez', 22, '2021-01-15 15:40:14'),\n        (422, 'Alfie', 'Allen', 60, '2021-01-04 18:27:28'),\n        (423, 'Sophia', 'Thompson', NULL, '2021-01-14 22:13:27'),\n        (424, 'Charlie', 'Young', 36, '2021-01-08 15:17:44'),\n        (425, 'Charlie', 'Thomas', 53, '2021-01-10 00:05:35'),\n        (426, 'Olivia', 'Garcia', 0, '2021-01-22 01:11:53'),\n        (427, 'Sophia', 'Taylor', 35, '2021-01-20 01:58:44'),\n        (428, 'Freddie', 'Lewis', 34, '2021-01-04 04:12:39'),\n        (429, 'Ella', 'Gonzalez', 26, '2021-01-01 03:27:25'),\n        (430, 'Grace', 'Jackson', 26, '2021-01-04 22:39:58'),\n        (431, 'Leo', 'Miller', 0, '2021-01-27 12:46:45'),\n        (432, 'Emily', 'Gonzalez', NULL, '2021-01-05 22:39:41'),\n        (433, 'Freddie', 'Perez', 22, '2021-01-19 21:11:57'),\n        (434, 'Emily', 'Williams', 45, '2021-01-13 21:28:26'),\n        (435, 'Freddie', 'Anderson', 18, '2021-01-12 00:39:05'),\n        (436, 'Poppy', 'Perez', 46, '2021-01-22 15:03:39'),\n        (437, 'Ella', 'Martinez', NULL, '2021-01-06 02:14:06'),\n        (438, 'Isla', 'Harris', 0, '2021-01-25 19:06:08'),\n        (439, 'Ava', 'Jackson', 36, '2021-01-18 00:23:32'),\n        (440, 'Harry', 'Wilson', 19, '2021-01-28 13:53:01'),\n        (441, 'George', 'Martin', 23, '2021-01-30 20:41:19'),\n        (442, 'Harry', 'Davis', 26, '2021-01-16 22:44:26'),\n        (443, 'Mia', 'Walker', 20, '2021-01-04 22:09:38'),\n        (444, 'Ella', 'Lopez', 46, '2021-01-23 04:37:41'),\n        (445, 'Amelia', 'Martinez', 41, '2021-01-30 00:55:00'),\n        (446, 'Noah', 'Harris', NULL, '2021-01-04 04:17:34'),\n        (447, 'Ella', 'Johnson', NULL, '2021-01-03 03:31:55'),\n        (448, 'Oliver', 'Brown', 45, '2021-01-10 23:21:21'),\n        (449, 'George', 'Martin', 44, '2021-01-22 16:01:40'),\n        (450, 'Charlie', 'Jones', 26, '2021-01-04 00:22:39'),\n        (451, 'Freddie', 'Young', 0, '2021-01-28 23:21:36'),\n        (452, 'Poppy', 'Lee', 0, '2021-01-27 15:35:34'),\n        (453, 'Oliver', 'Brown', 63, '2021-01-15 23:15:17'),\n        (454, 'Sophia', 'Anderson', 24, '2021-01-09 17:46:44'),\n        (455, 'Harry', 'Taylor', 55, '2021-01-02 12:56:04'),\n        (456, 'Jacob', 'Miller', 24, '2021-01-25 17:56:49'),\n        (457, 'Freddie', 'Robinson', 24, '2021-01-25 07:18:59'),\n        (458, 'Sophia', 'Miller', 32, '2021-01-14 12:08:35'),\n        (459, 'Ella', 'Martin', NULL, '2021-01-11 02:03:56'),\n        (460, 'Isla', 'Harris', 25, '2021-01-21 19:06:59'),\n        (461, 'Noah', 'Lee', 61, '2021-01-17 10:04:53'),\n        (462, 'Jack', 'Brown', 53, '2021-01-30 10:58:28'),\n        (463, 'Noah', 'Williams', 25, '2021-01-15 04:14:36'),\n        (464, 'Grace', 'Rodriguez', NULL, '2021-01-07 08:09:10'),\n        (465, 'Alfie', 'Harris', 0, '2021-01-25 06:04:46'),\n        (466, 'Emily', 'White', 40, '2021-01-26 17:37:41'),\n        (467, 'Jack', 'Johnson', 30, '2021-01-21 02:03:39'),\n        (468, 'Sophia', 'Martinez', 28, '2021-01-08 15:54:07'),\n        (469, 'Ava', 'Rodriguez', 24, '2021-01-12 00:53:33'),\n        (470, 'Sophia', 'Thompson', 49, '2021-01-09 05:22:50'),\n        (471, 'George', 'Rodriguez', 43, '2021-01-07 05:13:37'),\n        (472, 'Jack', 'Thompson', 35, '2021-01-21 00:55:23'),\n        (473, 'Alfie', 'Robinson', NULL, '2021-01-14 07:23:55'),\n        (474, 'Jacob', 'Perez', 58, '2021-01-29 09:37:03'),\n        (475, 'Grace', 'Smith', 27, '2021-01-09 23:47:13'),\n        (476, 'Sophia', 'Johnson', 48, '2021-01-19 22:39:07'),\n        (477, 'George', 'Perez', 37, '2021-01-12 20:09:58'),\n        (478, 'Jacob', 'Taylor', 53, '2021-01-29 10:58:01'),\n        (479, 'Emily', 'Miller', 64, '2021-01-16 12:18:30'),\n        (480, 'Leo', 'Lee', 57, '2021-01-26 01:07:55'),\n        (481, 'Emily', 'Garcia', 60, '2021-01-27 11:00:56'),\n        (482, 'Emily', 'Garcia', 63, '2021-01-19 02:05:02'),\n        (483, 'Isla', 'Smith', 37, '2021-01-24 08:33:22'),\n        (484, 'Poppy', 'Taylor', 60, '2021-01-10 21:42:16'),\n        (485, 'Harry', 'Smith', 26, '2021-01-02 09:41:38'),\n        (486, 'Emily', 'Jones', 31, '2021-01-01 07:02:07'),\n        (487, 'Leo', 'Rodriguez', 0, '2021-01-27 16:07:04'),\n        (488, 'Leo', 'Young', NULL, '2021-01-10 19:41:59'),\n        (489, 'Poppy', 'Gonzalez', 26, '2021-01-21 00:16:56'),\n        (490, 'George', 'Harris', 0, '2021-01-26 12:34:31'),\n        (491, 'Amelia', 'Moore', 19, '2021-01-23 20:00:26'),\n        (492, 'Olivia', 'Harris', 42, '2021-01-03 13:57:21'),\n        (493, 'George', 'Johnson', 52, '2021-01-22 14:45:51'),\n        (494, 'Leo', 'Hernandez', NULL, '2021-01-04 04:07:30'),\n        (495, 'Charlie', 'Lee', NULL, '2021-01-03 02:56:40'),\n        (496, 'Isla', 'Harris', 0, '2021-01-25 10:59:45'),\n        (497, 'Grace', 'Davis', 0, '2021-01-25 14:10:43'),\n        (498, 'Amelia', 'Thompson', 0, '2021-01-25 07:28:25'),\n        (499, 'Grace', 'White', 57, '2021-01-13 12:52:10');\n        {% endset %}\n\n        {% do run_query(sql_to_run) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.integer_type", "macro.re_data.string_type", "macro.re_data.numeric_type", "macro.re_data.timestamp_type", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.1933594, "supported_languages": null}, "macro.toy_shop.re_data_metric_orders_above_100": {"unique_id": "macro.toy_shop.re_data_metric_orders_above_100", "package_name": "toy_shop", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop", "path": "macros/my_metrics.sql", "original_file_path": "macros/my_metrics.sql", "name": "re_data_metric_orders_above_100", "macro_sql": "{% macro re_data_metric_orders_above_100(context) %}\n    coalesce(\n      sum(\n          case when amount > 100\n            then 1\n          else 0\n          end\n      ), 0\n    )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.1942687, "supported_languages": null}, "macro.dbt_redshift.redshift__current_timestamp": {"unique_id": "macro.dbt_redshift.redshift__current_timestamp", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "redshift__current_timestamp", "macro_sql": "{% macro redshift__current_timestamp() -%}\n    getdate()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.1954067, "supported_languages": null}, "macro.dbt_redshift.redshift__snapshot_get_time": {"unique_id": "macro.dbt_redshift.redshift__snapshot_get_time", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "redshift__snapshot_get_time", "macro_sql": "{% macro redshift__snapshot_get_time() -%}\n    {{ current_timestamp() }}::timestamp\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.1957767, "supported_languages": null}, "macro.dbt_redshift.redshift__snapshot_string_as_time": {"unique_id": "macro.dbt_redshift.redshift__snapshot_string_as_time", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "redshift__snapshot_string_as_time", "macro_sql": "{% macro redshift__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.1964118, "supported_languages": null}, "macro.dbt_redshift.redshift__current_timestamp_backcompat": {"unique_id": "macro.dbt_redshift.redshift__current_timestamp_backcompat", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "redshift__current_timestamp_backcompat", "macro_sql": "{% macro redshift__current_timestamp_backcompat() -%}\n    getdate()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.1966789, "supported_languages": null}, "macro.dbt_redshift.redshift__current_timestamp_in_utc_backcompat": {"unique_id": "macro.dbt_redshift.redshift__current_timestamp_in_utc_backcompat", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "redshift__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro redshift__current_timestamp_in_utc_backcompat() -%}\n    getdate()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.1969273, "supported_languages": null}, "macro.dbt_redshift.redshift__get_relations": {"unique_id": "macro.dbt_redshift.redshift__get_relations", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/relations.sql", "original_file_path": "macros/relations.sql", "name": "redshift__get_relations", "macro_sql": "{% macro redshift__get_relations () -%}\n  {{ return(dbt.postgres__get_relations()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.1978915, "supported_languages": null}, "macro.dbt_redshift.dist": {"unique_id": "macro.dbt_redshift.dist", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "dist", "macro_sql": "{% macro dist(dist) %}\n  {%- if dist is not none -%}\n      {%- set dist = dist.strip().lower() -%}\n\n      {%- if dist in ['all', 'even'] -%}\n        diststyle {{ dist }}\n      {%- elif dist == \"auto\" -%}\n      {%- else -%}\n        diststyle key distkey ({{ dist }})\n      {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2155385, "supported_languages": null}, "macro.dbt_redshift.sort": {"unique_id": "macro.dbt_redshift.sort", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "sort", "macro_sql": "{% macro sort(sort_type, sort) %}\n  {%- if sort is not none %}\n      {{ sort_type | default('compound', boolean=true) }} sortkey(\n      {%- if sort is string -%}\n        {%- set sort = [sort] -%}\n      {%- endif -%}\n      {%- for item in sort -%}\n        {{ item }}\n        {%- if not loop.last -%},{%- endif -%}\n      {%- endfor -%}\n      )\n  {%- endif %}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2171085, "supported_languages": null}, "macro.dbt_redshift.redshift__create_table_as": {"unique_id": "macro.dbt_redshift.redshift__create_table_as", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__create_table_as", "macro_sql": "{% macro redshift__create_table_as(temporary, relation, sql) -%}\n\n  {%- set _dist = config.get('dist') -%}\n  {%- set _sort_type = config.get(\n          'sort_type',\n          validator=validation.any['compound', 'interleaved']) -%}\n  {%- set _sort = config.get(\n          'sort',\n          validator=validation.any[list, basestring]) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n  {%- set backup = config.get('backup') -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n    {% if backup == false -%}backup no{%- endif %}\n    {{ dist(_dist) }}\n    {{ sort(_sort_type, _sort) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.dist", "macro.dbt_redshift.sort"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2204072, "supported_languages": null}, "macro.dbt_redshift.redshift__create_view_as": {"unique_id": "macro.dbt_redshift.redshift__create_view_as", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__create_view_as", "macro_sql": "{% macro redshift__create_view_as(relation, sql) -%}\n  {%- set binding = config.get('bind', default=True) -%}\n\n  {% set bind_qualifier = '' if binding else 'with no schema binding' %}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create view {{ relation }} as (\n    {{ sql }}\n  ) {{ bind_qualifier }};\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2218368, "supported_languages": null}, "macro.dbt_redshift.redshift__create_schema": {"unique_id": "macro.dbt_redshift.redshift__create_schema", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__create_schema", "macro_sql": "{% macro redshift__create_schema(relation) -%}\n  {{ postgres__create_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2222602, "supported_languages": null}, "macro.dbt_redshift.redshift__drop_schema": {"unique_id": "macro.dbt_redshift.redshift__drop_schema", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__drop_schema", "macro_sql": "{% macro redshift__drop_schema(relation) -%}\n  {{ postgres__drop_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2226508, "supported_languages": null}, "macro.dbt_redshift.redshift__get_columns_in_relation": {"unique_id": "macro.dbt_redshift.redshift__get_columns_in_relation", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__get_columns_in_relation", "macro_sql": "{% macro redshift__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      with bound_views as (\n        select\n          ordinal_position,\n          table_schema,\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n        from information_schema.\"columns\"\n        where table_name = '{{ relation.identifier }}'\n    ),\n\n    unbound_views as (\n      select\n        ordinal_position,\n        view_schema,\n        col_name,\n        case\n          when col_type ilike 'character varying%' then\n            'character varying'\n          when col_type ilike 'numeric%' then 'numeric'\n          else col_type\n        end as col_type,\n        case\n          when col_type like 'character%'\n          then nullif(REGEXP_SUBSTR(col_type, '[0-9]+'), '')::int\n          else null\n        end as character_maximum_length,\n        case\n          when col_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(col_type, '[0-9,]+'), ',', 1),\n            '')::int\n          else null\n        end as numeric_precision,\n        case\n          when col_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(col_type, '[0-9,]+'), ',', 2),\n            '')::int\n          else null\n        end as numeric_scale\n\n      from pg_get_late_binding_view_cols()\n      cols(view_schema name, view_name name, col_name name,\n           col_type varchar, ordinal_position int)\n      where view_name = '{{ relation.identifier }}'\n    ),\n\n    external_views as (\n      select\n        columnnum,\n        schemaname,\n        columnname,\n        case\n          when external_type ilike 'character varying%' or external_type ilike 'varchar%'\n          then 'character varying'\n          when external_type ilike 'numeric%' then 'numeric'\n          else external_type\n        end as external_type,\n        case\n          when external_type like 'character%' or external_type like 'varchar%'\n          then nullif(\n            REGEXP_SUBSTR(external_type, '[0-9]+'),\n            '')::int\n          else null\n        end as character_maximum_length,\n        case\n          when external_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(external_type, '[0-9,]+'), ',', 1),\n            '')::int\n          else null\n        end as numeric_precision,\n        case\n          when external_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(external_type, '[0-9,]+'), ',', 2),\n            '')::int\n          else null\n        end as numeric_scale\n      from\n        pg_catalog.svv_external_columns\n      where\n        schemaname = '{{ relation.schema }}'\n        and tablename = '{{ relation.identifier }}'\n\n    ),\n\n    unioned as (\n      select * from bound_views\n      union all\n      select * from unbound_views\n      union all\n      select * from external_views\n    )\n\n    select\n      column_name,\n      data_type,\n      character_maximum_length,\n      numeric_precision,\n      numeric_scale\n\n    from unioned\n    {% if relation.schema %}\n    where table_schema = '{{ relation.schema }}'\n    {% endif %}\n    order by ordinal_position\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2245538, "supported_languages": null}, "macro.dbt_redshift.redshift__list_relations_without_caching": {"unique_id": "macro.dbt_redshift.redshift__list_relations_without_caching", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__list_relations_without_caching", "macro_sql": "{% macro redshift__list_relations_without_caching(schema_relation) %}\n  {{ return(postgres__list_relations_without_caching(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2250361, "supported_languages": null}, "macro.dbt_redshift.redshift__information_schema_name": {"unique_id": "macro.dbt_redshift.redshift__information_schema_name", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__information_schema_name", "macro_sql": "{% macro redshift__information_schema_name(database) -%}\n  {{ return(postgres__information_schema_name(database)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2254725, "supported_languages": null}, "macro.dbt_redshift.redshift__list_schemas": {"unique_id": "macro.dbt_redshift.redshift__list_schemas", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__list_schemas", "macro_sql": "{% macro redshift__list_schemas(database) -%}\n  {{ return(postgres__list_schemas(database)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2259016, "supported_languages": null}, "macro.dbt_redshift.redshift__check_schema_exists": {"unique_id": "macro.dbt_redshift.redshift__check_schema_exists", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__check_schema_exists", "macro_sql": "{% macro redshift__check_schema_exists(information_schema, schema) -%}\n  {{ return(postgres__check_schema_exists(information_schema, schema)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2264266, "supported_languages": null}, "macro.dbt_redshift.redshift__persist_docs": {"unique_id": "macro.dbt_redshift.redshift__persist_docs", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__persist_docs", "macro_sql": "{% macro redshift__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {# Override: do not set column comments for LBVs #}\n  {% set is_lbv = config.get('materialized') == 'view' and config.get('bind') == false %}\n  {% if for_columns and config.persist_column_docs() and model.columns and not is_lbv %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2285411, "supported_languages": null}, "macro.dbt_redshift.redshift__alter_relation_comment": {"unique_id": "macro.dbt_redshift.redshift__alter_relation_comment", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__alter_relation_comment", "macro_sql": "{% macro redshift__alter_relation_comment(relation, comment) %}\n  {% do return(postgres__alter_relation_comment(relation, comment)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.22913, "supported_languages": null}, "macro.dbt_redshift.redshift__alter_column_comment": {"unique_id": "macro.dbt_redshift.redshift__alter_column_comment", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__alter_column_comment", "macro_sql": "{% macro redshift__alter_column_comment(relation, column_dict) %}\n  {% do return(postgres__alter_column_comment(relation, column_dict)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2297428, "supported_languages": null}, "macro.dbt_redshift.redshift__alter_relation_add_remove_columns": {"unique_id": "macro.dbt_redshift.redshift__alter_relation_add_remove_columns", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__alter_relation_add_remove_columns", "macro_sql": "{% macro redshift__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns %}\n\n    {% for column in add_columns %}\n      {% set sql -%}\n          alter {{ relation.type }} {{ relation }} add column {{ column.name }} {{ column.data_type }}\n      {% endset %}\n      {% do run_query(sql) %}\n    {% endfor %}\n\n  {% endif %}\n\n  {% if remove_columns %}\n\n    {% for column in remove_columns %}\n      {% set sql -%}\n          alter {{ relation.type }} {{ relation }} drop column {{ column.name }}\n      {% endset %}\n      {% do run_query(sql) %}\n    {% endfor %}\n\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2321007, "supported_languages": null}, "macro.dbt_redshift.redshift__get_base_catalog": {"unique_id": "macro.dbt_redshift.redshift__get_base_catalog", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__get_base_catalog", "macro_sql": "{% macro redshift__get_base_catalog(information_schema, schemas) -%}\n  {%- call statement('base_catalog', fetch_result=True) -%}\n    {% set database = information_schema.database %}\n    {{ adapter.verify_database(database) }}\n\n    with late_binding as (\n      select\n        '{{ database }}'::varchar as table_database,\n        table_schema,\n        table_name,\n        'LATE BINDING VIEW'::varchar as table_type,\n        null::text as table_comment,\n\n        column_name,\n        column_index,\n        column_type,\n        null::text as column_comment\n      from pg_get_late_binding_view_cols()\n        cols(table_schema name, table_name name, column_name name,\n             column_type varchar,\n             column_index int)\n        order by \"column_index\"\n    ),\n\n    early_binding as (\n        select\n            '{{ database }}'::varchar as table_database,\n            sch.nspname as table_schema,\n            tbl.relname as table_name,\n            case tbl.relkind\n                when 'v' then 'VIEW'\n                else 'BASE TABLE'\n            end as table_type,\n            tbl_desc.description as table_comment,\n            col.attname as column_name,\n            col.attnum as column_index,\n            pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,\n            col_desc.description as column_comment\n\n        from pg_catalog.pg_namespace sch\n        join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid\n        join pg_catalog.pg_attribute col on col.attrelid = tbl.oid\n        left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)\n        left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)\n        where (\n            {%- for schema in schemas -%}\n              upper(sch.nspname) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n            {%- endfor -%}\n          )\n            and tbl.relkind in ('r', 'v', 'f', 'p')\n            and col.attnum > 0\n            and not col.attisdropped\n    ),\n\n    table_owners as (\n\n        select\n            '{{ database }}'::varchar as table_database,\n            schemaname as table_schema,\n            tablename as table_name,\n            tableowner as table_owner\n\n        from pg_tables\n\n        union all\n\n        select\n            '{{ database }}'::varchar as table_database,\n            schemaname as table_schema,\n            viewname as table_name,\n            viewowner as table_owner\n\n        from pg_views\n\n    ),\n\n    unioned as (\n\n        select *\n        from early_binding\n\n        union all\n\n        select *\n        from late_binding\n\n    )\n\n    select *,\n        table_database || '.' || table_schema || '.' || table_name as table_id\n\n    from unioned\n    join table_owners using (table_database, table_schema, table_name)\n\n    where (\n        {%- for schema in schemas -%}\n          upper(table_schema) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n\n    order by \"column_index\"\n  {%- endcall -%}\n\n  {{ return(load_result('base_catalog').table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2432134, "supported_languages": null}, "macro.dbt_redshift.redshift__get_extended_catalog": {"unique_id": "macro.dbt_redshift.redshift__get_extended_catalog", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__get_extended_catalog", "macro_sql": "{% macro redshift__get_extended_catalog(schemas) %}\n  {%- call statement('extended_catalog', fetch_result=True) -%}\n\n    select\n        \"database\" || '.' || \"schema\" || '.' || \"table\" as table_id,\n\n        'Encoded'::text as \"stats:encoded:label\",\n        encoded as \"stats:encoded:value\",\n        'Indicates whether any column in the table has compression encoding defined.'::text as \"stats:encoded:description\",\n        true as \"stats:encoded:include\",\n\n        'Dist Style' as \"stats:diststyle:label\",\n        diststyle as \"stats:diststyle:value\",\n        'Distribution style or distribution key column, if key distribution is defined.'::text as \"stats:diststyle:description\",\n        true as \"stats:diststyle:include\",\n\n        'Sort Key 1' as \"stats:sortkey1:label\",\n        -- handle 0xFF byte in response for interleaved sort styles\n        case\n            when sortkey1 like 'INTERLEAVED%' then 'INTERLEAVED'::text\n            else sortkey1\n        end as \"stats:sortkey1:value\",\n        'First column in the sort key.'::text as \"stats:sortkey1:description\",\n        (sortkey1 is not null) as \"stats:sortkey1:include\",\n\n        'Max Varchar' as \"stats:max_varchar:label\",\n        max_varchar as \"stats:max_varchar:value\",\n        'Size of the largest column that uses a VARCHAR data type.'::text as \"stats:max_varchar:description\",\n        true as \"stats:max_varchar:include\",\n\n        -- exclude this, as the data is strangely returned with null-byte characters\n        'Sort Key 1 Encoding' as \"stats:sortkey1_enc:label\",\n        sortkey1_enc as \"stats:sortkey1_enc:value\",\n        'Compression encoding of the first column in the sort key.' as \"stats:sortkey1_enc:description\",\n        false as \"stats:sortkey1_enc:include\",\n\n        '# Sort Keys' as \"stats:sortkey_num:label\",\n        sortkey_num as \"stats:sortkey_num:value\",\n        'Number of columns defined as sort keys.' as \"stats:sortkey_num:description\",\n        (sortkey_num > 0) as \"stats:sortkey_num:include\",\n\n        'Approximate Size' as \"stats:size:label\",\n        size * 1000000 as \"stats:size:value\",\n        'Approximate size of the table, calculated from a count of 1MB blocks'::text as \"stats:size:description\",\n        true as \"stats:size:include\",\n\n        'Disk Utilization' as \"stats:pct_used:label\",\n        pct_used / 100.0 as \"stats:pct_used:value\",\n        'Percent of available space that is used by the table.'::text as \"stats:pct_used:description\",\n        true as \"stats:pct_used:include\",\n\n        'Unsorted %' as \"stats:unsorted:label\",\n        unsorted / 100.0 as \"stats:unsorted:value\",\n        'Percent of unsorted rows in the table.'::text as \"stats:unsorted:description\",\n        (unsorted is not null) as \"stats:unsorted:include\",\n\n        'Stats Off' as \"stats:stats_off:label\",\n        stats_off as \"stats:stats_off:value\",\n        'Number that indicates how stale the table statistics are; 0 is current, 100 is out of date.'::text as \"stats:stats_off:description\",\n        true as \"stats:stats_off:include\",\n\n        'Approximate Row Count' as \"stats:rows:label\",\n        tbl_rows as \"stats:rows:value\",\n        'Approximate number of rows in the table. This value includes rows marked for deletion, but not yet vacuumed.'::text as \"stats:rows:description\",\n        true as \"stats:rows:include\",\n\n        'Sort Key Skew' as \"stats:skew_sortkey1:label\",\n        skew_sortkey1 as \"stats:skew_sortkey1:value\",\n        'Ratio of the size of the largest non-sort key column to the size of the first column of the sort key.'::text as \"stats:skew_sortkey1:description\",\n        (skew_sortkey1 is not null) as \"stats:skew_sortkey1:include\",\n\n        'Skew Rows' as \"stats:skew_rows:label\",\n        skew_rows as \"stats:skew_rows:value\",\n        'Ratio of the number of rows in the slice with the most rows to the number of rows in the slice with the fewest rows.'::text as \"stats:skew_rows:description\",\n        (skew_rows is not null) as \"stats:skew_rows:include\"\n\n    from svv_table_info\n    where (\n        {%- for schema in schemas -%}\n          upper(schema) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n    )\n\n  {%- endcall -%}\n\n  {{ return(load_result('extended_catalog').table) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2449749, "supported_languages": null}, "macro.dbt_redshift.redshift__can_select_from": {"unique_id": "macro.dbt_redshift.redshift__can_select_from", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__can_select_from", "macro_sql": "{% macro redshift__can_select_from(table_name) %}\n\n  {%- call statement('has_table_privilege', fetch_result=True) -%}\n\n    select has_table_privilege(current_user, '{{ table_name }}', 'SELECT') as can_select\n\n  {%- endcall -%}\n\n  {% set can_select = load_result('has_table_privilege').table[0]['can_select'] %}\n  {{ return(can_select) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2461693, "supported_languages": null}, "macro.dbt_redshift.redshift__no_svv_table_info_warning": {"unique_id": "macro.dbt_redshift.redshift__no_svv_table_info_warning", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__no_svv_table_info_warning", "macro_sql": "{% macro redshift__no_svv_table_info_warning() %}\n\n    {% set msg %}\n\n    Warning: The database user \"{{ target.user }}\" has insufficient permissions to\n    query the \"svv_table_info\" table. Please grant SELECT permissions on this table\n    to the \"{{ target.user }}\" user to fetch extended table details from Redshift.\n\n    {% endset %}\n\n    {{ log(msg, info=True) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.247044, "supported_languages": null}, "macro.dbt_redshift.redshift__get_catalog": {"unique_id": "macro.dbt_redshift.redshift__get_catalog", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__get_catalog", "macro_sql": "{% macro redshift__get_catalog(information_schema, schemas) %}\n\n    {#-- Compute a left-outer join in memory. Some Redshift queries are\n      -- leader-only, and cannot be joined to other compute-based queries #}\n\n    {% set catalog = redshift__get_base_catalog(information_schema, schemas) %}\n\n    {% set select_extended =  redshift__can_select_from('svv_table_info') %}\n    {% if select_extended %}\n        {% set extended_catalog = redshift__get_extended_catalog(schemas) %}\n        {% set catalog = catalog.join(extended_catalog, 'table_id') %}\n    {% else %}\n        {{ redshift__no_svv_table_info_warning() }}\n    {% endif %}\n\n    {{ return(catalog.exclude(['table_id'])) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_base_catalog", "macro.dbt_redshift.redshift__can_select_from", "macro.dbt_redshift.redshift__get_extended_catalog", "macro.dbt_redshift.redshift__no_svv_table_info_warning"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2490273, "supported_languages": null}, "macro.dbt_redshift.redshift__array_concat": {"unique_id": "macro.dbt_redshift.redshift__array_concat", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "name": "redshift__array_concat", "macro_sql": "{% macro redshift__array_concat(array_1, array_2) -%}\n    array_concat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.250129, "supported_languages": null}, "macro.dbt_redshift.redshift__dateadd": {"unique_id": "macro.dbt_redshift.redshift__dateadd", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "name": "redshift__dateadd", "macro_sql": "{% macro redshift__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2513583, "supported_languages": null}, "macro.dbt_redshift.redshift__array_append": {"unique_id": "macro.dbt_redshift.redshift__array_append", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "name": "redshift__array_append", "macro_sql": "{% macro redshift__array_append(array, new_element) -%}\n    {{ array_concat(array, array_construct([new_element])) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.array_concat", "macro.dbt_utils.array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2524478, "supported_languages": null}, "macro.dbt_redshift.redshift__split_part": {"unique_id": "macro.dbt_redshift.redshift__split_part", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "redshift__split_part", "macro_sql": "{% macro redshift__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    {{ dbt.default__split_part(string_text, delimiter_text, part_number) }}\n  {% else %}\n    {{ dbt._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__split_part", "macro.dbt._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.254174, "supported_languages": null}, "macro.dbt_redshift.redshift__last_day": {"unique_id": "macro.dbt_redshift.redshift__last_day", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "redshift__last_day", "macro_sql": "{% macro redshift__last_day(date, datepart) %}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.255649, "supported_languages": null}, "macro.dbt_redshift.redshift__length": {"unique_id": "macro.dbt_redshift.redshift__length", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "name": "redshift__length", "macro_sql": "{% macro redshift__length(expression) %}\n\n    len(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2565353, "supported_languages": null}, "macro.dbt_redshift.redshift__cast_bool_to_text": {"unique_id": "macro.dbt_redshift.redshift__cast_bool_to_text", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "name": "redshift__cast_bool_to_text", "macro_sql": "{% macro redshift__cast_bool_to_text(field) %}\n    case\n        when {{ field }} is true then 'true'\n        when {{ field }} is false then 'false'\n    end::text\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.257481, "supported_languages": null}, "macro.dbt_redshift.redshift__listagg": {"unique_id": "macro.dbt_redshift.redshift__listagg", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "name": "redshift__listagg", "macro_sql": "{% macro redshift__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    {% set ns = namespace() %}\n    {% set ns.delimiter_text_regex = delimiter_text|trim(\"'\") %}\n    {% set special_chars %}\\,^,$,.,|,?,*,+,(,),[,],{,}{% endset %}\n    {%- for char in special_chars.split(',') -%}\n        {% set escape_char %}\\\\{{ char }}{% endset %}\n        {% set ns.delimiter_text_regex = ns.delimiter_text_regex|replace(char,escape_char) %}\n    {%- endfor -%}\n\n    {% set regex %}'([^{{ ns.delimiter_text_regex }}]+{{ ns.delimiter_text_regex }}){1,{{ limit_num - 1}}}[^{{ ns.delimiter_text_regex }}]+'{% endset %}\n    regexp_substr(\n        listagg(\n            {{ measure }},\n            {{ delimiter_text }}\n            )\n            {% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n        ,{{ regex }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.26239, "supported_languages": null}, "macro.dbt_redshift.redshift__array_construct": {"unique_id": "macro.dbt_redshift.redshift__array_construct", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "name": "redshift__array_construct", "macro_sql": "{% macro redshift__array_construct(inputs, data_type) -%}\n    array( {{ inputs|join(' , ') }} )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2634742, "supported_languages": null}, "macro.dbt_redshift.redshift__datediff": {"unique_id": "macro.dbt_redshift.redshift__datediff", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "name": "redshift__datediff", "macro_sql": "{% macro redshift__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2646518, "supported_languages": null}, "macro.dbt_redshift.redshift__get_show_grant_sql": {"unique_id": "macro.dbt_redshift.redshift__get_show_grant_sql", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "redshift__get_show_grant_sql", "macro_sql": "{% macro redshift__get_show_grant_sql(relation) %}\n\nwith privileges as (\n\n    -- valid options per https://docs.aws.amazon.com/redshift/latest/dg/r_HAS_TABLE_PRIVILEGE.html\n    select 'select' as privilege_type\n    union all\n    select 'insert' as privilege_type\n    union all\n    select 'update' as privilege_type\n    union all\n    select 'delete' as privilege_type\n    union all\n    select 'references' as privilege_type\n\n)\n\nselect\n    u.usename as grantee,\n    p.privilege_type\nfrom pg_user u\ncross join privileges p\nwhere has_table_privilege(u.usename, '{{ relation }}', privilege_type)\n    and u.usename != current_user\n    and not u.usesuper\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.265676, "supported_languages": null}, "macro.dbt_redshift.redshift__snapshot_merge_sql": {"unique_id": "macro.dbt_redshift.redshift__snapshot_merge_sql", "package_name": "dbt_redshift", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/redshift", "path": "macros/materializations/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot_merge.sql", "name": "redshift__snapshot_merge_sql", "macro_sql": "{% macro redshift__snapshot_merge_sql(target, source, insert_cols) -%}\n    {{ postgres__snapshot_merge_sql(target, source, insert_cols) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2667785, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp": {"unique_id": "macro.dbt_postgres.postgres__current_timestamp", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "postgres__current_timestamp", "macro_sql": "{% macro postgres__current_timestamp() -%}\n    now()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2679217, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_string_as_time": {"unique_id": "macro.dbt_postgres.postgres__snapshot_string_as_time", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "postgres__snapshot_string_as_time", "macro_sql": "{% macro postgres__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp without time zone\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2685008, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_get_time": {"unique_id": "macro.dbt_postgres.postgres__snapshot_get_time", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "postgres__snapshot_get_time", "macro_sql": "{% macro postgres__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp without time zone\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2688396, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp_backcompat": {"unique_id": "macro.dbt_postgres.postgres__current_timestamp_backcompat", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "postgres__current_timestamp_backcompat", "macro_sql": "{% macro postgres__current_timestamp_backcompat() %}\n    current_timestamp::{{ type_timestamp() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2691793, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp_in_utc_backcompat": {"unique_id": "macro.dbt_postgres.postgres__current_timestamp_in_utc_backcompat", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "name": "postgres__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro postgres__current_timestamp_in_utc_backcompat() %}\n    (current_timestamp at time zone 'utc')::{{ type_timestamp() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2695198, "supported_languages": null}, "macro.dbt_postgres.postgres_get_relations": {"unique_id": "macro.dbt_postgres.postgres_get_relations", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/relations.sql", "original_file_path": "macros/relations.sql", "name": "postgres_get_relations", "macro_sql": "{% macro postgres_get_relations () -%}\n\n  {#\n      -- in pg_depend, objid is the dependent, refobjid is the referenced object\n      --  > a pg_depend entry indicates that the referenced object cannot be\n      --  > dropped without also dropping the dependent object.\n  #}\n\n  {%- call statement('relations', fetch_result=True) -%}\n    with relation as (\n        select\n            pg_rewrite.ev_class as class,\n            pg_rewrite.oid as id\n        from pg_rewrite\n    ),\n    class as (\n        select\n            oid as id,\n            relname as name,\n            relnamespace as schema,\n            relkind as kind\n        from pg_class\n    ),\n    dependency as (\n        select distinct\n            pg_depend.objid as id,\n            pg_depend.refobjid as ref\n        from pg_depend\n    ),\n    schema as (\n        select\n            pg_namespace.oid as id,\n            pg_namespace.nspname as name\n        from pg_namespace\n        where nspname != 'information_schema' and nspname not like 'pg\\_%'\n    ),\n    referenced as (\n        select\n            relation.id AS id,\n            referenced_class.name ,\n            referenced_class.schema ,\n            referenced_class.kind\n        from relation\n        join class as referenced_class on relation.class=referenced_class.id\n        where referenced_class.kind in ('r', 'v')\n    ),\n    relationships as (\n        select\n            referenced.name as referenced_name,\n            referenced.schema as referenced_schema_id,\n            dependent_class.name as dependent_name,\n            dependent_class.schema as dependent_schema_id,\n            referenced.kind as kind\n        from referenced\n        join dependency on referenced.id=dependency.id\n        join class as dependent_class on dependency.ref=dependent_class.id\n        where\n            (referenced.name != dependent_class.name or\n             referenced.schema != dependent_class.schema)\n    )\n\n    select\n        referenced_schema.name as referenced_schema,\n        relationships.referenced_name as referenced_name,\n        dependent_schema.name as dependent_schema,\n        relationships.dependent_name as dependent_name\n    from relationships\n    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id\n    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id\n    group by referenced_schema, referenced_name, dependent_schema, dependent_name\n    order by referenced_schema, referenced_name, dependent_schema, dependent_name;\n\n  {%- endcall -%}\n\n  {{ return(load_result('relations').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2715864, "supported_languages": null}, "macro.dbt_postgres.postgres__create_table_as": {"unique_id": "macro.dbt_postgres.postgres__create_table_as", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__create_table_as", "macro_sql": "{% macro postgres__create_table_as(temporary, relation, sql) -%}\n  {%- set unlogged = config.get('unlogged', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary -%}\n    temporary\n  {%- elif unlogged -%}\n    unlogged\n  {%- endif %} table {{ relation }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.283913, "supported_languages": null}, "macro.dbt_postgres.postgres__get_create_index_sql": {"unique_id": "macro.dbt_postgres.postgres__get_create_index_sql", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_create_index_sql", "macro_sql": "{% macro postgres__get_create_index_sql(relation, index_dict) -%}\n  {%- set index_config = adapter.parse_index(index_dict) -%}\n  {%- set comma_separated_columns = \", \".join(index_config.columns) -%}\n  {%- set index_name = index_config.render(relation) -%}\n\n  create {% if index_config.unique -%}\n    unique\n  {%- endif %} index if not exists\n  \"{{ index_name }}\"\n  on {{ relation }} {% if index_config.type -%}\n    using {{ index_config.type }}\n  {%- endif %}\n  ({{ comma_separated_columns }});\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.28567, "supported_languages": null}, "macro.dbt_postgres.postgres__create_schema": {"unique_id": "macro.dbt_postgres.postgres__create_schema", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__create_schema", "macro_sql": "{% macro postgres__create_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier().include(database=False) }}\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2868097, "supported_languages": null}, "macro.dbt_postgres.postgres__drop_schema": {"unique_id": "macro.dbt_postgres.postgres__drop_schema", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__drop_schema", "macro_sql": "{% macro postgres__drop_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier().include(database=False) }} cascade\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2878473, "supported_languages": null}, "macro.dbt_postgres.postgres__get_columns_in_relation": {"unique_id": "macro.dbt_postgres.postgres__get_columns_in_relation", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_columns_in_relation", "macro_sql": "{% macro postgres__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      select\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n      from {{ relation.information_schema('columns') }}\n      where table_name = '{{ relation.identifier }}'\n        {% if relation.schema %}\n        and table_schema = '{{ relation.schema }}'\n        {% endif %}\n      order by ordinal_position\n\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2894251, "supported_languages": null}, "macro.dbt_postgres.postgres__list_relations_without_caching": {"unique_id": "macro.dbt_postgres.postgres__list_relations_without_caching", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__list_relations_without_caching", "macro_sql": "{% macro postgres__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      '{{ schema_relation.database }}' as database,\n      tablename as name,\n      schemaname as schema,\n      'table' as type\n    from pg_tables\n    where schemaname ilike '{{ schema_relation.schema }}'\n    union all\n    select\n      '{{ schema_relation.database }}' as database,\n      viewname as name,\n      schemaname as schema,\n      'view' as type\n    from pg_views\n    where schemaname ilike '{{ schema_relation.schema }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2907066, "supported_languages": null}, "macro.dbt_postgres.postgres__information_schema_name": {"unique_id": "macro.dbt_postgres.postgres__information_schema_name", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__information_schema_name", "macro_sql": "{% macro postgres__information_schema_name(database) -%}\n  {% if database_name -%}\n    {{ adapter.verify_database(database_name) }}\n  {%- endif -%}\n  information_schema\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2913148, "supported_languages": null}, "macro.dbt_postgres.postgres__list_schemas": {"unique_id": "macro.dbt_postgres.postgres__list_schemas", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__list_schemas", "macro_sql": "{% macro postgres__list_schemas(database) %}\n  {% if database -%}\n    {{ adapter.verify_database(database) }}\n  {%- endif -%}\n  {% call statement('list_schemas', fetch_result=True, auto_begin=False) %}\n    select distinct nspname from pg_namespace\n  {% endcall %}\n  {{ return(load_result('list_schemas').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2925136, "supported_languages": null}, "macro.dbt_postgres.postgres__check_schema_exists": {"unique_id": "macro.dbt_postgres.postgres__check_schema_exists", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__check_schema_exists", "macro_sql": "{% macro postgres__check_schema_exists(information_schema, schema) -%}\n  {% if information_schema.database -%}\n    {{ adapter.verify_database(information_schema.database) }}\n  {%- endif -%}\n  {% call statement('check_schema_exists', fetch_result=True, auto_begin=False) %}\n    select count(*) from pg_namespace where nspname = '{{ schema }}'\n  {% endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2938561, "supported_languages": null}, "macro.dbt_postgres.postgres__make_relation_with_suffix": {"unique_id": "macro.dbt_postgres.postgres__make_relation_with_suffix", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_relation_with_suffix", "macro_sql": "{% macro postgres__make_relation_with_suffix(base_relation, suffix, dstring) %}\n    {% if dstring %}\n      {% set dt = modules.datetime.datetime.now() %}\n      {% set dtstring = dt.strftime(\"%H%M%S%f\") %}\n      {% set suffix = suffix ~ dtstring %}\n    {% endif %}\n    {% set suffix_length = suffix|length %}\n    {% set relation_max_name_length = base_relation.relation_max_name_length() %}\n    {% if suffix_length > relation_max_name_length %}\n        {% do exceptions.raise_compiler_error('Relation suffix is too long (' ~ suffix_length ~ ' characters). Maximum length is ' ~ relation_max_name_length ~ ' characters.') %}\n    {% endif %}\n    {% set identifier = base_relation.identifier[:relation_max_name_length - suffix_length] ~ suffix %}\n\n    {{ return(base_relation.incorporate(path={\"identifier\": identifier })) }}\n\n  {% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2967544, "supported_languages": null}, "macro.dbt_postgres.postgres__make_intermediate_relation": {"unique_id": "macro.dbt_postgres.postgres__make_intermediate_relation", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_intermediate_relation", "macro_sql": "{% macro postgres__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(postgres__make_relation_with_suffix(base_relation, suffix, dstring=False)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2974317, "supported_languages": null}, "macro.dbt_postgres.postgres__make_temp_relation": {"unique_id": "macro.dbt_postgres.postgres__make_temp_relation", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_temp_relation", "macro_sql": "{% macro postgres__make_temp_relation(base_relation, suffix) %}\n    {% set temp_relation = postgres__make_relation_with_suffix(base_relation, suffix, dstring=True) %}\n    {{ return(temp_relation.incorporate(path={\"schema\": none,\n                                              \"database\": none})) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.298556, "supported_languages": null}, "macro.dbt_postgres.postgres__make_backup_relation": {"unique_id": "macro.dbt_postgres.postgres__make_backup_relation", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_backup_relation", "macro_sql": "{% macro postgres__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {% set backup_relation = postgres__make_relation_with_suffix(base_relation, suffix, dstring=False) %}\n    {{ return(backup_relation.incorporate(type=backup_relation_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.2995098, "supported_languages": null}, "macro.dbt_postgres.postgres_escape_comment": {"unique_id": "macro.dbt_postgres.postgres_escape_comment", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres_escape_comment", "macro_sql": "{% macro postgres_escape_comment(comment) -%}\n  {% if comment is not string %}\n    {% do exceptions.raise_compiler_error('cannot escape a non-string: ' ~ comment) %}\n  {% endif %}\n  {%- set magic = '$dbt_comment_literal_block$' -%}\n  {%- if magic in comment -%}\n    {%- do exceptions.raise_compiler_error('The string ' ~ magic ~ ' is not allowed in comments.') -%}\n  {%- endif -%}\n  {{ magic }}{{ comment }}{{ magic }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3009803, "supported_languages": null}, "macro.dbt_postgres.postgres__alter_relation_comment": {"unique_id": "macro.dbt_postgres.postgres__alter_relation_comment", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__alter_relation_comment", "macro_sql": "{% macro postgres__alter_relation_comment(relation, comment) %}\n  {% set escaped_comment = postgres_escape_comment(comment) %}\n  comment on {{ relation.type }} {{ relation }} is {{ escaped_comment }};\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3017628, "supported_languages": null}, "macro.dbt_postgres.postgres__alter_column_comment": {"unique_id": "macro.dbt_postgres.postgres__alter_column_comment", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__alter_column_comment", "macro_sql": "{% macro postgres__alter_column_comment(relation, column_dict) %}\n  {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n  {% for column_name in column_dict if (column_name in existing_columns) %}\n    {% set comment = column_dict[column_name]['description'] %}\n    {% set escaped_comment = postgres_escape_comment(comment) %}\n    comment on column {{ relation }}.{{ adapter.quote(column_name) if column_dict[column_name]['quote'] else column_name }} is {{ escaped_comment }};\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.303735, "supported_languages": null}, "macro.dbt_postgres.postgres__get_show_grant_sql": {"unique_id": "macro.dbt_postgres.postgres__get_show_grant_sql", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_show_grant_sql", "macro_sql": "\n\n{%- macro postgres__get_show_grant_sql(relation) -%}\n  select grantee, privilege_type\n  from {{ relation.information_schema('role_table_grants') }}\n      where grantor = current_role\n        and grantee != current_role\n        and table_schema = '{{ relation.schema }}'\n        and table_name = '{{ relation.identifier }}'\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3043938, "supported_languages": null}, "macro.dbt_postgres.postgres__copy_grants": {"unique_id": "macro.dbt_postgres.postgres__copy_grants", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__copy_grants", "macro_sql": "{% macro postgres__copy_grants() %}\n    {{ return(False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3047774, "supported_languages": null}, "macro.dbt_postgres.postgres__get_catalog": {"unique_id": "macro.dbt_postgres.postgres__get_catalog", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "postgres__get_catalog", "macro_sql": "{% macro postgres__get_catalog(information_schema, schemas) -%}\n\n  {%- call statement('catalog', fetch_result=True) -%}\n    {#\n      If the user has multiple databases set and the first one is wrong, this will fail.\n      But we won't fail in the case where there are multiple quoting-difference-only dbs, which is better.\n    #}\n    {% set database = information_schema.database %}\n    {{ adapter.verify_database(database) }}\n\n    select\n        '{{ database }}' as table_database,\n        sch.nspname as table_schema,\n        tbl.relname as table_name,\n        case tbl.relkind\n            when 'v' then 'VIEW'\n            else 'BASE TABLE'\n        end as table_type,\n        tbl_desc.description as table_comment,\n        col.attname as column_name,\n        col.attnum as column_index,\n        pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,\n        col_desc.description as column_comment,\n        pg_get_userbyid(tbl.relowner) as table_owner\n\n    from pg_catalog.pg_namespace sch\n    join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid\n    join pg_catalog.pg_attribute col on col.attrelid = tbl.oid\n    left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)\n    left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)\n\n    where (\n        {%- for schema in schemas -%}\n          upper(sch.nspname) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n      and not pg_is_other_temp_schema(sch.oid) -- not a temporary schema belonging to another session\n      and tbl.relpersistence in ('p', 'u') -- [p]ermanent table or [u]nlogged table. Exclude [t]emporary tables\n      and tbl.relkind in ('r', 'v', 'f', 'p') -- o[r]dinary table, [v]iew, [f]oreign table, [p]artitioned table. Other values are [i]ndex, [S]equence, [c]omposite type, [t]OAST table, [m]aterialized view\n      and col.attnum > 0 -- negative numbers are used for system columns such as oid\n      and not col.attisdropped -- column as not been dropped\n\n    order by\n        sch.nspname,\n        tbl.relname,\n        col.attnum\n\n  {%- endcall -%}\n\n  {{ return(load_result('catalog').table) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3079653, "supported_languages": null}, "macro.dbt_postgres.postgres__dateadd": {"unique_id": "macro.dbt_postgres.postgres__dateadd", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "name": "postgres__dateadd", "macro_sql": "{% macro postgres__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3091185, "supported_languages": null}, "macro.dbt_postgres.postgres__split_part": {"unique_id": "macro.dbt_postgres.postgres__split_part", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "postgres__split_part", "macro_sql": "{% macro postgres__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    {{ dbt.default__split_part(string_text, delimiter_text, part_number) }}\n  {% else %}\n    {{ dbt._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__split_part", "macro.dbt._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3109043, "supported_languages": null}, "macro.dbt_postgres.postgres__last_day": {"unique_id": "macro.dbt_postgres.postgres__last_day", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "postgres__last_day", "macro_sql": "{% macro postgres__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- postgres dateadd does not support quarter interval.\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd('month', '3', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc", "macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3129845, "supported_languages": null}, "macro.dbt_postgres.postgres__listagg": {"unique_id": "macro.dbt_postgres.postgres__listagg", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "name": "postgres__listagg", "macro_sql": "{% macro postgres__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        (array_agg(\n            {{ measure }}\n            {% if order_by_clause -%}\n            {{ order_by_clause }}\n            {%- endif %}\n        ))[1:{{ limit_num }}],\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        )\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3152633, "supported_languages": null}, "macro.dbt_postgres.postgres__datediff": {"unique_id": "macro.dbt_postgres.postgres__datediff", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "name": "postgres__datediff", "macro_sql": "{% macro postgres__datediff(first_date, second_date, datepart) -%}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3242736, "supported_languages": null}, "macro.dbt_postgres.postgres__any_value": {"unique_id": "macro.dbt_postgres.postgres__any_value", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "name": "postgres__any_value", "macro_sql": "{% macro postgres__any_value(expression) -%}\n\n    min({{ expression }})\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.325223, "supported_languages": null}, "macro.dbt_postgres.postgres__get_incremental_default_sql": {"unique_id": "macro.dbt_postgres.postgres__get_incremental_default_sql", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/materializations/incremental_strategies.sql", "original_file_path": "macros/materializations/incremental_strategies.sql", "name": "postgres__get_incremental_default_sql", "macro_sql": "{% macro postgres__get_incremental_default_sql(arg_dict) %}\n\n  {% if arg_dict[\"unique_key\"] %}\n    {% do return(get_incremental_delete_insert_sql(arg_dict)) %}\n  {% else %}\n    {% do return(get_incremental_append_sql(arg_dict)) %}\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_incremental_delete_insert_sql", "macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3268688, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_merge_sql": {"unique_id": "macro.dbt_postgres.postgres__snapshot_merge_sql", "package_name": "dbt_postgres", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/postgres", "path": "macros/materializations/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot_merge.sql", "name": "postgres__snapshot_merge_sql", "macro_sql": "{% macro postgres__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    update {{ target }}\n    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = {{ target }}.dbt_scd_id::text\n      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)\n      and {{ target }}.dbt_valid_to is null;\n\n    insert into {{ target }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n        DBT_INTERNAL_SOURCE.{{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3292954, "supported_languages": null}, "macro.dbt.build_ref_function": {"unique_id": "macro.dbt.build_ref_function", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "name": "build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {%- set resolved = ref(*_ref) -%}\n        {%- do ref_dict.update({_ref | join(\".\"): resolved.quote(database=False, schema=False, identifier=False) | string}) -%}\n    {%- endfor -%}\n\ndef ref(*args,dbt_load_df_function):\n    refs = {{ ref_dict | tojson }}\n    key = \".\".join(args)\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.333131, "supported_languages": null}, "macro.dbt.build_source_function": {"unique_id": "macro.dbt.build_source_function", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "name": "build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join(\".\"): resolved.quote(database=False, schema=False, identifier=False) | string}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = \".\".join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3346753, "supported_languages": null}, "macro.dbt.build_config_dict": {"unique_id": "macro.dbt.build_config_dict", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "name": "build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {%- for key in model.config.config_keys_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == 'language' -%}\n          {%- set value = 'python' -%}\n        {%- endif -%}\n        {%- set value = model.config[key] -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.336134, "supported_languages": null}, "macro.dbt.py_script_postfix": {"unique_id": "macro.dbt.py_script_postfix", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "name": "py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = '{{ this.database }}'\n    schema = '{{ this.schema }}'\n    identifier = '{{ this.identifier }}'\n    def __repr__(self):\n        return '{{ this }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args: ref(*args, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.337396, "supported_languages": null}, "macro.dbt.py_script_comment": {"unique_id": "macro.dbt.py_script_comment", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "name": "py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3376358, "supported_languages": null}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3421435, "supported_languages": null}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3462892, "supported_languages": null}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3489819, "supported_languages": null}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3497438, "supported_languages": null}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3545918, "supported_languages": null}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3565226, "supported_languages": null}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3575058, "supported_languages": null}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.359338, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"unique_id": "macro.dbt.default__generate_schema_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.360187, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3611364, "supported_languages": null}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3627996, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"unique_id": "macro.dbt.default__generate_alias_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3636, "supported_languages": null}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.365286, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3661976, "supported_languages": null}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3674827, "supported_languages": null}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.368944, "supported_languages": null}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.37048, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3727486, "supported_languages": null}, "macro.dbt.position": {"unique_id": "macro.dbt.position", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "name": "position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3741205, "supported_languages": null}, "macro.dbt.default__position": {"unique_id": "macro.dbt.default__position", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "name": "default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3745754, "supported_languages": null}, "macro.dbt.date_trunc": {"unique_id": "macro.dbt.date_trunc", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "name": "date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3759093, "supported_languages": null}, "macro.dbt.default__date_trunc": {"unique_id": "macro.dbt.default__date_trunc", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "name": "default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3763392, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"unique_id": "macro.dbt.escape_single_quotes", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "name": "escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.377634, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"unique_id": "macro.dbt.default__escape_single_quotes", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "name": "default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3781793, "supported_languages": null}, "macro.dbt.array_concat": {"unique_id": "macro.dbt.array_concat", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "name": "array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.379482, "supported_languages": null}, "macro.dbt.default__array_concat": {"unique_id": "macro.dbt.default__array_concat", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "name": "default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3801048, "supported_languages": null}, "macro.dbt.dateadd": {"unique_id": "macro.dbt.dateadd", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "name": "dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.381569, "supported_languages": null}, "macro.dbt.default__dateadd": {"unique_id": "macro.dbt.default__dateadd", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "name": "default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3821912, "supported_languages": null}, "macro.dbt.safe_cast": {"unique_id": "macro.dbt.safe_cast", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "name": "safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.383631, "supported_languages": null}, "macro.dbt.default__safe_cast": {"unique_id": "macro.dbt.default__safe_cast", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "name": "default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3841338, "supported_languages": null}, "macro.dbt.array_append": {"unique_id": "macro.dbt.array_append", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "name": "array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3855627, "supported_languages": null}, "macro.dbt.default__array_append": {"unique_id": "macro.dbt.default__array_append", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "name": "default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3860416, "supported_languages": null}, "macro.dbt.split_part": {"unique_id": "macro.dbt.split_part", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3879893, "supported_languages": null}, "macro.dbt.default__split_part": {"unique_id": "macro.dbt.default__split_part", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3885698, "supported_languages": null}, "macro.dbt._split_part_negative": {"unique_id": "macro.dbt._split_part_negative", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "name": "_split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3893611, "supported_languages": null}, "macro.dbt.last_day": {"unique_id": "macro.dbt.last_day", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.390856, "supported_languages": null}, "macro.dbt.default_last_day": {"unique_id": "macro.dbt.default_last_day", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3917403, "supported_languages": null}, "macro.dbt.default__last_day": {"unique_id": "macro.dbt.default__last_day", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "name": "default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.392257, "supported_languages": null}, "macro.dbt.right": {"unique_id": "macro.dbt.right", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "name": "right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3936977, "supported_languages": null}, "macro.dbt.default__right": {"unique_id": "macro.dbt.default__right", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "name": "default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.39422, "supported_languages": null}, "macro.dbt.intersect": {"unique_id": "macro.dbt.intersect", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "name": "intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3953989, "supported_languages": null}, "macro.dbt.default__intersect": {"unique_id": "macro.dbt.default__intersect", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "name": "default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3956528, "supported_languages": null}, "macro.dbt.except": {"unique_id": "macro.dbt.except", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "name": "except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3967986, "supported_languages": null}, "macro.dbt.default__except": {"unique_id": "macro.dbt.default__except", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "name": "default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.397053, "supported_languages": null}, "macro.dbt.length": {"unique_id": "macro.dbt.length", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "name": "length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3983817, "supported_languages": null}, "macro.dbt.default__length": {"unique_id": "macro.dbt.default__length", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "name": "default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.3987768, "supported_languages": null}, "macro.dbt.string_literal": {"unique_id": "macro.dbt.string_literal", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "name": "string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4000819, "supported_languages": null}, "macro.dbt.default__string_literal": {"unique_id": "macro.dbt.default__string_literal", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "name": "default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4004622, "supported_languages": null}, "macro.dbt.replace": {"unique_id": "macro.dbt.replace", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "name": "replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.402192, "supported_languages": null}, "macro.dbt.default__replace": {"unique_id": "macro.dbt.default__replace", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "name": "default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.402793, "supported_languages": null}, "macro.dbt.bool_or": {"unique_id": "macro.dbt.bool_or", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "name": "bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4041178, "supported_languages": null}, "macro.dbt.default__bool_or": {"unique_id": "macro.dbt.default__bool_or", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "name": "default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.404489, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"unique_id": "macro.dbt.cast_bool_to_text", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "name": "cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.405748, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"unique_id": "macro.dbt.default__cast_bool_to_text", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "name": "default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4063277, "supported_languages": null}, "macro.dbt.hash": {"unique_id": "macro.dbt.hash", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "name": "hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4076583, "supported_languages": null}, "macro.dbt.default__hash": {"unique_id": "macro.dbt.default__hash", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "name": "default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.408229, "supported_languages": null}, "macro.dbt.concat": {"unique_id": "macro.dbt.concat", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "name": "concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.40954, "supported_languages": null}, "macro.dbt.default__concat": {"unique_id": "macro.dbt.default__concat", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "name": "default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.410024, "supported_languages": null}, "macro.dbt.listagg": {"unique_id": "macro.dbt.listagg", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "name": "listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4122686, "supported_languages": null}, "macro.dbt.default__listagg": {"unique_id": "macro.dbt.default__listagg", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "name": "default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.413678, "supported_languages": null}, "macro.dbt.array_construct": {"unique_id": "macro.dbt.array_construct", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "name": "array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4153585, "supported_languages": null}, "macro.dbt.default__array_construct": {"unique_id": "macro.dbt.default__array_construct", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "name": "default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4161525, "supported_languages": null}, "macro.dbt.datediff": {"unique_id": "macro.dbt.datediff", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "name": "datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.417594, "supported_languages": null}, "macro.dbt.default__datediff": {"unique_id": "macro.dbt.default__datediff", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "name": "default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4181917, "supported_languages": null}, "macro.dbt.any_value": {"unique_id": "macro.dbt.any_value", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "name": "any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4195035, "supported_languages": null}, "macro.dbt.default__any_value": {"unique_id": "macro.dbt.default__any_value", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "name": "default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4198875, "supported_languages": null}, "macro.dbt.type_string": {"unique_id": "macro.dbt.type_string", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4227421, "supported_languages": null}, "macro.dbt.default__type_string": {"unique_id": "macro.dbt.default__type_string", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4232903, "supported_languages": null}, "macro.dbt.type_timestamp": {"unique_id": "macro.dbt.type_timestamp", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4238594, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"unique_id": "macro.dbt.default__type_timestamp", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4244113, "supported_languages": null}, "macro.dbt.type_float": {"unique_id": "macro.dbt.type_float", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4251425, "supported_languages": null}, "macro.dbt.default__type_float": {"unique_id": "macro.dbt.default__type_float", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4257007, "supported_languages": null}, "macro.dbt.type_numeric": {"unique_id": "macro.dbt.type_numeric", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4262958, "supported_languages": null}, "macro.dbt.default__type_numeric": {"unique_id": "macro.dbt.default__type_numeric", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4269416, "supported_languages": null}, "macro.dbt.type_bigint": {"unique_id": "macro.dbt.type_bigint", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4274852, "supported_languages": null}, "macro.dbt.default__type_bigint": {"unique_id": "macro.dbt.default__type_bigint", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4280176, "supported_languages": null}, "macro.dbt.type_int": {"unique_id": "macro.dbt.type_int", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.428578, "supported_languages": null}, "macro.dbt.default__type_int": {"unique_id": "macro.dbt.default__type_int", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4291108, "supported_languages": null}, "macro.dbt.type_boolean": {"unique_id": "macro.dbt.type_boolean", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4296432, "supported_languages": null}, "macro.dbt.default__type_boolean": {"unique_id": "macro.dbt.default__type_boolean", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "name": "default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4301732, "supported_languages": null}, "macro.dbt.copy_grants": {"unique_id": "macro.dbt.copy_grants", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4344428, "supported_languages": null}, "macro.dbt.default__copy_grants": {"unique_id": "macro.dbt.default__copy_grants", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.434843, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4353862, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4357433, "supported_languages": null}, "macro.dbt.should_revoke": {"unique_id": "macro.dbt.should_revoke", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4368942, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"unique_id": "macro.dbt.get_show_grant_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4375408, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"unique_id": "macro.dbt.default__get_show_grant_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.437926, "supported_languages": null}, "macro.dbt.get_grant_sql": {"unique_id": "macro.dbt.get_grant_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4387412, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"unique_id": "macro.dbt.default__get_grant_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4394178, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"unique_id": "macro.dbt.get_revoke_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.44023, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"unique_id": "macro.dbt.default__get_revoke_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4408402, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"unique_id": "macro.dbt.get_dcl_statement_list", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4415898, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"unique_id": "macro.dbt.default__get_dcl_statement_list", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4445162, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"unique_id": "macro.dbt.call_dcl_statements", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4452002, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"unique_id": "macro.dbt.default__call_dcl_statements", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4460802, "supported_languages": null}, "macro.dbt.apply_grants": {"unique_id": "macro.dbt.apply_grants", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.446888, "supported_languages": null}, "macro.dbt.default__apply_grants": {"unique_id": "macro.dbt.default__apply_grants", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "name": "default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4506578, "supported_languages": null}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4524536, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.452982, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4534764, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4538476, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"unique_id": "macro.dbt.current_timestamp_backcompat", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4544623, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"unique_id": "macro.dbt.default__current_timestamp_backcompat", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4547331, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4553082, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "name": "default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt_redshift.redshift__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4558935, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4576876, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4581757, "supported_languages": null}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4587476, "supported_languages": null}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4601638, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"unique_id": "macro.dbt.make_intermediate_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.467413, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"unique_id": "macro.dbt.default__make_intermediate_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4679635, "supported_languages": null}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4686766, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4696188, "supported_languages": null}, "macro.dbt.make_backup_relation": {"unique_id": "macro.dbt.make_backup_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.470438, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"unique_id": "macro.dbt.default__make_backup_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4714859, "supported_languages": null}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4722655, "supported_languages": null}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.473055, "supported_languages": null}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4736989, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.474277, "supported_languages": null}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.474942, "supported_languages": null}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4758549, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.476658, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"unique_id": "macro.dbt.default__get_or_create_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4784482, "supported_languages": null}, "macro.dbt.load_cached_relation": {"unique_id": "macro.dbt.load_cached_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4791942, "supported_languages": null}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4796624, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4803004, "supported_languages": null}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.481786, "supported_languages": null}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.482468, "supported_languages": null}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.483036, "supported_languages": null}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4836829, "supported_languages": null}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4854302, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4869158, "supported_languages": null}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.489158, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4897835, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4905324, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4911392, "supported_languages": null}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4920073, "supported_languages": null}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4938736, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4979088, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4984658, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.4994652, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5000603, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.501148, "supported_languages": null}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5018845, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.504009, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"unique_id": "macro.dbt.alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5049007, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5076387, "supported_languages": null}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5112174, "supported_languages": null}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5120595, "supported_languages": null}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5126774, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5132093, "supported_languages": null}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5138376, "supported_languages": null}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5147257, "supported_languages": null}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5153925, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.516364, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.516978, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5175056, "supported_languages": null}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5189703, "supported_languages": null}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5199678, "supported_languages": null}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5211468, "supported_languages": null}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.524797, "supported_languages": null}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5254436, "supported_languages": null}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5259206, "supported_languages": null}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5264118, "supported_languages": null}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5268736, "supported_languages": null}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparision later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5367417, "supported_languages": ["sql"]}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.546574, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5496075, "supported_languages": null}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.550439, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5520494, "supported_languages": null}, "macro.dbt.get_csv_sql": {"unique_id": "macro.dbt.get_csv_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5526671, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"unique_id": "macro.dbt.default__get_csv_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.553097, "supported_languages": null}, "macro.dbt.get_binding_char": {"unique_id": "macro.dbt.get_binding_char", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.553546, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"unique_id": "macro.dbt.default__get_binding_char", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5539808, "supported_languages": null}, "macro.dbt.get_batch_size": {"unique_id": "macro.dbt.get_batch_size", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5545468, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"unique_id": "macro.dbt.default__get_batch_size", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5549634, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5564787, "supported_languages": null}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5571687, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5615242, "supported_languages": null}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/table.sql", "original_file_path": "macros/materializations/models/table/table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n      {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5693793, "supported_languages": ["sql"]}, "macro.dbt.get_create_table_as_sql": {"unique_id": "macro.dbt.get_create_table_as_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5712876, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"unique_id": "macro.dbt.default__get_create_table_as_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5718853, "supported_languages": null}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5732741, "supported_languages": null}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5746946, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"unique_id": "macro.dbt.get_create_view_as_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5761807, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"unique_id": "macro.dbt.default__get_create_view_as_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.576644, "supported_languages": null}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.577273, "supported_languages": null}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5782108, "supported_languages": null}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/models/view/create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=True) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5830214, "supported_languages": null}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5844147, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.585198, "supported_languages": null}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/view.sql", "original_file_path": "macros/materializations/models/view/view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n    {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5927744, "supported_languages": ["sql"]}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.597089, "supported_languages": null}, "macro.dbt.diff_columns": {"unique_id": "macro.dbt.diff_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.5990133, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"unique_id": "macro.dbt.diff_column_data_types", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6013308, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"unique_id": "macro.dbt.get_merge_update_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6021738, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"unique_id": "macro.dbt.default__get_merge_update_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6045842, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"unique_id": "macro.dbt.get_incremental_append_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6072857, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"unique_id": "macro.dbt.default__get_incremental_append_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6080537, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"unique_id": "macro.dbt.get_incremental_delete_insert_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.608658, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6095061, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"unique_id": "macro.dbt.get_incremental_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6101325, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"unique_id": "macro.dbt.default__get_incremental_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6109822, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6115875, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"predicates\"])) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6124759, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"unique_id": "macro.dbt.get_incremental_default_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.613118, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"unique_id": "macro.dbt.default__get_incremental_default_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6136656, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"unique_id": "macro.dbt.get_insert_into_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "name": "get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6146517, "supported_languages": null}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6237674, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6292303, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6300204, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last }}\n                {% endfor %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            );\n\n        {% endif %}\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6324701, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.633322, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.635485, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6502352, "supported_languages": ["sql"]}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6526382, "supported_languages": null}, "macro.dbt.incremental_validate_on_schema_change": {"unique_id": "macro.dbt.incremental_validate_on_schema_change", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.663953, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"unique_id": "macro.dbt.check_for_schema_changes", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.668099, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"unique_id": "macro.dbt.sync_column_schemas", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.671949, "supported_languages": null}, "macro.dbt.process_schema_changes": {"unique_id": "macro.dbt.process_schema_changes", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6746905, "supported_languages": null}, "macro.dbt.get_where_subquery": {"unique_id": "macro.dbt.get_where_subquery", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6762466, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"unique_id": "macro.dbt.default__get_where_subquery", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6775074, "supported_languages": null}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6791797, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.680177, "supported_languages": null}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "name": "materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6865962, "supported_languages": ["sql"]}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6952107, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6957881, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6965775, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6989202, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.6994584, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.700022, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n          select {{ check_cols_config | join(', ') }} from ({{ node['compiled_code'] }}) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7047274, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    {% set updated_at = config.get('updated_at', snapshot_get_time()) %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.709108, "supported_languages": null}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7170467, "supported_languages": null}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7180228, "supported_languages": null}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.718581, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7188735, "supported_languages": null}, "macro.dbt.get_true_sql": {"unique_id": "macro.dbt.get_true_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7193434, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"unique_id": "macro.dbt.default__get_true_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7197216, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7203832, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"unique_id": "macro.dbt.default__snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.723092, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.723712, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"unique_id": "macro.dbt.default__build_snapshot_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7245345, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7259147, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.742623, "supported_languages": ["sql"]}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7444117, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.745328, "supported_languages": null}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7473514, "supported_languages": null}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7481744, "supported_languages": null}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7491665, "supported_languages": null}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7501392, "supported_languages": null}, "macro.dbt_utils.nullcheck": {"unique_id": "macro.dbt_utils.nullcheck", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "name": "nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.751673, "supported_languages": null}, "macro.dbt_utils.default__nullcheck": {"unique_id": "macro.dbt_utils.default__nullcheck", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "name": "default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7527516, "supported_languages": null}, "macro.dbt_utils.get_query_results_as_dict": {"unique_id": "macro.dbt_utils.get_query_results_as_dict", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "name": "get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7543492, "supported_languages": null}, "macro.dbt_utils.default__get_query_results_as_dict": {"unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "name": "default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.756332, "supported_languages": null}, "macro.dbt_utils.get_relations_by_pattern": {"unique_id": "macro.dbt_utils.get_relations_by_pattern", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "name": "get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7586448, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_pattern": {"unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "name": "default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.761353, "supported_languages": null}, "macro.dbt_utils.degrees_to_radians": {"unique_id": "macro.dbt_utils.degrees_to_radians", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.764173, "supported_languages": null}, "macro.dbt_utils.haversine_distance": {"unique_id": "macro.dbt_utils.haversine_distance", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.76516, "supported_languages": null}, "macro.dbt_utils.default__haversine_distance": {"unique_id": "macro.dbt_utils.default__haversine_distance", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7671597, "supported_languages": null}, "macro.dbt_utils.bigquery__haversine_distance": {"unique_id": "macro.dbt_utils.bigquery__haversine_distance", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7700906, "supported_languages": null}, "macro.dbt_utils.union_relations": {"unique_id": "macro.dbt_utils.union_relations", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "name": "union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name, where)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7759795, "supported_languages": null}, "macro.dbt_utils.default__union_relations": {"unique_id": "macro.dbt_utils.default__union_relations", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "name": "default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column in exclude -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column not in include -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n    {%- set dbt_command = flags.WHICH -%}\n\n\n    {% if dbt_command in ['run', 'build'] %}\n    {% if (include | length > 0 or exclude | length > 0) and not column_superset.keys() %}\n        {%- set relations_string -%}\n            {%- for relation in relations -%}\n                {{ relation.name }}\n            {%- if not loop.last %}, {% endif -%}\n            {%- endfor -%}\n        {%- endset -%}\n\n        {%- set error_message -%}\n            There were no columns found to union for relations {{ relations_string }}\n        {%- endset -%}\n\n        {{ exceptions.raise_compiler_error(error_message) }}\n    {%- endif -%}\n    {%- endif -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                cast({{ dbt_utils.string_literal(relation) }} as {{ dbt_utils.type_string() }}) as {{ source_column_name }},\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n\n            {% if where -%}\n            where {{ where }}\n            {%- endif %}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.string_literal", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7864015, "supported_languages": null}, "macro.dbt_utils.unpivot": {"unique_id": "macro.dbt_utils.unpivot", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "name": "unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', table=none) -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name, table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7911098, "supported_languages": null}, "macro.dbt_utils.default__unpivot": {"unique_id": "macro.dbt_utils.default__unpivot", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "name": "default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', table=none) -%}\n\n    {% if table %}\n        {%- set error_message = '\n            Warning: the `unpivot` macro no longer accepts a `table` parameter. \\\n            This parameter will be deprecated in a future release of dbt-utils. Use the `relation` parameter instead. \\\n            The {}.{} model triggered this warning. \\\n            '.format(model.package_name, model.name) -%}\n        {%- do exceptions.warn(error_message) -%}\n    {% endif %}\n\n    {% if relation and table %}\n        {{ exceptions.raise_compiler_error(\"Error: both the `relation` and `table` parameters were provided to `unpivot` macro. Choose one only (we recommend `relation`).\") }}\n    {% elif not relation and table %}\n        {% set relation=table %}\n    {% elif not relation and not table %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt_utils.type_string() }}) as {{ field_name }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt_utils.cast_bool_to_text(col.column) }}\n             {% else %}\n           {{ col.column }}\n             {% endif %}\n           as {{ cast_to }}) as {{ value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.type_string", "macro.dbt_utils.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.7978685, "supported_languages": null}, "macro.dbt_utils.get_column_values": {"unique_id": "macro.dbt_utils.get_column_values", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "name": "get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default, where)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8011703, "supported_languages": null}, "macro.dbt_utils.default__get_column_values": {"unique_id": "macro.dbt_utils.default__get_column_values", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "name": "default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {% set default = [] if not default %}\n        {{ return(default) }}\n    {% endif %}\n\n    {%- do dbt_utils._is_ephemeral(table, 'get_column_values') -%}\n\n    {# Not all relations are tables. Renaming for internal clarity without breaking functionality for anyone using named arguments #}\n    {# TODO: Change the method signature in a future 0.x.0 release #}\n    {%- set target_relation = table -%}\n\n    {# adapter.load_relation is a convenience wrapper to avoid building a Relation when we already have one #}\n    {% set relation_exists = (load_relation(target_relation)) is not none %}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not relation_exists and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ target_relation ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not relation_exists and default is not none -%}\n\n          {{ log(\"Relation \" ~ target_relation ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n\n            {% if where is not none %}\n            where {{ where }}\n            {% endif %}\n\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_ephemeral", "macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8063207, "supported_languages": null}, "macro.dbt_utils.pivot": {"unique_id": "macro.dbt_utils.pivot", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "name": "pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.809607, "supported_languages": null}, "macro.dbt_utils.default__pivot": {"unique_id": "macro.dbt_utils.default__pivot", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "name": "default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for value in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ dbt_utils.escape_single_quotes(value) }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ value ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ value ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.escape_single_quotes", "macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8124719, "supported_languages": null}, "macro.dbt_utils.nullcheck_table": {"unique_id": "macro.dbt_utils.nullcheck_table", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "name": "nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8139064, "supported_languages": null}, "macro.dbt_utils.default__nullcheck_table": {"unique_id": "macro.dbt_utils.default__nullcheck_table", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "name": "default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.81514, "supported_languages": null}, "macro.dbt_utils.get_table_types_sql": {"unique_id": "macro.dbt_utils.get_table_types_sql", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "name": "get_table_types_sql", "macro_sql": "{%- macro get_table_types_sql() -%}\n  {{ return(adapter.dispatch('get_table_types_sql', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.postgres__get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.81682, "supported_languages": null}, "macro.dbt_utils.default__get_table_types_sql": {"unique_id": "macro.dbt_utils.default__get_table_types_sql", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "name": "default__get_table_types_sql", "macro_sql": "{% macro default__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as \"table_type\"\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8171198, "supported_languages": null}, "macro.dbt_utils.postgres__get_table_types_sql": {"unique_id": "macro.dbt_utils.postgres__get_table_types_sql", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "name": "postgres__get_table_types_sql", "macro_sql": "{% macro postgres__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'FOREIGN' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as \"table_type\"\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8174, "supported_languages": null}, "macro.dbt_utils.bigquery__get_table_types_sql": {"unique_id": "macro.dbt_utils.bigquery__get_table_types_sql", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "name": "bigquery__get_table_types_sql", "macro_sql": "{% macro bigquery__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as `table_type`\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8176768, "supported_languages": null}, "macro.dbt_utils.get_relations_by_prefix": {"unique_id": "macro.dbt_utils.get_relations_by_prefix", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "name": "get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.820009, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_prefix": {"unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "name": "default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8229456, "supported_languages": null}, "macro.dbt_utils.surrogate_key": {"unique_id": "macro.dbt_utils.surrogate_key", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "name": "surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8250794, "supported_languages": null}, "macro.dbt_utils.default__surrogate_key": {"unique_id": "macro.dbt_utils.default__surrogate_key", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "name": "default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- if varargs|length >= 1 or field_list is string %}\n\n{%- set error_message = '\nWarning: the `surrogate_key` macro now takes a single list argument instead of \\\nmultiple string arguments. Support for multiple string arguments will be \\\ndeprecated in a future release of dbt-utils. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{# first argument is not included in varargs, so add first element to field_list_xf #}\n{%- set field_list_xf = [field_list] -%}\n\n{%- for field in varargs %}\n{%- set _ = field_list_xf.append(field) -%}\n{%- endfor -%}\n\n{%- else -%}\n\n{# if using list, just set field_list_xf as field_list #}\n{%- set field_list_xf = field_list -%}\n\n{%- endif -%}\n\n\n{%- set fields = [] -%}\n\n{%- for field in field_list_xf -%}\n\n    {%- set _ = fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt_utils.type_string() ~ \"), '')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- set _ = fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{dbt_utils.hash(dbt_utils.concat(fields))}}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string", "macro.dbt_utils.hash", "macro.dbt_utils.concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.82831, "supported_languages": null}, "macro.dbt_utils.group_by": {"unique_id": "macro.dbt_utils.group_by", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "name": "group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.829708, "supported_languages": null}, "macro.dbt_utils.default__group_by": {"unique_id": "macro.dbt_utils.default__group_by", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "name": "default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8305445, "supported_languages": null}, "macro.dbt_utils.safe_add": {"unique_id": "macro.dbt_utils.safe_add", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "name": "safe_add", "macro_sql": "{%- macro safe_add() -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(*varargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8321056, "supported_languages": null}, "macro.dbt_utils.default__safe_add": {"unique_id": "macro.dbt_utils.default__safe_add", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "name": "default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add() -%}\n\n{% set fields = [] %}\n\n{%- for field in varargs -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8335528, "supported_languages": null}, "macro.dbt_utils.get_filtered_columns_in_relation": {"unique_id": "macro.dbt_utils.get_filtered_columns_in_relation", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "name": "get_filtered_columns_in_relation", "macro_sql": "{% macro get_filtered_columns_in_relation(from, except=[]) -%}\n    {{ return(adapter.dispatch('get_filtered_columns_in_relation', 'dbt_utils')(from, except)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8353813, "supported_languages": null}, "macro.dbt_utils.default__get_filtered_columns_in_relation": {"unique_id": "macro.dbt_utils.default__get_filtered_columns_in_relation", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "name": "default__get_filtered_columns_in_relation", "macro_sql": "{% macro default__get_filtered_columns_in_relation(from, except=[]) -%}\n    {%- do dbt_utils._is_relation(from, 'get_filtered_columns_in_relation') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'get_filtered_columns_in_relation') -%}\n\n    {# -- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n        {%- endif %}\n    {%- endfor %}\n\n    {{ return(include_cols) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.83772, "supported_languages": null}, "macro.dbt_utils.get_powers_of_two": {"unique_id": "macro.dbt_utils.get_powers_of_two", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8401842, "supported_languages": null}, "macro.dbt_utils.default__get_powers_of_two": {"unique_id": "macro.dbt_utils.default__get_powers_of_two", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8416035, "supported_languages": null}, "macro.dbt_utils.generate_series": {"unique_id": "macro.dbt_utils.generate_series", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8422878, "supported_languages": null}, "macro.dbt_utils.default__generate_series": {"unique_id": "macro.dbt_utils.default__generate_series", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8440263, "supported_languages": null}, "macro.dbt_utils.get_intervals_between": {"unique_id": "macro.dbt_utils.get_intervals_between", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8461986, "supported_languages": null}, "macro.dbt_utils.default__get_intervals_between": {"unique_id": "macro.dbt_utils.default__get_intervals_between", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{dbt_utils.datediff(start_date, end_date, datepart)}}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8481507, "supported_languages": null}, "macro.dbt_utils.date_spine": {"unique_id": "macro.dbt_utils.date_spine", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8489509, "supported_languages": null}, "macro.dbt_utils.default__date_spine": {"unique_id": "macro.dbt_utils.default__date_spine", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt_utils.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8501365, "supported_languages": null}, "macro.dbt_utils.get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.853844, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as \"table_schema\",\n            table_name as \"table_name\",\n            {{ dbt_utils.get_table_types_sql() }}\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8547468, "supported_languages": null}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                {{ dbt_utils.get_table_types_sql() }}\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata", "macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.857067, "supported_languages": null}, "macro.dbt_utils._bigquery__get_matching_schemata": {"unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "_bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8588066, "supported_languages": null}, "macro.dbt_utils.get_tables_by_prefix_sql": {"unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "name": "get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8604796, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "name": "default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8613644, "supported_languages": null}, "macro.dbt_utils.deduplicate": {"unique_id": "macro.dbt_utils.deduplicate", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "name": "deduplicate", "macro_sql": "{%- macro deduplicate(relation, partition_by, order_by=none, relation_alias=none) -%}\n\n    {%- set error_message_group_by -%}\nWarning: the `group_by` parameter of the `deduplicate` macro is no longer supported and will be deprecated in a future release of dbt-utils.\nUse `partition_by` instead.\nThe {{ model.package_name }}.{{ model.name }} model triggered this warning.\n    {%- endset -%}\n\n    {% if kwargs.get('group_by') %}\n    {%- do exceptions.warn(error_message_group_by) -%}\n    {%- endif -%}\n\n    {%- set error_message_order_by -%}\nWarning: `order_by` as an optional parameter of the `deduplicate` macro is no longer supported and will be deprecated in a future release of dbt-utils.\nSupply a non-null value for `order_by` instead.\nThe {{ model.package_name }}.{{ model.name }} model triggered this warning.\n    {%- endset -%}\n\n    {% if not order_by %}\n    {%- do exceptions.warn(error_message_order_by) -%}\n    {%- endif -%}\n\n    {%- set error_message_alias -%}\nWarning: the `relation_alias` parameter of the `deduplicate` macro is no longer supported and will be deprecated in a future release of dbt-utils.\nIf you were using `relation_alias` to point to a CTE previously then you can now pass the alias directly to `relation` instead.\nThe {{ model.package_name }}.{{ model.name }} model triggered this warning.\n    {%- endset -%}\n\n    {% if relation_alias %}\n    {%- do exceptions.warn(error_message_alias) -%}\n    {%- endif -%}\n\n    {% set partition_by = partition_by or kwargs.get('group_by') %}\n    {% set relation = relation_alias or relation %}\n    {% set order_by = order_by or \"'1'\" %}\n\n    {{ return(adapter.dispatch('deduplicate', 'dbt_utils')(relation, partition_by, order_by)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8679202, "supported_languages": null}, "macro.dbt_utils.default__deduplicate": {"unique_id": "macro.dbt_utils.default__deduplicate", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "name": "default__deduplicate", "macro_sql": "\n\n{%- macro default__deduplicate(relation, partition_by, order_by) -%}\n\n    with row_numbered as (\n        select\n            _inner.*,\n            row_number() over (\n                partition by {{ partition_by }}\n                order by {{ order_by }}\n            ) as rn\n        from {{ relation }} as _inner\n    )\n\n    select\n        distinct data.*\n    from {{ relation }} as data\n    {#\n    -- Not all DBs will support natural joins but the ones that do include:\n    -- Oracle, MySQL, SQLite, Redshift, Teradata, Materialize, Databricks\n    -- Apache Spark, SingleStore, Vertica\n    -- Those that do not appear to support natural joins include:\n    -- SQLServer, Trino, Presto, Rockset, Athena\n    #}\n    natural join row_numbered\n    where row_numbered.rn = 1\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.868704, "supported_languages": null}, "macro.dbt_utils.redshift__deduplicate": {"unique_id": "macro.dbt_utils.redshift__deduplicate", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "name": "redshift__deduplicate", "macro_sql": "{% macro redshift__deduplicate(relation, partition_by, order_by) -%}\n\n    {{ return(dbt_utils.default__deduplicate(relation, partition_by, order_by=order_by)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.869407, "supported_languages": null}, "macro.dbt_utils.postgres__deduplicate": {"unique_id": "macro.dbt_utils.postgres__deduplicate", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "name": "postgres__deduplicate", "macro_sql": "\n{%- macro postgres__deduplicate(relation, partition_by, order_by) -%}\n\n    select\n        distinct on ({{ partition_by }}) *\n    from {{ relation }}\n    order by {{ partition_by }}{{ ',' ~ order_by }}\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8700697, "supported_languages": null}, "macro.dbt_utils.snowflake__deduplicate": {"unique_id": "macro.dbt_utils.snowflake__deduplicate", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "name": "snowflake__deduplicate", "macro_sql": "\n{%- macro snowflake__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }}\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.870618, "supported_languages": null}, "macro.dbt_utils.bigquery__deduplicate": {"unique_id": "macro.dbt_utils.bigquery__deduplicate", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "name": "bigquery__deduplicate", "macro_sql": "\n{%- macro bigquery__deduplicate(relation, partition_by, order_by) -%}\n\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by {{ order_by }}\n                limit 1\n            )[offset(0)] unique\n        from {{ relation }} original\n        group by {{ partition_by }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8711607, "supported_languages": null}, "macro.dbt_utils.star": {"unique_id": "macro.dbt_utils.star", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "name": "star", "macro_sql": "{% macro star(from, relation_alias=False, except=[], prefix='', suffix='') -%}\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8734412, "supported_languages": null}, "macro.dbt_utils.default__star": {"unique_id": "macro.dbt_utils.default__star", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "name": "default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[], prefix='', suffix='') -%}\n    {%- do dbt_utils._is_relation(from, 'star') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('*') }}\n    {% endif %}\n\n    {% set cols = dbt_utils.get_filtered_columns_in_relation(from, except) %}\n\n    {%- if cols|length <= 0 -%}\n      {{- return('*') -}}\n    {%- else -%}\n        {%- for col in cols %}\n            {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}{{ adapter.quote(col)|trim }} {%- if prefix!='' or suffix!='' %} as {{ adapter.quote(prefix ~ col ~ suffix)|trim }} {%- endif -%}\n            {%- if not loop.last %},{{ '\\n  ' }}{% endif %}\n        {%- endfor -%}\n    {% endif %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8767564, "supported_languages": null}, "macro.dbt_utils.cast_array_to_string": {"unique_id": "macro.dbt_utils.cast_array_to_string", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_array_to_string.sql", "original_file_path": "macros/cross_db_utils/cast_array_to_string.sql", "name": "cast_array_to_string", "macro_sql": "{% macro cast_array_to_string(array) %}\n  {{ adapter.dispatch('cast_array_to_string', 'dbt_utils') (array) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__cast_array_to_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8783722, "supported_languages": null}, "macro.dbt_utils.default__cast_array_to_string": {"unique_id": "macro.dbt_utils.default__cast_array_to_string", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_array_to_string.sql", "original_file_path": "macros/cross_db_utils/cast_array_to_string.sql", "name": "default__cast_array_to_string", "macro_sql": "{% macro default__cast_array_to_string(array) %}\n    cast({{ array }} as {{ dbt_utils.type_string() }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.878876, "supported_languages": null}, "macro.dbt_utils.postgres__cast_array_to_string": {"unique_id": "macro.dbt_utils.postgres__cast_array_to_string", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_array_to_string.sql", "original_file_path": "macros/cross_db_utils/cast_array_to_string.sql", "name": "postgres__cast_array_to_string", "macro_sql": "{% macro postgres__cast_array_to_string(array) %}\n    {%- set array_as_string -%}cast({{ array }} as {{ dbt_utils.type_string() }}){%- endset -%}\n    {{ dbt_utils.replace(dbt_utils.replace(array_as_string,\"'}'\",\"']'\"),\"'{'\",\"'['\") }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string", "macro.dbt_utils.replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.879904, "supported_languages": null}, "macro.dbt_utils.redshift__cast_array_to_string": {"unique_id": "macro.dbt_utils.redshift__cast_array_to_string", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_array_to_string.sql", "original_file_path": "macros/cross_db_utils/cast_array_to_string.sql", "name": "redshift__cast_array_to_string", "macro_sql": "{% macro redshift__cast_array_to_string(array) %}\n    cast({{ array }} as {{ dbt_utils.type_string() }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8804157, "supported_languages": null}, "macro.dbt_utils.bigquery__cast_array_to_string": {"unique_id": "macro.dbt_utils.bigquery__cast_array_to_string", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_array_to_string.sql", "original_file_path": "macros/cross_db_utils/cast_array_to_string.sql", "name": "bigquery__cast_array_to_string", "macro_sql": "{% macro bigquery__cast_array_to_string(array) %}\n    '['||(select string_agg(cast(element as string), ',') from unnest({{ array }}) element)||']'\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8807504, "supported_languages": null}, "macro.dbt_utils.position": {"unique_id": "macro.dbt_utils.position", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt_utils') (substring_text, string_text)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.882248, "supported_languages": null}, "macro.dbt_utils.default__position": {"unique_id": "macro.dbt_utils.default__position", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n    \n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8827, "supported_languages": null}, "macro.dbt_utils.bigquery__position": {"unique_id": "macro.dbt_utils.bigquery__position", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "bigquery__position", "macro_sql": "{% macro bigquery__position(substring_text, string_text) %}\n\n    strpos(\n        {{ string_text }},\n        {{ substring_text }}\n        \n    )\n    \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8831332, "supported_languages": null}, "macro.dbt_utils.date_trunc": {"unique_id": "macro.dbt_utils.date_trunc", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt_utils') (datepart, date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.884643, "supported_languages": null}, "macro.dbt_utils.default__date_trunc": {"unique_id": "macro.dbt_utils.default__date_trunc", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8851, "supported_languages": null}, "macro.dbt_utils.bigquery__date_trunc": {"unique_id": "macro.dbt_utils.bigquery__date_trunc", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "bigquery__date_trunc", "macro_sql": "{% macro bigquery__date_trunc(datepart, date) -%}\n    timestamp_trunc(\n        cast({{date}} as timestamp),\n        {{datepart}}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.88556, "supported_languages": null}, "macro.dbt_utils.type_string": {"unique_id": "macro.dbt_utils.type_string", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.88789, "supported_languages": null}, "macro.dbt_utils.default__type_string": {"unique_id": "macro.dbt_utils.default__type_string", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_string", "macro_sql": "{% macro default__type_string() %}\n    string\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8881714, "supported_languages": null}, "macro.dbt_utils.redshift__type_string": {"unique_id": "macro.dbt_utils.redshift__type_string", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "redshift__type_string", "macro_sql": "\n\n{%- macro redshift__type_string() -%}\n    varchar\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8884299, "supported_languages": null}, "macro.dbt_utils.postgres__type_string": {"unique_id": "macro.dbt_utils.postgres__type_string", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "postgres__type_string", "macro_sql": "{% macro postgres__type_string() %}\n    varchar\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8886814, "supported_languages": null}, "macro.dbt_utils.snowflake__type_string": {"unique_id": "macro.dbt_utils.snowflake__type_string", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_string", "macro_sql": "{% macro snowflake__type_string() %}\n    varchar\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.88893, "supported_languages": null}, "macro.dbt_utils.type_timestamp": {"unique_id": "macro.dbt_utils.type_timestamp", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.postgres__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.889684, "supported_languages": null}, "macro.dbt_utils.default__type_timestamp": {"unique_id": "macro.dbt_utils.default__type_timestamp", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8899782, "supported_languages": null}, "macro.dbt_utils.postgres__type_timestamp": {"unique_id": "macro.dbt_utils.postgres__type_timestamp", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "postgres__type_timestamp", "macro_sql": "{% macro postgres__type_timestamp() %}\n    timestamp without time zone\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.890241, "supported_languages": null}, "macro.dbt_utils.snowflake__type_timestamp": {"unique_id": "macro.dbt_utils.snowflake__type_timestamp", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_timestamp", "macro_sql": "{% macro snowflake__type_timestamp() %}\n    timestamp_ntz\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8904903, "supported_languages": null}, "macro.dbt_utils.type_float": {"unique_id": "macro.dbt_utils.type_float", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8910487, "supported_languages": null}, "macro.dbt_utils.default__type_float": {"unique_id": "macro.dbt_utils.default__type_float", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_float", "macro_sql": "{% macro default__type_float() %}\n    float\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8913035, "supported_languages": null}, "macro.dbt_utils.bigquery__type_float": {"unique_id": "macro.dbt_utils.bigquery__type_float", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_float", "macro_sql": "{% macro bigquery__type_float() %}\n    float64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8915653, "supported_languages": null}, "macro.dbt_utils.type_numeric": {"unique_id": "macro.dbt_utils.type_numeric", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.892129, "supported_languages": null}, "macro.dbt_utils.default__type_numeric": {"unique_id": "macro.dbt_utils.default__type_numeric", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    numeric(28, 6)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8923893, "supported_languages": null}, "macro.dbt_utils.bigquery__type_numeric": {"unique_id": "macro.dbt_utils.bigquery__type_numeric", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_numeric", "macro_sql": "{% macro bigquery__type_numeric() %}\n    numeric\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8926392, "supported_languages": null}, "macro.dbt_utils.type_bigint": {"unique_id": "macro.dbt_utils.type_bigint", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.893152, "supported_languages": null}, "macro.dbt_utils.default__type_bigint": {"unique_id": "macro.dbt_utils.default__type_bigint", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    bigint\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8933938, "supported_languages": null}, "macro.dbt_utils.bigquery__type_bigint": {"unique_id": "macro.dbt_utils.bigquery__type_bigint", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_bigint", "macro_sql": "{% macro bigquery__type_bigint() %}\n    int64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8936255, "supported_languages": null}, "macro.dbt_utils.type_int": {"unique_id": "macro.dbt_utils.type_int", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8941622, "supported_languages": null}, "macro.dbt_utils.default__type_int": {"unique_id": "macro.dbt_utils.default__type_int", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_int", "macro_sql": "{% macro default__type_int() %}\n    int\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.894416, "supported_languages": null}, "macro.dbt_utils.bigquery__type_int": {"unique_id": "macro.dbt_utils.bigquery__type_int", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_int", "macro_sql": "{% macro bigquery__type_int() %}\n    int64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8946493, "supported_languages": null}, "macro.dbt_utils.current_timestamp": {"unique_id": "macro.dbt_utils.current_timestamp", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ return(adapter.dispatch('current_timestamp', 'dbt_utils')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8964703, "supported_languages": null}, "macro.dbt_utils.default__current_timestamp": {"unique_id": "macro.dbt_utils.default__current_timestamp", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() %}\n    current_timestamp::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8968747, "supported_languages": null}, "macro.dbt_utils.redshift__current_timestamp": {"unique_id": "macro.dbt_utils.redshift__current_timestamp", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "redshift__current_timestamp", "macro_sql": "{% macro redshift__current_timestamp() %}\n    getdate()\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8971353, "supported_languages": null}, "macro.dbt_utils.bigquery__current_timestamp": {"unique_id": "macro.dbt_utils.bigquery__current_timestamp", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "bigquery__current_timestamp", "macro_sql": "{% macro bigquery__current_timestamp() %}\n    current_timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.897386, "supported_languages": null}, "macro.dbt_utils.current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "current_timestamp_in_utc", "macro_sql": "{% macro current_timestamp_in_utc() -%}\n  {{ return(adapter.dispatch('current_timestamp_in_utc', 'dbt_utils')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__current_timestamp_in_utc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8979473, "supported_languages": null}, "macro.dbt_utils.default__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.default__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "default__current_timestamp_in_utc", "macro_sql": "{% macro default__current_timestamp_in_utc() %}\n    {{dbt_utils.current_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8983407, "supported_languages": null}, "macro.dbt_utils.snowflake__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.snowflake__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "snowflake__current_timestamp_in_utc", "macro_sql": "{% macro snowflake__current_timestamp_in_utc() %}\n    convert_timezone('UTC', {{dbt_utils.current_timestamp()}})::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8988605, "supported_languages": null}, "macro.dbt_utils.postgres__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.postgres__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "postgres__current_timestamp_in_utc", "macro_sql": "{% macro postgres__current_timestamp_in_utc() %}\n    (current_timestamp at time zone 'utc')::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.899255, "supported_languages": null}, "macro.dbt_utils.redshift__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.redshift__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "redshift__current_timestamp_in_utc", "macro_sql": "{% macro redshift__current_timestamp_in_utc() %}\n    {{ return(dbt_utils.default__current_timestamp_in_utc()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__current_timestamp_in_utc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.8997157, "supported_languages": null}, "macro.dbt_utils.escape_single_quotes": {"unique_id": "macro.dbt_utils.escape_single_quotes", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/escape_single_quotes.sql", "original_file_path": "macros/cross_db_utils/escape_single_quotes.sql", "name": "escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.901403, "supported_languages": null}, "macro.dbt_utils.default__escape_single_quotes": {"unique_id": "macro.dbt_utils.default__escape_single_quotes", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/escape_single_quotes.sql", "original_file_path": "macros/cross_db_utils/escape_single_quotes.sql", "name": "default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9018843, "supported_languages": null}, "macro.dbt_utils.snowflake__escape_single_quotes": {"unique_id": "macro.dbt_utils.snowflake__escape_single_quotes", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/escape_single_quotes.sql", "original_file_path": "macros/cross_db_utils/escape_single_quotes.sql", "name": "snowflake__escape_single_quotes", "macro_sql": "{% macro snowflake__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\", \"\\\\'\") }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9023626, "supported_languages": null}, "macro.dbt_utils.bigquery__escape_single_quotes": {"unique_id": "macro.dbt_utils.bigquery__escape_single_quotes", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/escape_single_quotes.sql", "original_file_path": "macros/cross_db_utils/escape_single_quotes.sql", "name": "bigquery__escape_single_quotes", "macro_sql": "{% macro bigquery__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\", \"\\\\'\") }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9028087, "supported_languages": null}, "macro.dbt_utils.array_concat": {"unique_id": "macro.dbt_utils.array_concat", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/array_concat.sql", "original_file_path": "macros/cross_db_utils/array_concat.sql", "name": "array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt_utils')(array_1, array_2)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9043777, "supported_languages": null}, "macro.dbt_utils.default__array_concat": {"unique_id": "macro.dbt_utils.default__array_concat", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/array_concat.sql", "original_file_path": "macros/cross_db_utils/array_concat.sql", "name": "default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9048483, "supported_languages": null}, "macro.dbt_utils.bigquery__array_concat": {"unique_id": "macro.dbt_utils.bigquery__array_concat", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/array_concat.sql", "original_file_path": "macros/cross_db_utils/array_concat.sql", "name": "bigquery__array_concat", "macro_sql": "{% macro bigquery__array_concat(array_1, array_2) -%}\n    array_concat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9053066, "supported_languages": null}, "macro.dbt_utils.redshift__array_concat": {"unique_id": "macro.dbt_utils.redshift__array_concat", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/array_concat.sql", "original_file_path": "macros/cross_db_utils/array_concat.sql", "name": "redshift__array_concat", "macro_sql": "{% macro redshift__array_concat(array_1, array_2) -%}\n    array_concat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9057574, "supported_languages": null}, "macro.dbt_utils.identifier": {"unique_id": "macro.dbt_utils.identifier", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "identifier", "macro_sql": "{% macro identifier(value) %}\t\n  {%- set error_message = '\n    Warning: the `identifier` macro is no longer supported and will be deprecated in a future release of dbt-utils. \\\n    Use `adapter.quote` instead. The {}.{} model triggered this warning. \\\n    '.format(model.package_name, model.name) -%}\n  {%- do exceptions.warn(error_message) -%}\n  {{ return(adapter.dispatch('identifier', 'dbt_utils') (value)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__identifier"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9077582, "supported_languages": null}, "macro.dbt_utils.default__identifier": {"unique_id": "macro.dbt_utils.default__identifier", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "default__identifier", "macro_sql": "{% macro default__identifier(value) -%}\t\n    \"{{ value }}\"\t\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.908135, "supported_languages": null}, "macro.dbt_utils.bigquery__identifier": {"unique_id": "macro.dbt_utils.bigquery__identifier", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "bigquery__identifier", "macro_sql": "{% macro bigquery__identifier(value) -%}\t\n    `{{ value }}`\t\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9084997, "supported_languages": null}, "macro.dbt_utils.dateadd": {"unique_id": "macro.dbt_utils.dateadd", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt_utils')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9105337, "supported_languages": null}, "macro.dbt_utils.default__dateadd": {"unique_id": "macro.dbt_utils.default__dateadd", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9111185, "supported_languages": null}, "macro.dbt_utils.bigquery__dateadd": {"unique_id": "macro.dbt_utils.bigquery__dateadd", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "bigquery__dateadd", "macro_sql": "{% macro bigquery__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n        datetime_add(\n            cast( {{ from_date_or_timestamp }} as datetime),\n        interval {{ interval }} {{ datepart }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.911687, "supported_languages": null}, "macro.dbt_utils.postgres__dateadd": {"unique_id": "macro.dbt_utils.postgres__dateadd", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "postgres__dateadd", "macro_sql": "{% macro postgres__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.912242, "supported_languages": null}, "macro.dbt_utils.redshift__dateadd": {"unique_id": "macro.dbt_utils.redshift__dateadd", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "redshift__dateadd", "macro_sql": "{% macro redshift__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ return(dbt_utils.default__dateadd(datepart, interval, from_date_or_timestamp)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9129145, "supported_languages": null}, "macro.dbt_utils.safe_cast": {"unique_id": "macro.dbt_utils.safe_cast", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt_utils') (field, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9145417, "supported_languages": null}, "macro.dbt_utils.default__safe_cast": {"unique_id": "macro.dbt_utils.default__safe_cast", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9150174, "supported_languages": null}, "macro.dbt_utils.snowflake__safe_cast": {"unique_id": "macro.dbt_utils.snowflake__safe_cast", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "snowflake__safe_cast", "macro_sql": "{% macro snowflake__safe_cast(field, type) %}\n    try_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.915431, "supported_languages": null}, "macro.dbt_utils.bigquery__safe_cast": {"unique_id": "macro.dbt_utils.bigquery__safe_cast", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "bigquery__safe_cast", "macro_sql": "{% macro bigquery__safe_cast(field, type) %}\n    safe_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.915842, "supported_languages": null}, "macro.dbt_utils.array_append": {"unique_id": "macro.dbt_utils.array_append", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/array_append.sql", "original_file_path": "macros/cross_db_utils/array_append.sql", "name": "array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt_utils')(array, new_element)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9174156, "supported_languages": null}, "macro.dbt_utils.default__array_append": {"unique_id": "macro.dbt_utils.default__array_append", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/array_append.sql", "original_file_path": "macros/cross_db_utils/array_append.sql", "name": "default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9178915, "supported_languages": null}, "macro.dbt_utils.bigquery__array_append": {"unique_id": "macro.dbt_utils.bigquery__array_append", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/array_append.sql", "original_file_path": "macros/cross_db_utils/array_append.sql", "name": "bigquery__array_append", "macro_sql": "{% macro bigquery__array_append(array, new_element) -%}\n    {{ dbt_utils.array_concat(array, dbt_utils.array_construct([new_element])) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.array_concat", "macro.dbt_utils.array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.918532, "supported_languages": null}, "macro.dbt_utils.redshift__array_append": {"unique_id": "macro.dbt_utils.redshift__array_append", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/array_append.sql", "original_file_path": "macros/cross_db_utils/array_append.sql", "name": "redshift__array_append", "macro_sql": "{% macro redshift__array_append(array, new_element) -%}\n    {{ dbt_utils.array_concat(array, dbt_utils.array_construct([new_element])) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.array_concat", "macro.dbt_utils.array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9193609, "supported_languages": null}, "macro.dbt_utils.split_part": {"unique_id": "macro.dbt_utils.split_part", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt_utils') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9231818, "supported_languages": null}, "macro.dbt_utils.default__split_part": {"unique_id": "macro.dbt_utils.default__split_part", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9237623, "supported_languages": null}, "macro.dbt_utils._split_part_negative": {"unique_id": "macro.dbt_utils._split_part_negative", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "_split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }}) \n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9245374, "supported_languages": null}, "macro.dbt_utils.postgres__split_part": {"unique_id": "macro.dbt_utils.postgres__split_part", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "postgres__split_part", "macro_sql": "{% macro postgres__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    {{ dbt_utils.default__split_part(string_text, delimiter_text, part_number) }}\n  {% else %}\n    {{ dbt_utils._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__split_part", "macro.dbt_utils._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9256923, "supported_languages": null}, "macro.dbt_utils.redshift__split_part": {"unique_id": "macro.dbt_utils.redshift__split_part", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "redshift__split_part", "macro_sql": "{% macro redshift__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    {{ dbt_utils.default__split_part(string_text, delimiter_text, part_number) }}\n  {% else %}\n    {{ dbt_utils._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__split_part", "macro.dbt_utils._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9268725, "supported_languages": null}, "macro.dbt_utils.bigquery__split_part": {"unique_id": "macro.dbt_utils.bigquery__split_part", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "bigquery__split_part", "macro_sql": "{% macro bigquery__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset({{ part_number - 1 }})]\n  {% else %}\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset(\n          length({{ string_text }}) \n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 1\n        )]\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9281251, "supported_languages": null}, "macro.dbt_utils.last_day": {"unique_id": "macro.dbt_utils.last_day", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt_utils') (date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9301827, "supported_languages": null}, "macro.dbt_utils.default_last_day": {"unique_id": "macro.dbt_utils.default_last_day", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "default_last_day", "macro_sql": "\n\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt_utils.dateadd('day', '-1',\n        dbt_utils.dateadd(datepart, '1', dbt_utils.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9311159, "supported_languages": null}, "macro.dbt_utils.default__last_day": {"unique_id": "macro.dbt_utils.default__last_day", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt_utils.default_last_day(date, datepart)}}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9316316, "supported_languages": null}, "macro.dbt_utils.postgres__last_day": {"unique_id": "macro.dbt_utils.postgres__last_day", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "postgres__last_day", "macro_sql": "{% macro postgres__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- postgres dateadd does not support quarter interval.\n    cast(\n        {{dbt_utils.dateadd('day', '-1',\n        dbt_utils.dateadd('month', '3', dbt_utils.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt_utils.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.date_trunc", "macro.dbt_utils.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9329808, "supported_languages": null}, "macro.dbt_utils.redshift__last_day": {"unique_id": "macro.dbt_utils.redshift__last_day", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "redshift__last_day", "macro_sql": "{% macro redshift__last_day(date, datepart) %}\n\n    {{ return(dbt_utils.default__last_day(date, datepart)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9335988, "supported_languages": null}, "macro.dbt_utils._is_relation": {"unique_id": "macro.dbt_utils._is_relation", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/_is_relation.sql", "original_file_path": "macros/cross_db_utils/_is_relation.sql", "name": "_is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.935552, "supported_languages": null}, "macro.dbt_utils.right": {"unique_id": "macro.dbt_utils.right", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt_utils') (string_text, length_expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9373422, "supported_languages": null}, "macro.dbt_utils.default__right": {"unique_id": "macro.dbt_utils.default__right", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n    \n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9377885, "supported_languages": null}, "macro.dbt_utils.bigquery__right": {"unique_id": "macro.dbt_utils.bigquery__right", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "bigquery__right", "macro_sql": "{% macro bigquery__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0 \n        then ''\n    else \n        substr(\n            {{ string_text }},\n            -1 * ({{ length_expression }})\n        )\n    end\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.938312, "supported_languages": null}, "macro.dbt_utils.snowflake__right": {"unique_id": "macro.dbt_utils.snowflake__right", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "snowflake__right", "macro_sql": "{% macro snowflake__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0 \n        then ''\n    else \n        right(\n            {{ string_text }},\n            {{ length_expression }}\n        )\n    end\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.938809, "supported_languages": null}, "macro.dbt_utils.intersect": {"unique_id": "macro.dbt_utils.intersect", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt_utils')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9400873, "supported_languages": null}, "macro.dbt_utils.default__intersect": {"unique_id": "macro.dbt_utils.default__intersect", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9403684, "supported_languages": null}, "macro.dbt_utils.bigquery__intersect": {"unique_id": "macro.dbt_utils.bigquery__intersect", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "bigquery__intersect", "macro_sql": "{% macro bigquery__intersect() %}\n\n    intersect distinct\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.940602, "supported_languages": null}, "macro.dbt_utils.except": {"unique_id": "macro.dbt_utils.except", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt_utils')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9418902, "supported_languages": null}, "macro.dbt_utils.default__except": {"unique_id": "macro.dbt_utils.default__except", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9421883, "supported_languages": null}, "macro.dbt_utils.bigquery__except": {"unique_id": "macro.dbt_utils.bigquery__except", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "bigquery__except", "macro_sql": "{% macro bigquery__except() %}\n\n    except distinct\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.942444, "supported_languages": null}, "macro.dbt_utils.length": {"unique_id": "macro.dbt_utils.length", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9440162, "supported_languages": null}, "macro.dbt_utils.default__length": {"unique_id": "macro.dbt_utils.default__length", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "default__length", "macro_sql": "{% macro default__length(expression) %}\n    \n    length(\n        {{ expression }}\n    )\n    \n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9444153, "supported_languages": null}, "macro.dbt_utils.redshift__length": {"unique_id": "macro.dbt_utils.redshift__length", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "redshift__length", "macro_sql": "{% macro redshift__length(expression) %}\n\n    len(\n        {{ expression }}\n    )\n    \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9447799, "supported_languages": null}, "macro.dbt_utils.string_literal": {"unique_id": "macro.dbt_utils.string_literal", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/literal.sql", "original_file_path": "macros/cross_db_utils/literal.sql", "name": "string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt_utils') (value)) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9461064, "supported_languages": null}, "macro.dbt_utils.default__string_literal": {"unique_id": "macro.dbt_utils.default__string_literal", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/literal.sql", "original_file_path": "macros/cross_db_utils/literal.sql", "name": "default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9464846, "supported_languages": null}, "macro.dbt_utils.width_bucket": {"unique_id": "macro.dbt_utils.width_bucket", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9500537, "supported_languages": null}, "macro.dbt_utils.default__width_bucket": {"unique_id": "macro.dbt_utils.default__width_bucket", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt_utils.safe_cast(expr, dbt_utils.type_numeric() ) }},\n                    {{ dbt_utils.safe_cast(bin_size, dbt_utils.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.safe_cast", "macro.dbt_utils.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.951663, "supported_languages": null}, "macro.dbt_utils.redshift__width_bucket": {"unique_id": "macro.dbt_utils.redshift__width_bucket", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "redshift__width_bucket", "macro_sql": "{% macro redshift__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is exactly at the bucket edge\n        case\n            when\n                {{ dbt_utils.safe_cast(expr, dbt_utils.type_numeric() ) }} %\n                {{ dbt_utils.safe_cast(bin_size, dbt_utils.type_numeric() ) }}\n                 = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.safe_cast", "macro.dbt_utils.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.953253, "supported_languages": null}, "macro.dbt_utils.snowflake__width_bucket": {"unique_id": "macro.dbt_utils.snowflake__width_bucket", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.953912, "supported_languages": null}, "macro.dbt_utils.replace": {"unique_id": "macro.dbt_utils.replace", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/replace.sql", "original_file_path": "macros/cross_db_utils/replace.sql", "name": "replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt_utils') (field, old_chars, new_chars)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9554727, "supported_languages": null}, "macro.dbt_utils.default__replace": {"unique_id": "macro.dbt_utils.default__replace", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/replace.sql", "original_file_path": "macros/cross_db_utils/replace.sql", "name": "default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n    \n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.956055, "supported_languages": null}, "macro.dbt_utils.bool_or": {"unique_id": "macro.dbt_utils.bool_or", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/bool_or.sql", "original_file_path": "macros/cross_db_utils/bool_or.sql", "name": "bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9575262, "supported_languages": null}, "macro.dbt_utils.default__bool_or": {"unique_id": "macro.dbt_utils.default__bool_or", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/bool_or.sql", "original_file_path": "macros/cross_db_utils/bool_or.sql", "name": "default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n    \n    bool_or({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9578996, "supported_languages": null}, "macro.dbt_utils.snowflake__bool_or": {"unique_id": "macro.dbt_utils.snowflake__bool_or", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/bool_or.sql", "original_file_path": "macros/cross_db_utils/bool_or.sql", "name": "snowflake__bool_or", "macro_sql": "{% macro snowflake__bool_or(expression) -%}\n    \n    boolor_agg({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9582837, "supported_languages": null}, "macro.dbt_utils.bigquery__bool_or": {"unique_id": "macro.dbt_utils.bigquery__bool_or", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/bool_or.sql", "original_file_path": "macros/cross_db_utils/bool_or.sql", "name": "bigquery__bool_or", "macro_sql": "{% macro bigquery__bool_or(expression) -%}\n    \n    logical_or({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9586432, "supported_languages": null}, "macro.dbt_utils.cast_bool_to_text": {"unique_id": "macro.dbt_utils.cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt_utils') (field) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9600587, "supported_languages": null}, "macro.dbt_utils.default__cast_bool_to_text": {"unique_id": "macro.dbt_utils.default__cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ dbt_utils.type_string() }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9605672, "supported_languages": null}, "macro.dbt_utils.redshift__cast_bool_to_text": {"unique_id": "macro.dbt_utils.redshift__cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "redshift__cast_bool_to_text", "macro_sql": "{% macro redshift__cast_bool_to_text(field) %}\n    case\n        when {{ field }} is true then 'true'\n        when {{ field }} is false then 'false'\n    end::text\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9610038, "supported_languages": null}, "macro.dbt_utils.hash": {"unique_id": "macro.dbt_utils.hash", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt_utils') (field)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9624043, "supported_languages": null}, "macro.dbt_utils.default__hash": {"unique_id": "macro.dbt_utils.default__hash", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{field}} as {{dbt_utils.type_string()}}))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.962869, "supported_languages": null}, "macro.dbt_utils.bigquery__hash": {"unique_id": "macro.dbt_utils.bigquery__hash", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "bigquery__hash", "macro_sql": "{% macro bigquery__hash(field) -%}\n    to_hex({{dbt_utils.default__hash(field)}})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.96331, "supported_languages": null}, "macro.dbt_utils.concat": {"unique_id": "macro.dbt_utils.concat", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt_utils')(fields)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9646385, "supported_languages": null}, "macro.dbt_utils.default__concat": {"unique_id": "macro.dbt_utils.default__concat", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9650893, "supported_languages": null}, "macro.dbt_utils.listagg": {"unique_id": "macro.dbt_utils.listagg", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/listagg.sql", "original_file_path": "macros/cross_db_utils/listagg.sql", "name": "listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt_utils') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9707272, "supported_languages": null}, "macro.dbt_utils.default__listagg": {"unique_id": "macro.dbt_utils.default__listagg", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/listagg.sql", "original_file_path": "macros/cross_db_utils/listagg.sql", "name": "default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9721446, "supported_languages": null}, "macro.dbt_utils.bigquery__listagg": {"unique_id": "macro.dbt_utils.bigquery__listagg", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/listagg.sql", "original_file_path": "macros/cross_db_utils/listagg.sql", "name": "bigquery__listagg", "macro_sql": "{% macro bigquery__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        {% if limit_num -%}\n        limit {{ limit_num }}\n        {%- endif %}\n        )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9731572, "supported_languages": null}, "macro.dbt_utils.postgres__listagg": {"unique_id": "macro.dbt_utils.postgres__listagg", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/listagg.sql", "original_file_path": "macros/cross_db_utils/listagg.sql", "name": "postgres__listagg", "macro_sql": "{% macro postgres__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n    \n    {% if limit_num -%}\n    array_to_string(\n        (array_agg(\n            {{ measure }}\n            {% if order_by_clause -%}\n            {{ order_by_clause }}\n            {%- endif %}\n        ))[1:{{ limit_num }}],\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        )\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9745228, "supported_languages": null}, "macro.dbt_utils.redshift__listagg": {"unique_id": "macro.dbt_utils.redshift__listagg", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/listagg.sql", "original_file_path": "macros/cross_db_utils/listagg.sql", "name": "redshift__listagg", "macro_sql": "{% macro redshift__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    {% set ns = namespace() %}\n    {% set ns.delimiter_text_regex = delimiter_text|trim(\"'\") %}\n    {% set special_chars %}\\,^,$,.,|,?,*,+,(,),[,],{,}{% endset %}  \n    {%- for char in special_chars.split(',') -%}\n        {% set escape_char %}\\\\{{ char }}{% endset %}\n        {% set ns.delimiter_text_regex = ns.delimiter_text_regex|replace(char,escape_char) %}\n    {%- endfor -%}\n\n    {% set regex %}'([^{{ ns.delimiter_text_regex }}]+{{ ns.delimiter_text_regex }}){1,{{ limit_num - 1}}}[^{{ ns.delimiter_text_regex }}]+'{% endset %}\n    regexp_substr(\n        listagg(\n            {{ measure }},\n            {{ delimiter_text }}\n            )\n            {% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n        ,{{ regex }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.977793, "supported_languages": null}, "macro.dbt_utils.array_construct": {"unique_id": "macro.dbt_utils.array_construct", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/array_construct.sql", "original_file_path": "macros/cross_db_utils/array_construct.sql", "name": "array_construct", "macro_sql": "{% macro array_construct(inputs = [], data_type = api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt_utils')(inputs, data_type)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9798622, "supported_languages": null}, "macro.dbt_utils.default__array_construct": {"unique_id": "macro.dbt_utils.default__array_construct", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/array_construct.sql", "original_file_path": "macros/cross_db_utils/array_construct.sql", "name": "default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9807215, "supported_languages": null}, "macro.dbt_utils.snowflake__array_construct": {"unique_id": "macro.dbt_utils.snowflake__array_construct", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/array_construct.sql", "original_file_path": "macros/cross_db_utils/array_construct.sql", "name": "snowflake__array_construct", "macro_sql": "{% macro snowflake__array_construct(inputs, data_type) -%}\n    array_construct( {{ inputs|join(' , ') }} )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9812224, "supported_languages": null}, "macro.dbt_utils.redshift__array_construct": {"unique_id": "macro.dbt_utils.redshift__array_construct", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/array_construct.sql", "original_file_path": "macros/cross_db_utils/array_construct.sql", "name": "redshift__array_construct", "macro_sql": "{% macro redshift__array_construct(inputs, data_type) -%}\n    array( {{ inputs|join(' , ') }} )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9817102, "supported_languages": null}, "macro.dbt_utils.bigquery__array_construct": {"unique_id": "macro.dbt_utils.bigquery__array_construct", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/array_construct.sql", "original_file_path": "macros/cross_db_utils/array_construct.sql", "name": "bigquery__array_construct", "macro_sql": "{% macro bigquery__array_construct(inputs, data_type) -%}\n    [ {{ inputs|join(' , ') }} ]\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.982223, "supported_languages": null}, "macro.dbt_utils.datediff": {"unique_id": "macro.dbt_utils.datediff", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt_utils')(first_date, second_date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.redshift__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9883652, "supported_languages": null}, "macro.dbt_utils.default__datediff": {"unique_id": "macro.dbt_utils.default__datediff", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9889467, "supported_languages": null}, "macro.dbt_utils.bigquery__datediff": {"unique_id": "macro.dbt_utils.bigquery__datediff", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "bigquery__datediff", "macro_sql": "{% macro bigquery__datediff(first_date, second_date, datepart) -%}\n\n    datetime_diff(\n        cast({{second_date}} as datetime),\n        cast({{first_date}} as datetime),\n        {{datepart}}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9895046, "supported_languages": null}, "macro.dbt_utils.postgres__datediff": {"unique_id": "macro.dbt_utils.postgres__datediff", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "postgres__datediff", "macro_sql": "{% macro postgres__datediff(first_date, second_date, datepart) -%}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9954453, "supported_languages": null}, "macro.dbt_utils.redshift__datediff": {"unique_id": "macro.dbt_utils.redshift__datediff", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "redshift__datediff", "macro_sql": "{% macro redshift__datediff(first_date, second_date, datepart) -%}\n\n    {{ return(dbt_utils.default__datediff(first_date, second_date, datepart)) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9961524, "supported_languages": null}, "macro.dbt_utils.any_value": {"unique_id": "macro.dbt_utils.any_value", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/any_value.sql", "original_file_path": "macros/cross_db_utils/any_value.sql", "name": "any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.postgres__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9975255, "supported_languages": null}, "macro.dbt_utils.default__any_value": {"unique_id": "macro.dbt_utils.default__any_value", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/any_value.sql", "original_file_path": "macros/cross_db_utils/any_value.sql", "name": "default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n    \n    any_value({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9978673, "supported_languages": null}, "macro.dbt_utils.postgres__any_value": {"unique_id": "macro.dbt_utils.postgres__any_value", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/any_value.sql", "original_file_path": "macros/cross_db_utils/any_value.sql", "name": "postgres__any_value", "macro_sql": "{% macro postgres__any_value(expression) -%}\n    {#- /*Postgres doesn't support any_value, so we're using min() to get the same result*/ -#}\n    min({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008869.9982388, "supported_languages": null}, "macro.dbt_utils._is_ephemeral": {"unique_id": "macro.dbt_utils._is_ephemeral", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/_is_ephemeral.sql", "original_file_path": "macros/cross_db_utils/_is_ephemeral.sql", "name": "_is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0012338, "supported_languages": null}, "macro.dbt_utils.log_info": {"unique_id": "macro.dbt_utils.log_info", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "name": "log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0026066, "supported_languages": null}, "macro.dbt_utils.default__log_info": {"unique_id": "macro.dbt_utils.default__log_info", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "name": "default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0031946, "supported_languages": null}, "macro.dbt_utils.pretty_log_format": {"unique_id": "macro.dbt_utils.pretty_log_format", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "name": "pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.00451, "supported_languages": null}, "macro.dbt_utils.default__pretty_log_format": {"unique_id": "macro.dbt_utils.default__pretty_log_format", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "name": "default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0050504, "supported_languages": null}, "macro.dbt_utils.slugify": {"unique_id": "macro.dbt_utils.slugify", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/slugify.sql", "original_file_path": "macros/jinja_helpers/slugify.sql", "name": "slugify", "macro_sql": "{% macro slugify(string) %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0070682, "supported_languages": null}, "macro.dbt_utils.pretty_time": {"unique_id": "macro.dbt_utils.pretty_time", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "name": "pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0084627, "supported_languages": null}, "macro.dbt_utils.default__pretty_time": {"unique_id": "macro.dbt_utils.default__pretty_time", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "name": "default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0091548, "supported_languages": null}, "macro.dbt_utils.get_period_boundaries": {"unique_id": "macro.dbt_utils.get_period_boundaries", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "get_period_boundaries", "macro_sql": "{% macro get_period_boundaries(target_schema, target_table, timestamp_field, start_date, stop_date, period) -%}\n    {{ return(adapter.dispatch('get_period_boundaries', 'dbt_utils')(target_schema, target_table, timestamp_field, start_date, stop_date, period)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_period_boundaries"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0216224, "supported_languages": null}, "macro.dbt_utils.default__get_period_boundaries": {"unique_id": "macro.dbt_utils.default__get_period_boundaries", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "default__get_period_boundaries", "macro_sql": "{% macro default__get_period_boundaries(target_schema, target_table, timestamp_field, start_date, stop_date, period) -%}\n\n  {% call statement('period_boundaries', fetch_result=True) -%}\n    with data as (\n      select\n          coalesce(max(\"{{timestamp_field}}\"), '{{start_date}}')::timestamp as start_timestamp,\n          coalesce(\n            {{dbt_utils.dateadd('millisecond',\n                                -1,\n                                \"nullif('\" ~ stop_date ~ \"','')::timestamp\")}},\n            {{dbt_utils.current_timestamp()}}\n          ) as stop_timestamp\n      from \"{{target_schema}}\".\"{{target_table}}\"\n    )\n\n    select\n      start_timestamp,\n      stop_timestamp,\n      {{dbt_utils.datediff('start_timestamp',\n                           'stop_timestamp',\n                           period)}}  + 1 as num_periods\n    from data\n  {%- endcall %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.dateadd", "macro.dbt_utils.current_timestamp", "macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0234058, "supported_languages": null}, "macro.dbt_utils.get_period_sql": {"unique_id": "macro.dbt_utils.get_period_sql", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "get_period_sql", "macro_sql": "{% macro get_period_sql(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset) -%}\n    {{ return(adapter.dispatch('get_period_sql', 'dbt_utils')(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_period_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0245118, "supported_languages": null}, "macro.dbt_utils.default__get_period_sql": {"unique_id": "macro.dbt_utils.default__get_period_sql", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "default__get_period_sql", "macro_sql": "{% macro default__get_period_sql(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset) -%}\n\n  {%- set period_filter -%}\n    (\"{{timestamp_field}}\" >  '{{start_timestamp}}'::timestamp + interval '{{offset}} {{period}}' and\n     \"{{timestamp_field}}\" <= '{{start_timestamp}}'::timestamp + interval '{{offset}} {{period}}' + interval '1 {{period}}' and\n     \"{{timestamp_field}}\" <  '{{stop_timestamp}}'::timestamp)\n  {%- endset -%}\n\n  {%- set filtered_sql = sql | replace(\"__PERIOD_FILTER__\", period_filter) -%}\n\n  select\n    {{target_cols_csv}}\n  from (\n    {{filtered_sql}}\n  )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.026244, "supported_languages": null}, "macro.dbt_utils.materialization_insert_by_period_default": {"unique_id": "macro.dbt_utils.materialization_insert_by_period_default", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "materialization_insert_by_period_default", "macro_sql": "{% materialization insert_by_period, default -%}\n  {%- set timestamp_field = config.require('timestamp_field') -%}\n  {%- set start_date = config.require('start_date') -%}\n  {%- set stop_date = config.get('stop_date') or '' -%}\n  {%- set period = config.get('period') or 'week' -%}\n\n  {%- if sql.find('__PERIOD_FILTER__') == -1 -%}\n    {%- set error_message -%}\n      Model '{{ model.unique_id }}' does not include the required string '__PERIOD_FILTER__' in its sql\n    {%- endset -%}\n    {{ exceptions.raise_compiler_error(error_message) }}\n  {%- endif -%}\n\n  {%- set identifier = model['name'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, type='table') -%}\n\n  {%- set non_destructive_mode = (flags.NON_DESTRUCTIVE == True) -%}\n  {%- set full_refresh_mode = (flags.FULL_REFRESH == True) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_not_as_table = (old_relation is not none and not old_relation.is_table) -%}\n\n  {%- set should_truncate = (non_destructive_mode and full_refresh_mode and exists_as_table) -%}\n  {%- set should_drop = (not should_truncate and (full_refresh_mode or exists_not_as_table)) -%}\n  {%- set force_create = (flags.FULL_REFRESH and not flags.NON_DESTRUCTIVE) -%}\n\n  -- setup\n  {% if old_relation is none -%}\n    -- noop\n  {%- elif should_truncate -%}\n    {{adapter.truncate_relation(old_relation)}}\n  {%- elif should_drop -%}\n    {{adapter.drop_relation(old_relation)}}\n    {%- set old_relation = none -%}\n  {%- endif %}\n\n  {{run_hooks(pre_hooks, inside_transaction=False)}}\n\n  -- `begin` happens here, so `commit` after it to finish the transaction\n  {{run_hooks(pre_hooks, inside_transaction=True)}}\n  {% call statement() -%}\n    begin; -- make extra sure we've closed out the transaction\n    commit;\n  {%- endcall %}\n\n  -- build model\n  {% if force_create or old_relation is none -%}\n    {# Create an empty target table -#}\n    {% call statement('main') -%}\n      {%- set empty_sql = sql | replace(\"__PERIOD_FILTER__\", 'false') -%}\n      {{create_table_as(False, target_relation, empty_sql)}}\n    {%- endcall %}\n  {%- endif %}\n\n  {% set _ = dbt_utils.get_period_boundaries(schema,\n                                              identifier,\n                                              timestamp_field,\n                                              start_date,\n                                              stop_date,\n                                              period) %}\n  {%- set start_timestamp = load_result('period_boundaries')['data'][0][0] | string -%}\n  {%- set stop_timestamp = load_result('period_boundaries')['data'][0][1] | string -%}\n  {%- set num_periods = load_result('period_boundaries')['data'][0][2] | int -%}\n\n  {% set target_columns = adapter.get_columns_in_relation(target_relation) %}\n  {%- set target_cols_csv = target_columns | map(attribute='quoted') | join(', ') -%}\n  {%- set loop_vars = {'sum_rows_inserted': 0} -%}\n\n  -- commit each period as a separate transaction\n  {% for i in range(num_periods) -%}\n    {%- set msg = \"Running for \" ~ period ~ \" \" ~ (i + 1) ~ \" of \" ~ (num_periods) -%}\n    {{ dbt_utils.log_info(msg) }}\n\n    {%- set tmp_identifier = model['name'] ~ '__dbt_incremental_period' ~ i ~ '_tmp' -%}\n    {%- set tmp_relation = api.Relation.create(identifier=tmp_identifier,\n                                               schema=schema, type='table') -%}\n    {% call statement() -%}\n      {% set tmp_table_sql = dbt_utils.get_period_sql(target_cols_csv,\n                                                       sql,\n                                                       timestamp_field,\n                                                       period,\n                                                       start_timestamp,\n                                                       stop_timestamp,\n                                                       i) %}\n      {{dbt.create_table_as(True, tmp_relation, tmp_table_sql)}}\n    {%- endcall %}\n\n    {{adapter.expand_target_column_types(from_relation=tmp_relation,\n                                         to_relation=target_relation)}}\n    {%- set name = 'main-' ~ i -%}\n    {% call statement(name, fetch_result=True) -%}\n      insert into {{target_relation}} ({{target_cols_csv}})\n      (\n          select\n              {{target_cols_csv}}\n          from {{tmp_relation.include(schema=False)}}\n      );\n    {%- endcall %}\n    {% set result = load_result('main-' ~ i) %}\n    {% if 'response' in result.keys() %} {# added in v0.19.0 #}\n        {% set rows_inserted = result['response']['rows_affected'] %}\n    {% else %} {# older versions #}\n        {% set rows_inserted = result['status'].split(\" \")[2] | int %}\n    {% endif %}\n    \n    {%- set sum_rows_inserted = loop_vars['sum_rows_inserted'] + rows_inserted -%}\n    {%- if loop_vars.update({'sum_rows_inserted': sum_rows_inserted}) %} {% endif -%}\n\n    {%- set msg = \"Ran for \" ~ period ~ \" \" ~ (i + 1) ~ \" of \" ~ (num_periods) ~ \"; \" ~ rows_inserted ~ \" records inserted\" -%}\n    {{ dbt_utils.log_info(msg) }}\n\n  {%- endfor %}\n\n  {% call statement() -%}\n    begin;\n  {%- endcall %}\n\n  {{run_hooks(post_hooks, inside_transaction=True)}}\n\n  {% call statement() -%}\n    commit;\n  {%- endcall %}\n\n  {{run_hooks(post_hooks, inside_transaction=False)}}\n\n  {%- set status_string = \"INSERT \" ~ loop_vars['sum_rows_inserted'] -%}\n\n  {% call noop_statement('main', status_string) -%}\n    -- no-op\n  {%- endcall %}\n\n  -- Return the relations created in this materialization\n  {{ return({'relations': [target_relation]}) }}  \n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt_utils.get_period_boundaries", "macro.dbt_utils.log_info", "macro.dbt_utils.get_period_sql", "macro.dbt.noop_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0437915, "supported_languages": ["sql"]}, "macro.dbt_utils.test_unique_combination_of_columns": {"unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "name": "test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0461893, "supported_languages": null}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "name": "default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0484374, "supported_languages": null}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "name": "test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0556068, "supported_languages": null}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "name": "default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }} as partition_by_col,\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions nore cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0607734, "supported_languages": null}, "macro.dbt_utils.test_fewer_rows_than": {"unique_id": "macro.dbt_utils.test_fewer_rows_than", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "name": "test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0627532, "supported_languages": null}, "macro.dbt_utils.default__test_fewer_rows_than": {"unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "name": "default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model) %}\n\n{{ config(fail_calc = 'coalesce(row_count_delta, 0)') }}\n\nwith a as (\n\n    select count(*) as count_our_model from {{ model }}\n\n),\nb as (\n\n    select count(*) as count_comparison_model from {{ compare_model }}\n\n),\ncounts as (\n\n    select\n        count_our_model,\n        count_comparison_model\n    from a\n    cross join b\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0635135, "supported_languages": null}, "macro.dbt_utils.test_expression_is_true": {"unique_id": "macro.dbt_utils.test_expression_is_true", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "name": "test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None, condition='1=1') %}\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name, condition)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.06545, "supported_languages": null}, "macro.dbt_utils.default__test_expression_is_true": {"unique_id": "macro.dbt_utils.default__test_expression_is_true", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "name": "default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name, condition) %}\n\nwith meet_condition as (\n    select * from {{ model }} where {{ condition }}\n)\n\nselect\n    *\nfrom meet_condition\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0665069, "supported_languages": null}, "macro.dbt_utils.test_equal_rowcount": {"unique_id": "macro.dbt_utils.test_equal_rowcount", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "name": "test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0681713, "supported_languages": null}, "macro.dbt_utils.default__test_equal_rowcount": {"unique_id": "macro.dbt_utils.default__test_equal_rowcount", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "name": "default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'coalesce(diff_count, 0)') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\nwith a as (\n\n    select count(*) as count_a from {{ model }}\n\n),\nb as (\n\n    select count(*) as count_b from {{ compare_model }}\n\n),\nfinal as (\n\n    select\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n    from a\n    cross join b\n\n)\n\nselect * from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0692046, "supported_languages": null}, "macro.dbt_utils.test_cardinality_equality": {"unique_id": "macro.dbt_utils.test_cardinality_equality", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "name": "test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.071215, "supported_languages": null}, "macro.dbt_utils.default__test_cardinality_equality": {"unique_id": "macro.dbt_utils.default__test_cardinality_equality", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "name": "default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt_utils.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt_utils.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0723898, "supported_languages": null}, "macro.dbt_utils.test_not_null_proportion": {"unique_id": "macro.dbt_utils.test_not_null_proportion", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "name": "test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, **kwargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0741403, "supported_languages": null}, "macro.dbt_utils.default__test_not_null_proportion": {"unique_id": "macro.dbt_utils.default__test_not_null_proportion", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "name": "default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\nwith validation as (\n  select\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from {{ model }}\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0759525, "supported_languages": null}, "macro.dbt_utils.test_not_constant": {"unique_id": "macro.dbt_utils.test_not_constant", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "name": "test_not_constant", "macro_sql": "{% test not_constant(model, column_name) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.077467, "supported_languages": null}, "macro.dbt_utils.default__test_not_constant": {"unique_id": "macro.dbt_utils.default__test_not_constant", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "name": "default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name) %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0780945, "supported_languages": null}, "macro.dbt_utils.test_unique_where": {"unique_id": "macro.dbt_utils.test_unique_where", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/test_unique_where.sql", "original_file_path": "macros/generic_tests/test_unique_where.sql", "name": "test_unique_where", "macro_sql": "{% test unique_where(model, column_name) %}\r\n  {%- set deprecation_warning = '\r\n    Warning: `dbt_utils.unique_where` is no longer supported.\r\n    Starting in dbt v0.20.0, the built-in `unique` test supports a `where` config.\r\n    ' -%}\r\n  {%- do exceptions.warn(deprecation_warning) -%}\r\n  {{ return(adapter.dispatch('test_unique_where', 'dbt_utils')(model, column_name)) }}\r\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_where"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0799015, "supported_languages": null}, "macro.dbt_utils.default__test_unique_where": {"unique_id": "macro.dbt_utils.default__test_unique_where", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/test_unique_where.sql", "original_file_path": "macros/generic_tests/test_unique_where.sql", "name": "default__test_unique_where", "macro_sql": "{% macro default__test_unique_where(model, column_name) %}\r\n  {{ return(test_unique(model, column_name)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0804954, "supported_languages": null}, "macro.dbt_utils.test_not_null_where": {"unique_id": "macro.dbt_utils.test_not_null_where", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/test_not_null_where.sql", "original_file_path": "macros/generic_tests/test_not_null_where.sql", "name": "test_not_null_where", "macro_sql": "{% test not_null_where(model, column_name) %}\r\n  {%- set deprecation_warning = '\r\n    Warning: `dbt_utils.not_null_where` is no longer supported.\r\n    Starting in dbt v0.20.0, the built-in `not_null` test supports a `where` config.\r\n    ' -%}\r\n  {%- do exceptions.warn(deprecation_warning) -%}\r\n  {{ return(adapter.dispatch('test_not_null_where', 'dbt_utils')(model, column_name)) }}\r\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_where"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0823116, "supported_languages": null}, "macro.dbt_utils.default__test_not_null_where": {"unique_id": "macro.dbt_utils.default__test_not_null_where", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/test_not_null_where.sql", "original_file_path": "macros/generic_tests/test_not_null_where.sql", "name": "default__test_not_null_where", "macro_sql": "{% macro default__test_not_null_where(model, column_name) %}\r\n  {{ return(test_not_null(model, column_name)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0829113, "supported_languages": null}, "macro.dbt_utils.test_relationships_where": {"unique_id": "macro.dbt_utils.test_relationships_where", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "name": "test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0851917, "supported_languages": null}, "macro.dbt_utils.default__test_relationships_where": {"unique_id": "macro.dbt_utils.default__test_relationships_where", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "name": "default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0865872, "supported_languages": null}, "macro.dbt_utils.test_recency": {"unique_id": "macro.dbt_utils.test_recency", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "name": "test_recency", "macro_sql": "{% test recency(model, field, datepart, interval) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.088307, "supported_languages": null}, "macro.dbt_utils.default__test_recency": {"unique_id": "macro.dbt_utils.default__test_recency", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "name": "default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval) %}\n\n{% set threshold = dbt_utils.dateadd(datepart, interval * -1, dbt_utils.current_timestamp()) %}\n\nwith recency as (\n\n    select max({{field}}) as most_recent\n    from {{ model }}\n\n)\n\nselect\n\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0894475, "supported_languages": null}, "macro.dbt_utils.test_accepted_range": {"unique_id": "macro.dbt_utils.test_accepted_range", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "name": "test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0916727, "supported_languages": null}, "macro.dbt_utils.default__test_accepted_range": {"unique_id": "macro.dbt_utils.default__test_accepted_range", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "name": "default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0932844, "supported_languages": null}, "macro.dbt_utils.test_sequential_values": {"unique_id": "macro.dbt_utils.test_sequential_values", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "name": "test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart)) }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0955765, "supported_languages": null}, "macro.dbt_utils.default__test_sequential_values": {"unique_id": "macro.dbt_utils.default__test_sequential_values", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "name": "default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None) %}\n\n{% set previous_column_name = \"previous_\" ~ dbt_utils.slugify(column_name) %}\n\nwith windowed as (\n\n    select\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            order by {{ column_name }}\n        ) as {{ previous_column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt_utils.type_timestamp() }})= cast({{ dbt_utils.dateadd(datepart, interval, previous_column_name) }} as {{ dbt_utils.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = {{ previous_column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.slugify", "macro.dbt_utils.type_timestamp", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.0977087, "supported_languages": null}, "macro.dbt_utils.test_equality": {"unique_id": "macro.dbt_utils.test_equality", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "name": "test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.10022, "supported_languages": null}, "macro.dbt_utils.default__test_equality": {"unique_id": "macro.dbt_utils.default__test_equality", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "name": "default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None) %}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{#-\nIf the compare_cols arg is provided, we can run this test without querying the\ninformation schema\u00a0\u2014 this allows the model to be an ephemeral model\n-#}\n\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set compare_columns = adapter.get_columns_in_relation(model) | map(attribute='quoted') -%}\n{%- endif -%}\n\n{% set compare_cols_csv = compare_columns | join(', ') %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt_utils.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt_utils.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1033201, "supported_languages": null}, "macro.dbt_utils.test_not_accepted_values": {"unique_id": "macro.dbt_utils.test_not_accepted_values", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "name": "test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1053762, "supported_languages": null}, "macro.dbt_utils.default__test_not_accepted_values": {"unique_id": "macro.dbt_utils.default__test_not_accepted_values", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "name": "default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1067357, "supported_languages": null}, "macro.dbt_utils.test_at_least_one": {"unique_id": "macro.dbt_utils.test_at_least_one", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "name": "test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.10826, "supported_languages": null}, "macro.dbt_utils.default__test_at_least_one": {"unique_id": "macro.dbt_utils.default__test_at_least_one", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "name": "default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name) %}\n\nselect *\nfrom (\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      count({{ column_name }}) as filler_column\n\n    from {{ model }}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1088803, "supported_languages": null}, "macro.dbt_utils.get_url_host": {"unique_id": "macro.dbt_utils.get_url_host", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "name": "get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.110411, "supported_languages": null}, "macro.dbt_utils.default__get_url_host": {"unique_id": "macro.dbt_utils.default__get_url_host", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "name": "default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed =\n    dbt_utils.split_part(\n        dbt_utils.split_part(\n            dbt_utils.replace(\n                dbt_utils.replace(\n                    dbt_utils.replace(field, \"'android-app://'\", \"''\"\n                    ), \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n\n-%}\n\n\n    {{ dbt_utils.safe_cast(\n        parsed,\n        dbt_utils.type_string()\n        )}}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.split_part", "macro.dbt_utils.replace", "macro.dbt_utils.safe_cast", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1120517, "supported_languages": null}, "macro.dbt_utils.get_url_parameter": {"unique_id": "macro.dbt_utils.get_url_parameter", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "name": "get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1135504, "supported_languages": null}, "macro.dbt_utils.default__get_url_parameter": {"unique_id": "macro.dbt_utils.default__get_url_parameter", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "name": "default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt_utils.split_part(dbt_utils.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1147065, "supported_languages": null}, "macro.dbt_utils.get_url_path": {"unique_id": "macro.dbt_utils.get_url_path", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "name": "get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1165087, "supported_languages": null}, "macro.dbt_utils.default__get_url_path": {"unique_id": "macro.dbt_utils.default__get_url_path", "package_name": "dbt_utils", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "name": "default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url = \n        dbt_utils.replace(\n            dbt_utils.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{dbt_utils.position(\"'/'\", stripped_url)}}, 0),\n            {{dbt_utils.position(\"'?'\", stripped_url)}} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt_utils.split_part(\n            dbt_utils.right(\n                stripped_url, \n                dbt_utils.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ), \n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt_utils.safe_cast(\n        parsed_path,\n        dbt_utils.type_string()\n    )}}\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt_utils.position", "macro.dbt_utils.split_part", "macro.dbt_utils.right", "macro.dbt_utils.length", "macro.dbt_utils.safe_cast", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1189508, "supported_languages": null}, "macro.re_data.clean_additional_whitespaces": {"unique_id": "macro.re_data.clean_additional_whitespaces", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/cleaning/clean_additional_whitespace.sql", "original_file_path": "macros/public/cleaning/clean_additional_whitespace.sql", "name": "clean_additional_whitespaces", "macro_sql": "{% macro clean_additional_whitespaces(column_name) %}\n    {{ adapter.dispatch('clean_additional_whitespaces', 're_data')(column_name) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__clean_additional_whitespaces"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1206841, "supported_languages": null}, "macro.re_data.default__clean_additional_whitespaces": {"unique_id": "macro.re_data.default__clean_additional_whitespaces", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/cleaning/clean_additional_whitespace.sql", "original_file_path": "macros/public/cleaning/clean_additional_whitespace.sql", "name": "default__clean_additional_whitespaces", "macro_sql": "{% macro default__clean_additional_whitespaces(column_name) %}\n    trim(regexp_replace( {{ column_name }}, '\\s\\s+', ' '))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1210568, "supported_languages": null}, "macro.re_data.postgres__clean_additional_whitespaces": {"unique_id": "macro.re_data.postgres__clean_additional_whitespaces", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/cleaning/clean_additional_whitespace.sql", "original_file_path": "macros/public/cleaning/clean_additional_whitespace.sql", "name": "postgres__clean_additional_whitespaces", "macro_sql": "{% macro postgres__clean_additional_whitespaces(column_name) %}\n    trim(regexp_replace( {{ column_name }}, '\\s\\s+', ' ', 'g'))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1214144, "supported_languages": null}, "macro.re_data.redshift__clean_additional_whitespaces": {"unique_id": "macro.re_data.redshift__clean_additional_whitespaces", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/cleaning/clean_additional_whitespace.sql", "original_file_path": "macros/public/cleaning/clean_additional_whitespace.sql", "name": "redshift__clean_additional_whitespaces", "macro_sql": "{% macro redshift__clean_additional_whitespaces(column_name) %}\n    trim(regexp_replace( {{ column_name }}, '\\\\s\\\\s+', ' '))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1217735, "supported_languages": null}, "macro.re_data.bigquery__clean_additional_whitespaces": {"unique_id": "macro.re_data.bigquery__clean_additional_whitespaces", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/cleaning/clean_additional_whitespace.sql", "original_file_path": "macros/public/cleaning/clean_additional_whitespace.sql", "name": "bigquery__clean_additional_whitespaces", "macro_sql": "{% macro bigquery__clean_additional_whitespaces(column_name) %}\n    trim(regexp_replace( {{ column_name }}, r'\\s\\s+', ' '))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1221547, "supported_languages": null}, "macro.re_data.snowflake__clean_additional_whitespaces": {"unique_id": "macro.re_data.snowflake__clean_additional_whitespaces", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/cleaning/clean_additional_whitespace.sql", "original_file_path": "macros/public/cleaning/clean_additional_whitespace.sql", "name": "snowflake__clean_additional_whitespaces", "macro_sql": "{% macro snowflake__clean_additional_whitespaces(column_name) %}\n    trim(regexp_replace( {{ column_name }}, '\\\\s\\\\s+', ' '))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1225102, "supported_languages": null}, "macro.re_data.generate_blacklist_pattern": {"unique_id": "macro.re_data.generate_blacklist_pattern", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/cleaning/clean_blacklist.sql", "original_file_path": "macros/public/cleaning/clean_blacklist.sql", "name": "generate_blacklist_pattern", "macro_sql": "{% macro generate_blacklist_pattern(chars_to_blacklist) %}\n    {% set pattern = [] %}\n    {% for char in chars_to_blacklist %}\n        {% set expr = '(' + char + ')' %}\n        {% do pattern.append(expr) %}\n    {% endfor %}\n\n    {{ return(pattern | join('|')) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1256304, "supported_languages": null}, "macro.re_data.clean_blacklist": {"unique_id": "macro.re_data.clean_blacklist", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/cleaning/clean_blacklist.sql", "original_file_path": "macros/public/cleaning/clean_blacklist.sql", "name": "clean_blacklist", "macro_sql": "\n\n{%- macro clean_blacklist(column_name, chars_to_blacklist, replacement) -%}\n    {% set pattern_string = re_data.generate_blacklist_pattern(chars_to_blacklist) %}\n\n    {{ adapter.dispatch('clean_blacklist', 're_data')(column_name, pattern_string, replacement) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.generate_blacklist_pattern", "macro.re_data.redshift__clean_blacklist"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1266444, "supported_languages": null}, "macro.re_data.default__clean_blacklist": {"unique_id": "macro.re_data.default__clean_blacklist", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/cleaning/clean_blacklist.sql", "original_file_path": "macros/public/cleaning/clean_blacklist.sql", "name": "default__clean_blacklist", "macro_sql": "{%- macro default__clean_blacklist(column_name, pattern_string, replacement) -%}\n    regexp_replace( {{ column_name }}, '{{ pattern_string }}', '{{ replacement }}')\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1272242, "supported_languages": null}, "macro.re_data.postgres__clean_blacklist": {"unique_id": "macro.re_data.postgres__clean_blacklist", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/cleaning/clean_blacklist.sql", "original_file_path": "macros/public/cleaning/clean_blacklist.sql", "name": "postgres__clean_blacklist", "macro_sql": "{%- macro postgres__clean_blacklist(column_name, pattern_string, replacement) -%}\n    regexp_replace( {{ column_name }}, '{{ pattern_string }}', '{{ replacement }}', 'g')\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.127783, "supported_languages": null}, "macro.re_data.redshift__clean_blacklist": {"unique_id": "macro.re_data.redshift__clean_blacklist", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/cleaning/clean_blacklist.sql", "original_file_path": "macros/public/cleaning/clean_blacklist.sql", "name": "redshift__clean_blacklist", "macro_sql": "{%- macro redshift__clean_blacklist(column_name, pattern_string, replacement) -%}\n    regexp_replace( {{ column_name }}, '{{ pattern_string }}', '{{ replacement }}')\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1283445, "supported_languages": null}, "macro.re_data.bigquery__clean_blacklist": {"unique_id": "macro.re_data.bigquery__clean_blacklist", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/cleaning/clean_blacklist.sql", "original_file_path": "macros/public/cleaning/clean_blacklist.sql", "name": "bigquery__clean_blacklist", "macro_sql": "{%- macro bigquery__clean_blacklist(column_name, pattern_string, replacement) -%}\n    regexp_replace( {{ column_name }}, \"\"\"{{ pattern_string }}\"\"\", '{{ replacement }}')\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1289067, "supported_languages": null}, "macro.re_data.clean_capitalize_words": {"unique_id": "macro.re_data.clean_capitalize_words", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/cleaning/clean_capitalize_words.sql", "original_file_path": "macros/public/cleaning/clean_capitalize_words.sql", "name": "clean_capitalize_words", "macro_sql": "{% macro clean_capitalize_words(column_name) %}\n    initcap( {{column_name}} )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1298616, "supported_languages": null}, "macro.re_data.filter_get_duplicates": {"unique_id": "macro.re_data.filter_get_duplicates", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/filtering/get_duplicates.sql", "original_file_path": "macros/public/filtering/get_duplicates.sql", "name": "filter_get_duplicates", "macro_sql": "{% macro filter_get_duplicates(relation, unique_cols, sort_columns) %}\n    (\n        with duplication_context as (\n            {{re_data.add_duplication_context(relation, unique_cols, sort_columns)}}\n        ),\n        duplicate_rows as (\n            select * from duplication_context where re_data_duplicate_group_row_count > 1\n        )\n        {# return surrogate key as well? #}\n        select *\n        from duplicate_rows\n    ) \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.add_duplication_context"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1313257, "supported_languages": null}, "macro.re_data.filter_remove_duplicates": {"unique_id": "macro.re_data.filter_remove_duplicates", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/filtering/remove_duplicates.sql", "original_file_path": "macros/public/filtering/remove_duplicates.sql", "name": "filter_remove_duplicates", "macro_sql": "{% macro filter_remove_duplicates(relation, unique_cols, sort_columns) %}\n    (\n        with with_row_num as (\n            {{re_data.add_duplication_context(relation, unique_cols, sort_columns)}}\n        ),\n        one_row_num as (\n            select * from with_row_num where re_data_duplicate_group_row_number = 1\n        )\n        select {{ dbt_utils.star(from=relation) }}\n        from one_row_num\n    ) \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.add_duplication_context", "macro.dbt_utils.star"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1328342, "supported_languages": null}, "macro.re_data.is_dbt_relation": {"unique_id": "macro.re_data.is_dbt_relation", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/normalizing/normalize_values.sql", "original_file_path": "macros/public/normalizing/normalize_values.sql", "name": "is_dbt_relation", "macro_sql": "{% macro is_dbt_relation(obj) %}\n    {{ return (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation') )}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.135302, "supported_languages": null}, "macro.re_data.normalize_expression_cte": {"unique_id": "macro.re_data.normalize_expression_cte", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/normalizing/normalize_values.sql", "original_file_path": "macros/public/normalizing/normalize_values.sql", "name": "normalize_expression_cte", "macro_sql": "{% macro normalize_expression_cte(reference_table) %}\n    with target_table as (\n        {% if re_data.is_dbt_relation(reference_table) or reference_table is string %}\n            select * from {{ reference_table }}\n        {% elif reference_table is mapping %}\n            {% for key, value in reference_table.items() %}\n                select '{{key}}' as source, '{{value}}' as target\n                {% if not loop.last %}union all{% endif %}\n            {% endfor %}\n        {% endif %}\n    )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.is_dbt_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1368272, "supported_languages": null}, "macro.re_data.normalize_values": {"unique_id": "macro.re_data.normalize_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/normalizing/normalize_values.sql", "original_file_path": "macros/public/normalizing/normalize_values.sql", "name": "normalize_values", "macro_sql": "\n\n{%- macro normalize_values(source_relation, column_name, reference_table) -%}\n    ( \n        {{ re_data.normalize_expression_cte(reference_table) }}\n        \n        select s.*, \n        case when t.source is null\n                then s.{{column_name}}\n            else t.target\n            end as {{ column_name + '__normalized'}} \n        from {{ source_relation }} s\n        left join target_table t \n        on t.source = s.{{column_name}}\n    )\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.normalize_expression_cte"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1376522, "supported_languages": null}, "macro.re_data.valid_regex": {"unique_id": "macro.re_data.valid_regex", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_regex", "macro_sql": "{% macro valid_regex(column_name, to_validate) %}\n{% set pattern = re_data.get_regex_for(to_validate) %}\n  case when \n    {{ column_name }} is null then false \n    else {{ re_data.regex_match_expression(column_name, pattern) }}\n  end\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.get_regex_for", "macro.re_data.regex_match_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1432078, "supported_languages": null}, "macro.re_data.valid_email": {"unique_id": "macro.re_data.valid_email", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_email", "macro_sql": "{% macro valid_email(column_name) %}\n    {{ re_data.valid_regex(column_name, 'email')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1437354, "supported_languages": null}, "macro.re_data.valid_date_eu": {"unique_id": "macro.re_data.valid_date_eu", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_date_eu", "macro_sql": "{% macro valid_date_eu(column_name) %}\n    {{ re_data.valid_regex(column_name, 'date_eu')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1447473, "supported_languages": null}, "macro.re_data.valid_date_us": {"unique_id": "macro.re_data.valid_date_us", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_date_us", "macro_sql": "{% macro valid_date_us(column_name) %}\n    {{ re_data.valid_regex(column_name, 'date_us')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1453102, "supported_languages": null}, "macro.re_data.valid_date_inverse": {"unique_id": "macro.re_data.valid_date_inverse", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_date_inverse", "macro_sql": "{% macro valid_date_inverse(column_name) %}\n    {{ re_data.valid_regex(column_name, 'date_inverse')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1458266, "supported_languages": null}, "macro.re_data.valid_date_iso_8601": {"unique_id": "macro.re_data.valid_date_iso_8601", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_date_iso_8601", "macro_sql": "{% macro valid_date_iso_8601(column_name) %}\n    {{ re_data.valid_regex(column_name, 'date_iso_8601')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.146373, "supported_languages": null}, "macro.re_data.valid_time_24h": {"unique_id": "macro.re_data.valid_time_24h", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_time_24h", "macro_sql": "{% macro valid_time_24h(column_name) %}\n    {{ re_data.valid_regex(column_name, 'time_24h')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1468668, "supported_languages": null}, "macro.re_data.valid_time_12h": {"unique_id": "macro.re_data.valid_time_12h", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_time_12h", "macro_sql": "{% macro valid_time_12h(column_name) %}\n    {{ re_data.valid_regex(column_name, 'time_12h')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.147333, "supported_languages": null}, "macro.re_data.valid_time": {"unique_id": "macro.re_data.valid_time", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_time", "macro_sql": "{% macro valid_time(column_name) %}\n    {{ re_data.valid_regex(column_name, 'time')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1478407, "supported_languages": null}, "macro.re_data.valid_ip_v4": {"unique_id": "macro.re_data.valid_ip_v4", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_ip_v4", "macro_sql": "{% macro valid_ip_v4(column_name) %}\n    {{ re_data.valid_regex(column_name, 'ipv4_address')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.148346, "supported_languages": null}, "macro.re_data.valid_ip_v6": {"unique_id": "macro.re_data.valid_ip_v6", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_ip_v6", "macro_sql": "{% macro valid_ip_v6(column_name) %}\n    {{ re_data.valid_regex(column_name, 'ipv6_address')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1488423, "supported_languages": null}, "macro.re_data.valid_ip": {"unique_id": "macro.re_data.valid_ip", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_ip", "macro_sql": "{% macro valid_ip(column_name) %}\n    (\n        {{ re_data.valid_regex(column_name, 'ipv4_address')}}\n    or \n        {{ re_data.valid_regex(column_name, 'ipv6_address')}}\n    )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1495516, "supported_languages": null}, "macro.re_data.valid_number": {"unique_id": "macro.re_data.valid_number", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_number", "macro_sql": "{% macro valid_number(column_name) %}\n    {{ re_data.valid_regex(column_name, 'number_whole')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1500793, "supported_languages": null}, "macro.re_data.valid_number_decimal_point": {"unique_id": "macro.re_data.valid_number_decimal_point", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_number_decimal_point", "macro_sql": "{% macro valid_number_decimal_point(column_name) %}\n    {{ re_data.valid_regex(column_name, 'number_decimal_point')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1505878, "supported_languages": null}, "macro.re_data.valid_number_decimal_comma": {"unique_id": "macro.re_data.valid_number_decimal_comma", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_number_decimal_comma", "macro_sql": "{% macro valid_number_decimal_comma(column_name) %}\n    {{ re_data.valid_regex(column_name, 'number_decimal_comma')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1510944, "supported_languages": null}, "macro.re_data.valid_number_percentage": {"unique_id": "macro.re_data.valid_number_percentage", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_number_percentage", "macro_sql": "{% macro valid_number_percentage(column_name) %}\n    {{ re_data.valid_regex(column_name, 'number_percentage')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1516283, "supported_languages": null}, "macro.re_data.valid_number_percentage_point": {"unique_id": "macro.re_data.valid_number_percentage_point", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_number_percentage_point", "macro_sql": "{% macro valid_number_percentage_point(column_name) %}\n    {{ re_data.valid_regex(column_name, 'number_percentage_point')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1521366, "supported_languages": null}, "macro.re_data.valid_number_percentage_comma": {"unique_id": "macro.re_data.valid_number_percentage_comma", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_number_percentage_comma", "macro_sql": "{% macro valid_number_percentage_comma(column_name) %}\n    {{ re_data.valid_regex(column_name, 'number_percentage_comma')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1526477, "supported_languages": null}, "macro.re_data.valid_phone": {"unique_id": "macro.re_data.valid_phone", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_phone", "macro_sql": "{% macro valid_phone(column_name) %}\n    {{ re_data.valid_regex(column_name, 'phone')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.153155, "supported_languages": null}, "macro.re_data.valid_uuid": {"unique_id": "macro.re_data.valid_uuid", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_uuid", "macro_sql": "{% macro valid_uuid(column_name) %}\n    {{ re_data.valid_regex(column_name, 'uuid')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1536603, "supported_languages": null}, "macro.re_data.valid_credit_card": {"unique_id": "macro.re_data.valid_credit_card", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/valid_with_regex.sql", "original_file_path": "macros/public/validating/valid_with_regex.sql", "name": "valid_credit_card", "macro_sql": "{% macro valid_credit_card(column_name) %}\n    {{ re_data.valid_regex(column_name, 'credit_card_number')}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.valid_regex"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1541927, "supported_languages": null}, "macro.re_data.get_regex_for": {"unique_id": "macro.re_data.get_regex_for", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/regex_dict.sql", "original_file_path": "macros/public/validating/regex_dict.sql", "name": "get_regex_for", "macro_sql": "{% macro get_regex_for(to_validate) %}\n\n    {% set regexp_dict = {\n        'number_whole': '^\\-?[0-9]+$',\n        'number_decimal_point': '^\\-?[0-9]+\\.[0-9]+$',\n        'number_decimal_comma': '^\\-?[0-9]+,[0-9]+$',\n        'number_percentage': '^\\-?[0-9]+([\\.,][0-9]+)? ?%$',\n        'number_percentage_point': '^\\-?[0-9]+([\\.][0-9]+)? ?%$',\n        'number_percentage_comma': '^\\-?[0-9]+([,][0-9]+)? ?%$',\n        'date_eu': '^([1-9]|0[1-9]|[12][0-9]|3[01])[-\\./]([1-9]|0[1-9]|1[012])[-\\./](19|20)?[0-9][0-9]$',\n        'date_us': '^([1-9]|0[1-9]|1[012])[-\\./]([1-9]|0[1-9]|[12][0-9]|3[01])[-\\./](19|20)?[0-9][0-9]$',\n        'date_inverse': '^(19|20)[0-9][0-9][-\\./]?([1-9]|0[1-9]|1[012])[-\\./]?([1-9]|0[1-9]|[12][0-9]|3[01])$',\n        'time_24h': '^([01][0-9]|2[0-3]):([0-5][0-9])$',\n        'time_12h': '^(1[0-2]|0?[1-9]):[0-5][0-9]$',\n        'time': '^([0-9]|1[0-9]|2[0-4])[:-]([0-9]|[0-5][0-9])([:-]([0-9]|[0-5][0-9])(,[0-9]+)?)?$',\n        'date_iso_8601':\n            '^'\n            '([1-9][0-9]{3}-((0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-8])|(0[13-9]|1[0-2])-(29|30)|(0[13578]|1[02])-31)|'\n            '([1-9][0-9](0[48]|[2468][048]|[13579][26])|([2468][048]|[13579][26])00)-02-29)'\n\n            'T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?'\n\n            '(Z|[+-][01][0-9]:[0-5][0-9])?'\n            '$',\n        'uuid': '^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$',\n        'ipv4_address': '^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$',\n        'ipv6_address': '^((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))(%.+)?$',\n        'email': '^[A-Za-z0-9.-_%]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$',\n        } %}\n\n    {% set base_regex = regexp_dict[to_validate] %}\n    {% set qualifed_regex = adapter.dispatch('get_regex_for', 're_data')(base_regex) %}\n    {{ return(qualifed_regex) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__get_regex_for"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1659899, "supported_languages": null}, "macro.re_data.default__get_regex_for": {"unique_id": "macro.re_data.default__get_regex_for", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/regex_dict.sql", "original_file_path": "macros/public/validating/regex_dict.sql", "name": "default__get_regex_for", "macro_sql": "{% macro default__get_regex_for(pattern) %}\n    {{ return (pattern) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1664681, "supported_languages": null}, "macro.re_data.redshift__get_regex_for": {"unique_id": "macro.re_data.redshift__get_regex_for", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/regex_dict.sql", "original_file_path": "macros/public/validating/regex_dict.sql", "name": "redshift__get_regex_for", "macro_sql": "{% macro redshift__get_regex_for(pattern) %}\n    {% set changed = modules.re.sub('\\.', '\\\\.', pattern) %}\n    {% set changed = modules.re.sub('\\-', '\\\\-', changed) %}\n    {{ return (changed) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1685913, "supported_languages": null}, "macro.re_data.snowflake__get_regex_for": {"unique_id": "macro.re_data.snowflake__get_regex_for", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/validating/regex_dict.sql", "original_file_path": "macros/public/validating/regex_dict.sql", "name": "snowflake__get_regex_for", "macro_sql": "{% macro snowflake__get_regex_for(pattern) %}\n    {% set changed = modules.re.sub('\\.', '\\\\.', pattern) %}\n    {% set changed = modules.re.sub('\\-', '\\\\-', changed) %}\n    {{ return (changed) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1707647, "supported_languages": null}, "macro.re_data.export_table_samples": {"unique_id": "macro.re_data.export_table_samples", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/store/export_table_samples.sql", "original_file_path": "macros/public/store/export_table_samples.sql", "name": "export_table_samples", "macro_sql": "{% macro export_table_samples(start_date, end_date, table_samples_path=None) %}\n    {% set table_samples_query %}\n        select\n            lower(table_name) as table_name,\n            sample_data,\n            sampled_on\n        from\n            {{ ref('re_data_table_samples') }}\n    {% endset %}\n\n    {% set query_result = run_query(table_samples_query) %}\n    {% set table_samples_file_path = table_samples_path or 'target/re_data/table_samples.json' %}\n    {% do query_result.to_json(table_samples_file_path) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.172916, "supported_languages": null}, "macro.re_data.export_alerts": {"unique_id": "macro.re_data.export_alerts", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/store/export_alerts.sql", "original_file_path": "macros/public/store/export_alerts.sql", "name": "export_alerts", "macro_sql": "{% macro export_alerts(start_date, end_date, alerts_path=None, monitored_path=None) %}\n    {% set alerts_query %}\n        select\n            type as {{ re_data.quote_column('type') }},\n            model as {{ re_data.quote_column('model') }},\n            message as {{ re_data.quote_column('message') }},\n            value as {{ re_data.quote_column('value') }},\n            {{ format_timestamp('time_window_end')}} as {{ re_data.quote_column('time_window_end') }} \n        from {{ ref('re_data_alerts') }}\n        where\n            case\n                when type = 'anomaly' then {{ in_date_window('time_window_end', start_date, end_date) }}\n                else {{ in_date_window('time_window_end', start_date, none) }}\n            end\n        order by time_window_end desc\n    {% endset %}\n\n    {% set query_result = run_query(alerts_query) %}\n    {% set alerts_file_path = alerts_path or 'target/re_data/alerts.json' %}\n    {% do query_result.to_json(alerts_file_path) %}\n    {{ save_monitored(monitored_path) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.quote_column", "macro.re_data.format_timestamp", "macro.re_data.in_date_window", "macro.dbt.run_query", "macro.re_data.save_monitored"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1772244, "supported_languages": null}, "macro.re_data.overview_select_base": {"unique_id": "macro.re_data.overview_select_base", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/store/generate_overview.sql", "original_file_path": "macros/public/store/generate_overview.sql", "name": "overview_select_base", "macro_sql": "{% macro overview_select_base(type, timestamp_col) %}\n    '{{ type }}' as {{ re_data.quote_column('type') }},\n    table_name as {{ re_data.quote_column('table_name') }},\n    column_name as {{ re_data.quote_column('column_name') }},\n    {{ timestamp_col }} as {{ re_data.quote_column('computed_on') }},\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.quote_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1872137, "supported_languages": null}, "macro.re_data.generate_overview": {"unique_id": "macro.re_data.generate_overview", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/store/generate_overview.sql", "original_file_path": "macros/public/store/generate_overview.sql", "name": "generate_overview", "macro_sql": "{% macro generate_overview(start_date, end_date, interval, overview_path=None, monitored_path=None) %}\n-- depends_on: {{ ref('re_data_anomalies') }}\n-- depends_on: {{ ref('re_data_base_metrics') }}\n-- depends_on: {{ ref('re_data_schema_changes') }}\n-- depends_on: {{ ref('re_data_columns') }}\n\n    {# time grain is either days or hour #}\n    {% set time_grain, num_str = interval.split(':') %}\n    {% set num = num_str | int %}\n    {% if time_grain == 'hours' %}\n        {% set interval_length_sec = num * 3600 %}\n    {% elif time_grain == 'days'%}\n        {% set interval_length_sec = num * 3600 * 24 %}\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Invalid interval. Got: \" ~ interval) }}\n    {% endif %}\n    {{ dbt_utils.log_info('[re_data] interval length in seconds is ' ~ interval_length_sec) }}\n    {% set overview_query %}\n        with schema_changes_casted as (\n            select id, table_name, operation, column_name, data_type, {{ bool_to_string('is_nullable') }}, prev_column_name, prev_data_type, {{ bool_to_string('prev_is_nullable') }}, detected_time\n            from {{ ref('re_data_schema_changes') }}\n        ),\n        columns_casted as (\n            select {{ full_table_name('name', 'schema', 'database') }} as table_name, column_name, data_type, {{ bool_to_string('is_nullable') }}, computed_on\n            from {{ ref('re_data_columns') }} \n        )\n        \n    (    \n        select\n            {{ overview_select_base('metric', 'computed_on')}}\n            {{ to_single_json(['metric', 'value', 'time_window_end', 'interval_length_sec']) }} as {{ re_data.quote_column('data') }}\n        from\n            {{ ref('re_data_base_metrics') }}\n            where {{ in_date_window('time_window_end', start_date, end_date) }}\n            and interval_length_sec = {{interval_length_sec}}\n    ) union all \n    (\n        select\n            {{ overview_select_base('anomaly', 'computed_on')}}\n            {{ to_single_json(['id', 'metric', 'z_score_value', 'last_value', 'last_avg', 'last_stddev', 'time_window_end', 'interval_length_sec']) }} as {{ re_data.quote_column('data') }}\n        from\n            {{ ref('re_data_anomalies') }}\n            where {{ in_date_window('time_window_end', start_date, end_date) }}\n            and interval_length_sec = {{interval_length_sec}}\n    ) union all\n    (\n        select\n            {{ overview_select_base('schema_change', 'detected_time')}}\n            {{ to_single_json(['id', 'operation', 'data_type', 'is_nullable', 'prev_column_name', 'prev_data_type', 'prev_is_nullable', 'detected_time']) }} as {{ re_data.quote_column('data') }}\n        from\n            schema_changes_casted\n            where {{ in_date_window('detected_time', start_date, none) }}\n    ) union all\n    (\n        select\n            {{ overview_select_base('schema', 'computed_on')}}\n            {{ to_single_json(['data_type', 'is_nullable']) }} as {{ re_data.quote_column('data') }}\n        from\n            columns_casted\n    )\n    union all \n    (\n        select \n            'alert' as {{ re_data.quote_column('type') }},\n            model as {{ re_data.quote_column('table_name') }},\n            null as {{ re_data.quote_column('column_name') }},\n            time_window_end as {{ re_data.quote_column('computed_on') }},\n            {{ to_single_json(['type', 'model', 'message', 'value', 'time_window_end']) }} as {{ re_data.quote_column('data') }}\n        from\n            {{ ref('re_data_alerts') }}\n        where\n            case\n                when type = 'anomaly' then {{ in_date_window('time_window_end', start_date, end_date)  }} \n                else {{ in_date_window('time_window_end', start_date, none) }}\n            end\n    )\n    order by {{ re_data.quote_column('computed_on')}} desc\n    {% endset %}\n\n    {% set overview_result = run_query(overview_query) %}\n    {% set overview_file_path = overview_path or 'target/re_data/overview.json' %}\n    {% do overview_result.to_json(overview_file_path) %}\n    {{ save_monitored(monitored_path) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.log_info", "macro.re_data.bool_to_string", "macro.re_data.full_table_name", "macro.re_data.overview_select_base", "macro.re_data.to_single_json", "macro.re_data.quote_column", "macro.re_data.in_date_window", "macro.dbt.run_query", "macro.re_data.save_monitored"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.1978137, "supported_languages": null}, "macro.re_data.export_tests_history": {"unique_id": "macro.re_data.export_tests_history", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/public/store/export_tests_history.sql", "original_file_path": "macros/public/store/export_tests_history.sql", "name": "export_tests_history", "macro_sql": "{% macro export_tests_history(start_date, end_date, tests_history_path=None) %}\n    {% set tests_history_query %}\n        select\n            table_name,\n            column_name,\n            test_name,\n            run_at,\n            status,\n            execution_time, \n            message, \n            failures_count, \n            failures_json, \n            failures_table,\n            severity, \n            compiled_sql\n        from\n            {{ ref('re_data_test_history') }}\n        where {{ in_date_window('run_at', start_date, end_date) }}\n    {% endset %}\n\n    {% set query_result = run_query(tests_history_query) %}\n    {% set tests_history_file_path = tests_history_path or 'target/re_data/tests_history.json' %}\n    {% do query_result.to_json(tests_history_file_path) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.in_date_window", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2002468, "supported_languages": null}, "macro.re_data.order_by_if_time_filter": {"unique_id": "macro.re_data.order_by_if_time_filter", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/samples/internal_model_template.sql", "original_file_path": "macros/samples/internal_model_template.sql", "name": "order_by_if_time_filter", "macro_sql": "{%- macro order_by_if_time_filter(time_filter) -%}\n    {%- if time_filter is not none -%}\n        order by {{ time_filter }} desc\n    {%- endif -%}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2037098, "supported_languages": null}, "macro.re_data.re_data_last_table_samples": {"unique_id": "macro.re_data.re_data_last_table_samples", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/samples/internal_model_template.sql", "original_file_path": "macros/samples/internal_model_template.sql", "name": "re_data_last_table_samples", "macro_sql": "{% macro re_data_last_table_samples() %}\n    {{ re_data.generate_depends(['re_data_selected', 're_data_monitored', 're_data_columns', 're_data_run_started_at', 're_data_last_table_samples_part']) }}\n\n    {{\n        config(\n            materialized='table',\n        )\n    }}\n\n    {% if var.has_var('re_data:store_table_samples') %}\n        {% set store_samples = var('re_data:store_table_samples') %}\n    {% endif %}\n    {% if not re_data.in_compile() and store_samples is sameas true %}\n        {%- set tables = run_query(re_data.get_tables()) %}\n\n        {% set samples_list = [] %}\n        {%- for sample_table in tables %}\n\n            {% set model = get_model_config(sample_table) %}\n            {% set columns_to_sample = [] %}\n            {% for key, value in model.columns_info.items() | sort %}\n                {% if value.data_type in ['numeric', 'text'] %}\n                    {% do columns_to_sample.append(key) %}\n                {% endif %}\n            {% endfor %}\n\n            {% set samples_query %}\n                select {{ print_list(columns_to_sample)}} from {{ model.table_name }}\n                {{ order_by_if_time_filter(model.time_filter) }}\n                limit 10\n            {% endset %}\n\n            {% set samples = re_data.agate_to_list(run_query(samples_query)) %}\n            {% do samples_list.append({\n                'table_name': model.model_name,\n                'sample_data': samples,\n            }) %}\n\n        {% endfor %}\n        {% do re_data.insert_list_to_table(\n                ref('re_data_last_table_samples_part'),\n                samples_list,\n                ['table_name', 'sample_data']\n            ) %}\n    {% endif %}\n\n    {{ re_data.empty_last_table_samples() }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.generate_depends", "macro.re_data.in_compile", "macro.dbt.run_query", "macro.re_data.get_tables", "macro.re_data.get_model_config", "macro.re_data.print_list", "macro.re_data.order_by_if_time_filter", "macro.re_data.agate_to_list", "macro.re_data.insert_list_to_table", "macro.re_data.empty_last_table_samples"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2089365, "supported_languages": null}, "macro.re_data.re_data_last_base_metrics_part": {"unique_id": "macro.re_data.re_data_last_base_metrics_part", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/internal_model_template.sql", "original_file_path": "macros/metrics/base/internal_model_template.sql", "name": "re_data_last_base_metrics_part", "macro_sql": "{% macro re_data_last_base_metrics_part() %}\n\n-- depends_on: {{ ref('re_data_columns') }}\n\n{{\n    config(\n        materialized='table',\n    )\n}}\n\n{{ re_data.empty_last_base_metrics() }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.empty_last_base_metrics"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2107325, "supported_languages": null}, "macro.re_data.re_data_last_base_metrics_thread": {"unique_id": "macro.re_data.re_data_last_base_metrics_thread", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/internal_model_template.sql", "original_file_path": "macros/metrics/base/internal_model_template.sql", "name": "re_data_last_base_metrics_thread", "macro_sql": "{% macro re_data_last_base_metrics_thread(num) %}\n    {% set part_name = 're_data_last_base_metrics_part' ~ num %}\n    {{ re_data.generate_depends(['re_data_selected', 're_data_monitored', 're_data_columns', 're_data_run_started_at', part_name]) }}\n\n    {{\n        config(\n            materialized='table',\n        )\n    }}\n\n    {% if not re_data.in_compile() %}\n        {{ re_data.metrics_base_compute_for_thread(num, part_name) }}\n    {% endif %}\n\n    {{ re_data.empty_last_base_metrics() }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.generate_depends", "macro.re_data.in_compile", "macro.re_data.metrics_base_compute_for_thread", "macro.re_data.empty_last_base_metrics"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2123897, "supported_languages": null}, "macro.re_data.metrics_base_compute_for_thread": {"unique_id": "macro.re_data.metrics_base_compute_for_thread", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/queries.sql", "original_file_path": "macros/metrics/base/queries.sql", "name": "metrics_base_compute_for_thread", "macro_sql": "{% macro metrics_base_compute_for_thread(thread_value, ref_model) %}\n    {%- set tables =  run_query(re_data.get_tables()) %}\n    {%- for mtable in tables %}\n        -- we are splitting computing metrics to 4 different threads\n        {% set for_loop_mod = (loop.index % 4) %}\n        {% if for_loop_mod == thread_value %}\n            {% set model = get_model_config(mtable) %}\n\n            {% set columns_to_query = [] %}\n            {% set size = 0 %}\n\n            {% for column in model.columns %}\n                {% set column_name = re_data.row_value(column, 'column_name') %}\n                \n                {% if should_compute_metric(model, column_name) %}\n                    {% do columns_to_query.append(column) %}\n                {% endif %}\n\n                {% set columns_size = columns_to_query| length %}\n\n                {% if columns_size == var('re_data:max_columns_in_query') %}\n                    {%- set insert_stats_query = re_data.metrics_base_insert(model, ref_model, columns_to_query) -%}\n\n                    {% if insert_stats_query %}\n                        {% do run_query(insert_stats_query) %}\n                    {% endif %}\n                    {% do columns_to_query.clear() %}\n                {% endif %}\n            {% endfor %}\n\n            {%- set insert_stats_query = re_data.metrics_base_insert(model, ref_model, columns_to_query, table_level=True) -%}\n            {% do run_query(insert_stats_query) %}\n\n            {{ dbt_utils.log_info('[re_data_log] - finished computing metrics for:' ~ model.model_name) }}\n        {% endif %}\n    {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.re_data.get_tables", "macro.re_data.get_model_config", "macro.re_data.row_value", "macro.re_data.should_compute_metric", "macro.re_data.metrics_base_insert", "macro.dbt_utils.log_info"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2219338, "supported_languages": null}, "macro.re_data.metrics_base_insert": {"unique_id": "macro.re_data.metrics_base_insert", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/queries.sql", "original_file_path": "macros/metrics/base/queries.sql", "name": "metrics_base_insert", "macro_sql": "{% macro metrics_base_insert(model, ref_model, columns, table_level=False) %}\n\n    {% set col_exprs = re_data.metrics_base_expressions(model, columns, table_level) %}\n    {% if col_exprs == [] %}\n        {{ return ('') }}\n    {% endif %}\n\n    insert into {{ ref(ref_model) }}\n    with temp_table_metrics as (\n    select \n        {%- for col_expr in col_exprs %}\n            ( {{ col_expr.expr }} ) as {{ re_data.quote_column_name(col_expr.col_name + '___' + col_expr.metric) }}\n            {%- if not loop.last %},{%- endif %}\n        {% endfor %}\n    from \n        {{ model.table_name }}\n    where\n        {{ in_time_window(model.time_filter) }}\n    )\n\n    {%- for col_expr in col_exprs %}\n        {% set final_metric_name = get_final_metric_name(col_expr.metric, model.time_filter) %}\n        \n        select '{{model.table_name}}' as table_name, '{{ col_expr.col_name }}' as column_name, '{{ final_metric_name }}' as metric, {{ re_data.quote_column_name(col_expr.col_name + '___' + col_expr.metric) }} as value\n        from temp_table_metrics\n        {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.metrics_base_expressions", "macro.re_data.quote_column_name", "macro.re_data.in_time_window", "macro.re_data.get_final_metric_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2256255, "supported_languages": null}, "macro.re_data.get_final_metric_name": {"unique_id": "macro.re_data.get_final_metric_name", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/queries.sql", "original_file_path": "macros/metrics/base/queries.sql", "name": "get_final_metric_name", "macro_sql": "{% macro get_final_metric_name(metric_name, time_filter) %}\n    {% if time_filter is none %}\n        {{ return ('global__' + metric_name) }}\n    {% else %}\n        {{ return (metric_name) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2265441, "supported_languages": null}, "macro.re_data.metrics_base_expressions": {"unique_id": "macro.re_data.metrics_base_expressions", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/expression.sql", "original_file_path": "macros/metrics/base/expression.sql", "name": "metrics_base_expressions", "macro_sql": "{% macro metrics_base_expressions(model, columns, table_level=False) %}\n\n    {% set col_expr = [] %}\n\n    {% for col in columns %}\n        {% set column_name = re_data.row_value(col, 'column_name') %}\n        {% do col_expr.extend(re_data.metrics_base_expression_column_all(model, col)) %}\n    {% endfor %}\n\n    {% if table_level %}\n        {% do col_expr.extend(re_data.metrics_base_expresion_table_all(model)) %}\n    {% endif %}\n\n    {{ return (col_expr) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.row_value", "macro.re_data.metrics_base_expression_column_all", "macro.re_data.metrics_base_expresion_table_all"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2348542, "supported_languages": null}, "macro.re_data.metrics_base_expression_column_all": {"unique_id": "macro.re_data.metrics_base_expression_column_all", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/expression.sql", "original_file_path": "macros/metrics/base/expression.sql", "name": "metrics_base_expression_column_all", "macro_sql": "{% macro metrics_base_expression_column_all(model, column) %}\n\n    {%- set col_expr = [] %}\n    {%- set metrics_to_compute = [] %}\n    {% set column_name = re_data.row_value(column, 'column_name') %}\n    {% set data_type = model.columns_info[column_name].data_type %}\n    {% do metrics_to_compute.extend(model.metrics.get('group').get('column', {}).get(data_type, [])) %}\n    {% do metrics_to_compute.extend(model.metrics.get('additional').get('column', {}).get(column_name, [])) %} \n\n    {% for metric_value in metrics_to_compute %}\n        {% set metric_obj = re_data.extract_metric_config(metric_value) %}\n        {% set expression = re_data.metrics_base_expression_column(model, column_name, metric_obj['metric'], metric_obj['config']) %}\n        {% do col_expr.append({ 'expr': expression, 'col_name': column_name, 'metric': metric_obj['metric']}) %}\n    {% endfor %}\n\n    {{ return (col_expr) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.row_value", "macro.re_data.extract_metric_config", "macro.re_data.metrics_base_expression_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2386596, "supported_languages": null}, "macro.re_data.metrics_base_expresion_table_all": {"unique_id": "macro.re_data.metrics_base_expresion_table_all", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/expression.sql", "original_file_path": "macros/metrics/base/expression.sql", "name": "metrics_base_expresion_table_all", "macro_sql": "{% macro metrics_base_expresion_table_all(model) %}\n    {%- set table_expr = [] %}\n    {%- set metrics_to_compute = [] %}\n    {% do metrics_to_compute.extend(model.metrics.get('group').get('table', [])) %}\n    {% do metrics_to_compute.extend(model.metrics.get('additional').get('table', [])) %}\n\n    {% for metric_value in metrics_to_compute %}\n        {% set metric_obj = re_data.extract_metric_config(metric_value) %}\n        {% set expression = re_data.metrics_base_expression_table(model, metric_obj['metric'], metric_obj['config']) %}\n        {% do table_expr.append({ 'expr': expression, 'col_name': '', 'metric': metric_obj['metric']}) %}\n    {% endfor %}\n\n    {{ return (table_expr) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.extract_metric_config", "macro.re_data.metrics_base_expression_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2415318, "supported_languages": null}, "macro.re_data.metrics_base_expression_table": {"unique_id": "macro.re_data.metrics_base_expression_table", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/expression.sql", "original_file_path": "macros/metrics/base/expression.sql", "name": "metrics_base_expression_table", "macro_sql": "{% macro metrics_base_expression_table(model, metric_name, config) %}\n    {% set metric_macro = re_data.get_metric_macro(metric_name) %}\n    {% set context = {'time_filter': model.time_filter, 'metric_name': metric_name, 'config': config, 'table_name': model.table_name, 'column_name': none} %}\n\n    {{ metric_macro(context) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.get_metric_macro"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.242877, "supported_languages": null}, "macro.re_data.metrics_base_expression_column": {"unique_id": "macro.re_data.metrics_base_expression_column", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/expression.sql", "original_file_path": "macros/metrics/base/expression.sql", "name": "metrics_base_expression_column", "macro_sql": "\n\n\n{%- macro metrics_base_expression_column(model, column_name, metric_name, config) %}\n    {% set metric_macro = re_data.get_metric_macro(metric_name) %}\n    {% set context = {'time_filter': model.time_filter, 'metric_name': metric_name, 'config': config, 'table_name': model.table_name, 'column_name': re_data.quote_column_name(column_name)} %}\n\n    {{ metric_macro(context) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.get_metric_macro", "macro.re_data.quote_column_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2444239, "supported_languages": null}, "macro.re_data.extract_metric_config": {"unique_id": "macro.re_data.extract_metric_config", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/expression.sql", "original_file_path": "macros/metrics/base/expression.sql", "name": "extract_metric_config", "macro_sql": "{% macro extract_metric_config(metric_value) %}\n\n    {% set config = none %}\n\n    {% if metric_value is mapping %}\n        {% set metric = metric_value.keys() | first %}\n        {% if metric_value[metric] is none %}\n            {{ exceptions.raise_compiler_error(\"Empty configuration passed for metric: \" ~ metric ~ \". If the metric doesn't use a config, please use the column name as a string.\") }}\n        {% endif %}\n\n        {% set config = metric_value[metric] %}\n    {%- else %}\n        {% set metric = metric_value %}\n    {% endif %}\n\n    {{ return ({'metric': metric, 'config': config}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2465067, "supported_languages": null}, "macro.re_data.get_metric_macro": {"unique_id": "macro.re_data.get_metric_macro", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/expression.sql", "original_file_path": "macros/metrics/base/expression.sql", "name": "get_metric_macro", "macro_sql": "\n\n{%- macro get_metric_macro(metric_name) %}\n    {% set macro_name = 're_data_metric' + '_' + metric_name %}\n\n    {% if context['re_data'].get(macro_name) %}\n        {% set metric_macro = context['re_data'][macro_name] %}\n    {%- else %}\n        {% set metric_macro = context[project_name][macro_name] %}\n    {% endif %}\n\n    {{ return (metric_macro) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2480056, "supported_languages": null}, "macro.re_data.re_data_metric_max": {"unique_id": "macro.re_data.re_data_metric_max", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/column_default.sql", "original_file_path": "macros/metrics/base/build_in/column_default.sql", "name": "re_data_metric_max", "macro_sql": "{% macro re_data_metric_max(context) %}\n    max({{context.column_name}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2513466, "supported_languages": null}, "macro.re_data.re_data_metric_min": {"unique_id": "macro.re_data.re_data_metric_min", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/column_default.sql", "original_file_path": "macros/metrics/base/build_in/column_default.sql", "name": "re_data_metric_min", "macro_sql": "{% macro re_data_metric_min(context) %}\n    min({{context.column_name}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2517362, "supported_languages": null}, "macro.re_data.re_data_metric_avg": {"unique_id": "macro.re_data.re_data_metric_avg", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/column_default.sql", "original_file_path": "macros/metrics/base/build_in/column_default.sql", "name": "re_data_metric_avg", "macro_sql": "{% macro re_data_metric_avg(context) %}\n    avg(cast ({{context.column_name}} as {{ numeric_type() }}))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.numeric_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2522237, "supported_languages": null}, "macro.re_data.re_data_metric_stddev": {"unique_id": "macro.re_data.re_data_metric_stddev", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/column_default.sql", "original_file_path": "macros/metrics/base/build_in/column_default.sql", "name": "re_data_metric_stddev", "macro_sql": "{% macro re_data_metric_stddev(context) %}\n    stddev(cast ( {{context.column_name}} as {{ numeric_type() }}))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.numeric_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2527092, "supported_languages": null}, "macro.re_data.re_data_metric_variance": {"unique_id": "macro.re_data.re_data_metric_variance", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/column_default.sql", "original_file_path": "macros/metrics/base/build_in/column_default.sql", "name": "re_data_metric_variance", "macro_sql": "{% macro re_data_metric_variance(context) %}\n    variance(cast ( {{context.column_name}} as {{ numeric_type() }}))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.numeric_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2531853, "supported_languages": null}, "macro.re_data.re_data_metric_max_length": {"unique_id": "macro.re_data.re_data_metric_max_length", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/column_default.sql", "original_file_path": "macros/metrics/base/build_in/column_default.sql", "name": "re_data_metric_max_length", "macro_sql": "{% macro re_data_metric_max_length(context) %}\n    max(length({{context.column_name}}))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2535386, "supported_languages": null}, "macro.re_data.re_data_metric_min_length": {"unique_id": "macro.re_data.re_data_metric_min_length", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/column_default.sql", "original_file_path": "macros/metrics/base/build_in/column_default.sql", "name": "re_data_metric_min_length", "macro_sql": "{% macro re_data_metric_min_length(context) %}\n    min(length({{context.column_name}}))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.253886, "supported_languages": null}, "macro.re_data.re_data_metric_avg_length": {"unique_id": "macro.re_data.re_data_metric_avg_length", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/column_default.sql", "original_file_path": "macros/metrics/base/build_in/column_default.sql", "name": "re_data_metric_avg_length", "macro_sql": "{% macro re_data_metric_avg_length(context) %}\n    avg(cast (length( {{context.column_name}} ) as {{ numeric_type() }}))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.numeric_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.254403, "supported_languages": null}, "macro.re_data.re_data_metric_nulls_count": {"unique_id": "macro.re_data.re_data_metric_nulls_count", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/column_default.sql", "original_file_path": "macros/metrics/base/build_in/column_default.sql", "name": "re_data_metric_nulls_count", "macro_sql": "{% macro re_data_metric_nulls_count(context) %}\n    coalesce(\n        sum(\n            case when {{context.column_name}} is null\n                then 1\n            else 0\n            end\n        ), 0\n    )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2548084, "supported_languages": null}, "macro.re_data.re_data_metric_missing_count": {"unique_id": "macro.re_data.re_data_metric_missing_count", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/column_default.sql", "original_file_path": "macros/metrics/base/build_in/column_default.sql", "name": "re_data_metric_missing_count", "macro_sql": "{% macro re_data_metric_missing_count(context) %}\n    coalesce(\n        sum(\n            case \n            when {{context.column_name}} is null\n                then 1\n            when {{context.column_name}} = ''\n                then 1\n            else 0\n            end\n        ), 0\n    )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2553039, "supported_languages": null}, "macro.re_data.re_data_metric_nulls_percent": {"unique_id": "macro.re_data.re_data_metric_nulls_percent", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/column_default.sql", "original_file_path": "macros/metrics/base/build_in/column_default.sql", "name": "re_data_metric_nulls_percent", "macro_sql": "{% macro re_data_metric_nulls_percent(context) %}\n    {{ percentage_formula(re_data_metric_nulls_count(context), re_data_metric_row_count()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.percentage_formula", "macro.re_data.re_data_metric_nulls_count", "macro.re_data.re_data_metric_row_count"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2558818, "supported_languages": null}, "macro.re_data.re_data_metric_missing_percent": {"unique_id": "macro.re_data.re_data_metric_missing_percent", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/column_default.sql", "original_file_path": "macros/metrics/base/build_in/column_default.sql", "name": "re_data_metric_missing_percent", "macro_sql": "{% macro re_data_metric_missing_percent(context) %}\n    {{ percentage_formula(re_data_metric_missing_count(context), re_data_metric_row_count()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.percentage_formula", "macro.re_data.re_data_metric_missing_count", "macro.re_data.re_data_metric_row_count"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2564337, "supported_languages": null}, "macro.re_data.re_data_metric_regex_count": {"unique_id": "macro.re_data.re_data_metric_regex_count", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "re_data_metric_regex_count", "macro_sql": "{% macro re_data_metric_regex_count(column_name, pattern) %}\n    coalesce(\n        sum(\n            case when {{ regex_match_expression(column_name, pattern) }}\n                then 1\n            else 0\n            end\n        ), 0\n    )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.regex_match_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2605064, "supported_languages": null}, "macro.re_data.re_data_metric_match_regex": {"unique_id": "macro.re_data.re_data_metric_match_regex", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "re_data_metric_match_regex", "macro_sql": "{% macro re_data_metric_match_regex(context) %}\n    {{ re_data_metric_regex_count(context.column_name, context.config.regex) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.re_data_metric_regex_count"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2610364, "supported_languages": null}, "macro.re_data.re_data_metric_match_regex_percent": {"unique_id": "macro.re_data.re_data_metric_match_regex_percent", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "re_data_metric_match_regex_percent", "macro_sql": "{% macro re_data_metric_match_regex_percent(context) %}\n    {{ percentage_formula(re_data_metric_match_regex(context), re_data_metric_row_count()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.percentage_formula", "macro.re_data.re_data_metric_match_regex", "macro.re_data.re_data_metric_row_count"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2617552, "supported_languages": null}, "macro.re_data.re_data_metric_not_match_regex": {"unique_id": "macro.re_data.re_data_metric_not_match_regex", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "re_data_metric_not_match_regex", "macro_sql": "{% macro re_data_metric_not_match_regex(context) %}\n    {{ re_data_metric_row_count() }} - {{ re_data_metric_regex_count(context.column_name, context.config.regex) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.re_data_metric_row_count", "macro.re_data.re_data_metric_regex_count"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2624254, "supported_languages": null}, "macro.re_data.re_data_metric_not_match_regex_percent": {"unique_id": "macro.re_data.re_data_metric_not_match_regex_percent", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "re_data_metric_not_match_regex_percent", "macro_sql": "{% macro re_data_metric_not_match_regex_percent(context) %}\n    {{ percentage_formula(re_data_metric_not_match_regex(context), re_data_metric_row_count()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.percentage_formula", "macro.re_data.re_data_metric_not_match_regex", "macro.re_data.re_data_metric_row_count"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2630072, "supported_languages": null}, "macro.re_data.re_data_metric_distinct_values": {"unique_id": "macro.re_data.re_data_metric_distinct_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "re_data_metric_distinct_values", "macro_sql": "{% macro re_data_metric_distinct_values(context) %}\n    {{ distinct_values(context) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.distinct_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2634373, "supported_languages": null}, "macro.re_data.distinct_values": {"unique_id": "macro.re_data.distinct_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "distinct_values", "macro_sql": "{% macro distinct_values(context) %}\n    {{ adapter.dispatch('distinct_values', 're_data')(context) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.postgres__distinct_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2640162, "supported_languages": null}, "macro.re_data.default__distinct_values": {"unique_id": "macro.re_data.default__distinct_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "default__distinct_values", "macro_sql": "{% macro default__distinct_values(context) %}\n    coalesce(\n        count(distinct {{ context.column_name }} )\n    , 0)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2644207, "supported_languages": null}, "macro.re_data.postgres__distinct_values": {"unique_id": "macro.re_data.postgres__distinct_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "postgres__distinct_values", "macro_sql": "{% macro postgres__distinct_values(context) %}\n    {# /* In postgres, its faster to count distinct values in a column by selecting then counting in separate steps */ #}\n    with temp_table as (\n            select distinct {{ context.column_name }} from {{ context.table_name }}\n            where {{ in_time_window(context.time_filter) }}\n        )\n    select coalesce(count(*), 0) from temp_table\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.in_time_window"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2651162, "supported_languages": null}, "macro.re_data.re_data_metric_approx_distinct_values": {"unique_id": "macro.re_data.re_data_metric_approx_distinct_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "re_data_metric_approx_distinct_values", "macro_sql": "{% macro re_data_metric_approx_distinct_values(context) %}\n    {{ approx_distinct_values(context) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.approx_distinct_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2655506, "supported_languages": null}, "macro.re_data.approx_distinct_values": {"unique_id": "macro.re_data.approx_distinct_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "approx_distinct_values", "macro_sql": "{% macro approx_distinct_values(context) %}\n    {{ adapter.dispatch('approx_distinct_values', 're_data')(context) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__approx_distinct_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2661202, "supported_languages": null}, "macro.re_data.default__approx_distinct_values": {"unique_id": "macro.re_data.default__approx_distinct_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "default__approx_distinct_values", "macro_sql": "{% macro default__approx_distinct_values(context) %}\n    {# /* No approximate distinct count in postgres so we default to using a distinct count */ #}\n    {{ re_data_metric_distinct_values(context) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.re_data_metric_distinct_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2665527, "supported_languages": null}, "macro.re_data.redshift__approx_distinct_values": {"unique_id": "macro.re_data.redshift__approx_distinct_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "redshift__approx_distinct_values", "macro_sql": "{% macro redshift__approx_distinct_values(context) %}\n    approximate {{ re_data_metric_distinct_values(context.column_name) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.re_data_metric_distinct_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.266973, "supported_languages": null}, "macro.re_data.bigquery__approx_distinct_values": {"unique_id": "macro.re_data.bigquery__approx_distinct_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "bigquery__approx_distinct_values", "macro_sql": "{% macro bigquery__approx_distinct_values(context) %}\n    approx_count_distinct({{ context.column_name }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2673326, "supported_languages": null}, "macro.re_data.snowflake__approx_distinct_values": {"unique_id": "macro.re_data.snowflake__approx_distinct_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "snowflake__approx_distinct_values", "macro_sql": "{% macro snowflake__approx_distinct_values(context) %}\n    approx_count_distinct({{ context.column_name }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2676883, "supported_languages": null}, "macro.re_data.re_data_metric_duplicate_values": {"unique_id": "macro.re_data.re_data_metric_duplicate_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "re_data_metric_duplicate_values", "macro_sql": "{% macro re_data_metric_duplicate_values(context) %}\n        with temp_table as (\n            select {{ context.column_name }} from {{ context.table_name }}\n            where {{ in_time_window(context.time_filter) }}\n            group by {{ context.column_name }}\n            having count(1) > 1\n        )\n        select coalesce(count(*), 0) from temp_table\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.in_time_window"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2683907, "supported_languages": null}, "macro.re_data.re_data_metric_duplicate_rows": {"unique_id": "macro.re_data.re_data_metric_duplicate_rows", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "re_data_metric_duplicate_rows", "macro_sql": "{% macro re_data_metric_duplicate_rows(context) %}\n        with temp_table as (\n            select {{ context.column_name }}, count(1) as row_count from {{ context.table_name }}\n            where {{ in_time_window(context.time_filter) }}\n            group by {{ context.column_name }}\n            having count(1) > 1\n        )\n        select coalesce(sum(row_count), 0) from temp_table\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.in_time_window"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2691014, "supported_languages": null}, "macro.re_data.re_data_metric_unique_rows": {"unique_id": "macro.re_data.re_data_metric_unique_rows", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_column_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_column_metrics.sql", "name": "re_data_metric_unique_rows", "macro_sql": "{% macro re_data_metric_unique_rows(context) %}\n        with temp_table as (\n            select {{ context.column_name }}, count(1) as row_count from {{ context.table_name }}\n            where {{ in_time_window(context.time_filter) }}\n            group by {{ context.column_name }}\n            having count(1) = 1\n        )\n        select coalesce(sum(row_count), 0) from temp_table\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.in_time_window"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2698188, "supported_languages": null}, "macro.re_data.re_data_metric_distinct_table_rows": {"unique_id": "macro.re_data.re_data_metric_distinct_table_rows", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/optional_table_metrics.sql", "original_file_path": "macros/metrics/base/build_in/optional_table_metrics.sql", "name": "re_data_metric_distinct_table_rows", "macro_sql": "{% macro re_data_metric_distinct_table_rows(context) %}\n    with temp_table AS (\n            select distinct * from {{ context.table_name }}\n            where {{ in_time_window(context.time_filter) }}\n        )\n    select coalesce(count(*), 0) FROM temp_table\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.in_time_window"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2710812, "supported_languages": null}, "macro.re_data.re_data_metric_row_count": {"unique_id": "macro.re_data.re_data_metric_row_count", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/table_default.sql", "original_file_path": "macros/metrics/base/build_in/table_default.sql", "name": "re_data_metric_row_count", "macro_sql": "{% macro re_data_metric_row_count(context) %}\n    count(1)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2726817, "supported_languages": null}, "macro.re_data.re_data_metric_freshness": {"unique_id": "macro.re_data.re_data_metric_freshness", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/table_default.sql", "original_file_path": "macros/metrics/base/build_in/table_default.sql", "name": "re_data_metric_freshness", "macro_sql": "{% macro re_data_metric_freshness(context) %}\n    {{ freshness_expression(context.time_filter) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.freshness_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2731185, "supported_languages": null}, "macro.re_data.freshness_expression": {"unique_id": "macro.re_data.freshness_expression", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/table_default.sql", "original_file_path": "macros/metrics/base/build_in/table_default.sql", "name": "freshness_expression", "macro_sql": "{% macro freshness_expression(time_filter) %}\n    {# /* If time_filter is none, we are computing the metric globally. we set the value as null since a table without use of a time filter doesn't really have a freshness metric */ #}\n    {% if time_filter is none %}\n        cast(null as {{ numeric_type() }})\n    {% else %}\n        {{ adapter.dispatch('freshness_expression', 're_data')(time_filter) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.numeric_type", "macro.re_data.redshift__freshness_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2740602, "supported_languages": null}, "macro.re_data.default__freshness_expression": {"unique_id": "macro.re_data.default__freshness_expression", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/table_default.sql", "original_file_path": "macros/metrics/base/build_in/table_default.sql", "name": "default__freshness_expression", "macro_sql": "{% macro default__freshness_expression(time_filter) %}\n    EXTRACT(EPOCH FROM ({{time_window_end()}} - max({{time_filter}})))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.time_window_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.27454, "supported_languages": null}, "macro.re_data.bigquery__freshness_expression": {"unique_id": "macro.re_data.bigquery__freshness_expression", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/table_default.sql", "original_file_path": "macros/metrics/base/build_in/table_default.sql", "name": "bigquery__freshness_expression", "macro_sql": "{% macro bigquery__freshness_expression(time_filter) %}\n    TIMESTAMP_DIFF ( timestamp({{ time_window_end()}}), timestamp(max({{time_filter}})), SECOND)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.time_window_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.275, "supported_languages": null}, "macro.re_data.snowflake__freshness_expression": {"unique_id": "macro.re_data.snowflake__freshness_expression", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/table_default.sql", "original_file_path": "macros/metrics/base/build_in/table_default.sql", "name": "snowflake__freshness_expression", "macro_sql": "{% macro snowflake__freshness_expression(time_filter) %}\n    timediff(second, max({{time_filter}}), {{- time_window_end() -}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.time_window_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.275465, "supported_languages": null}, "macro.re_data.redshift__freshness_expression": {"unique_id": "macro.re_data.redshift__freshness_expression", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/metrics/base/build_in/table_default.sql", "original_file_path": "macros/metrics/base/build_in/table_default.sql", "name": "redshift__freshness_expression", "macro_sql": "{% macro redshift__freshness_expression(time_filter) %}\n    DATEDIFF(second, max({{time_filter}}), {{- time_window_end() -}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.time_window_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.275923, "supported_languages": null}, "macro.re_data.get_model_config": {"unique_id": "macro.re_data.get_model_config", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/config/get_model_config.sql", "original_file_path": "macros/config/get_model_config.sql", "name": "get_model_config", "macro_sql": "{% macro get_model_config(monitored) %}\n    {% set model = {} %}\n    {% do model.update({'name': re_data.row_value(monitored, 'name')}) %}\n    {% do model.update({'schema': re_data.row_value(monitored, 'schema')}) %}\n    {% do model.update({'database': re_data.row_value(monitored, 'database')}) %}\n    {% do model.update({'time_filter': re_data.row_value(monitored, 'time_filter')}) %}    \n    {% do model.update({'metrics': fromjson(re_data.row_value(monitored, 'metrics'))}) %}\n    {% do model.update({'model_name': model.get('database') + '.' + model.get('schema') + '.' + model.get('name')}) %}\n    {% do model.update({'table_name': full_table_name_values(model.get('name'), model.get('schema'), model.get('database'))}) %}\n\n    {% set columns_db = re_data.row_value(monitored, 'columns') %}\n\n    {% set column_list = fromjson(columns_db) if columns_db is not none else none %}\n    {% set columns_dict = re_data.dict_from_list(column_list) %}\n\n    {% do model.update({'columns_dict': columns_dict}) %}\n    {% do model.update({'columns_compute_all': columns_dict is none}) %}\n\n    {% set columns_query %}\n        select * from {{ ref('re_data_columns') }}\n        where name = '{{ model.name }}' and schema = '{{ model.schema }}' and database = '{{ model.database }}'\n    {% endset %}\n    {% set columns = run_query(columns_query) %}\n\n    {% set columns_info = {} %}\n    {% for col in columns %}\n        {% set column_name = re_data.row_value(col, 'column_name') %}\n        {% set data_type = re_data.get_column_type(col) %}\n        {% do columns_info.update({column_name: { 'data_type': data_type }}) %}\n    {% endfor %}\n\n    {% do model.update({'columns_info': columns_info}) %}\n    {% do model.update({'columns': columns}) %}\n\n    {{ return(model) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.row_value", "macro.re_data.full_table_name_values", "macro.re_data.dict_from_list", "macro.dbt.run_query", "macro.re_data.get_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2863483, "supported_languages": null}, "macro.re_data.should_compute_metric": {"unique_id": "macro.re_data.should_compute_metric", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/config/get_model_config.sql", "original_file_path": "macros/config/get_model_config.sql", "name": "should_compute_metric", "macro_sql": "{% macro should_compute_metric(model, column_name) %}\n    {{ return(model.columns_compute_all or model.columns_dict.get(column_name)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2870386, "supported_languages": null}, "macro.re_data.insert_list_to_table": {"unique_id": "macro.re_data.insert_list_to_table", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/store/insert_list_to_table.sql", "original_file_path": "macros/store/insert_list_to_table.sql", "name": "insert_list_to_table", "macro_sql": "{% macro insert_list_to_table(table, list, params, dtype=None,insert_size=100) %}\n\n    {% set single_insert_list = [] %}\n    {% for el in list %}\n        {% do single_insert_list.append(el) %}\n        {% set single_insert_list_size = single_insert_list | length %}\n        {% if single_insert_list_size == insert_size or loop.last %}\n\n            {% set insert_query %}\n                insert into {{ table }} ({%- for p in params %}{{p}}{% if not loop.last %}, {% endif %}{% endfor %}) values\n                {%- for row in single_insert_list -%}\n                    (\n                    {%- for p in params -%}\n                        {%- if row[p] is none -%}\n                            NULL\n                        {%- else -%}\n                            {%- if row[p] is string -%}\n                                {%- if dtype and p in dtype -%}\n                                  {% set cast_type = dtype[p] %}\n                                  cast ({{ re_data.quote_string(row[p]) }} as {{ cast_type }})\n                                {%- else %}\n                                  {{- re_data.quote_string(row[p]) -}}\n                                {%- endif -%}\n                            {%- elif row[p] is number -%}\n                                {{-row[p]-}}\n                            {%- else -%}\n                                {{- re_data.quote_string(tojson(row[p])) -}}\n                            {%- endif -%}\n                        {%- endif -%}\n                        {%- if not loop.last -%},{%- endif -%}\n                    {%- endfor -%}\n                    )\n                    {%- if not loop.last -%},{%- endif %}\n                {% endfor -%}\n            {% endset %}\n\n            {% do run_query(insert_query) %}\n            {% do single_insert_list.clear() %}\n        {% endif %}\n    {% endfor %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.quote_string", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.296617, "supported_languages": null}, "macro.re_data.get_tables": {"unique_id": "macro.re_data.get_tables", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/monitored_model_queries.sql", "original_file_path": "macros/meta/monitored_model_queries.sql", "name": "get_tables", "macro_sql": "{% macro get_tables() %}\n    select *\n    from {{ ref('re_data_selected') }}\n    order by name, schema, database, time_filter\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.2976909, "supported_languages": null}, "macro.re_data.get_schemas": {"unique_id": "macro.re_data.get_schemas", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/monitored_model_queries.sql", "original_file_path": "macros/meta/monitored_model_queries.sql", "name": "get_schemas", "macro_sql": "{% macro get_schemas() %}\n    select distinct schema, database\n    from {{ ref('re_data_selected') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.298106, "supported_languages": null}, "macro.re_data.pub_monitored_from_graph": {"unique_id": "macro.re_data.pub_monitored_from_graph", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/get_monitored.sql", "original_file_path": "macros/meta/get_monitored.sql", "name": "pub_monitored_from_graph", "macro_sql": "{% macro pub_monitored_from_graph() %}\n    {% set monitored = [] %}\n    {% set both = []%}\n    {% do both.extend(graph.nodes.values()) %}\n    {% do both.extend(graph.sources.values()) %}\n    {% set owners_config = re_data.get_owners_config() %}\n\n    {% set select_var = var('re_data:select') %}\n    {% set select_all = true %}\n\n    {% set selected_nodes = none %}\n    {% set selected_tags = none %}\n\n    {% if select_var is not none %}\n        {% set select_all = false %}\n        {% set selected_nodes = dict() %}\n        {% set selected_tags = dict() %}\n\n        {% for el in select_var %}\n            {% if el.startswith('tag:') %}\n                {% do selected_tags.update({el[4:]: True}) %}\n            {% else %}\n                {% do selected_nodes.update({el: True}) %}\n            {% endif %}\n        {% endfor %}\n    {% endif %}\n\n    {% for el in both %}\n        {% if el.resource_type in ['model', 'seed', 'source'] %}\n            {% if el.config.get('re_data_monitored') %}\n                {% set target_name = el.identifier or el.alias or el.name %}\n\n                {% if select_all %}\n                    {% set selected = true %}\n                {% else %}\n                    {% set selected_name = selected_nodes.get(target_name, false) %}\n                    {% set selected_tag = [] %}\n\n                    {% for tag in el.config.tags %}\n                        {% if selected_tags.get(tag, false) %}\n                            {% do selected_tag.append(true) %}\n                        {% endif %}\n                    {% endfor %}\n                    \n                    {% set selected = selected_name or (selected_tag | length > 0) %}\n                {% endif %}\n\n                {% set metrics_groups = el.config.get('re_data_metrics_groups', var('re_data:default_metrics')) %}\n                {% set additional_metrics = el.config.get('re_data_metrics', {}) %}\n\n                {% do monitored.append({\n                    'name': re_data.name_in_db(target_name),\n                    'schema': re_data.name_in_db(el.schema),\n                    'database': re_data.name_in_db(el.database),\n                    'time_filter': el.config.get('re_data_time_filter', none),\n                    'metrics_groups': metrics_groups,\n                    'additional_metrics': re_data.metrics_in_db(additional_metrics),\n                    'metrics': re_data.metrics_in_db(re_data.final_metrics(metrics_groups, additional_metrics)),\n                    'columns': re_data.columns_in_db(el.config.get('re_data_columns', none)),\n                    'anomaly_detector': el.config.get('re_data_anomaly_detector', var('re_data:anomaly_detector', {})),\n                    'owners': re_data.prepare_model_owners(el.config.get('re_data_owners', []), owners_config),\n                    'selected': selected\n                    })\n                %}\n            {% endif %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(monitored) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.get_owners_config", "macro.re_data.name_in_db", "macro.re_data.metrics_in_db", "macro.re_data.final_metrics", "macro.re_data.columns_in_db", "macro.re_data.prepare_model_owners"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3178506, "supported_languages": null}, "macro.re_data.get_owners_config": {"unique_id": "macro.re_data.get_owners_config", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/get_monitored.sql", "original_file_path": "macros/meta/get_monitored.sql", "name": "get_owners_config", "macro_sql": "{% macro get_owners_config() %}\n    {% set owners_config = var('re_data:owners_config', {}) %}\n    {{ return (owners_config) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3186555, "supported_languages": null}, "macro.re_data.prepare_model_owners": {"unique_id": "macro.re_data.prepare_model_owners", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/get_monitored.sql", "original_file_path": "macros/meta/get_monitored.sql", "name": "prepare_model_owners", "macro_sql": "{% macro prepare_model_owners(re_data_owners, owners_config) %}\n    {% set owners = {} %}\n    {% set seen_identifiers = {} %}\n    {% for owner in re_data_owners if owners_config.get(owner) %}\n        {% set members = owners_config.get(owner) %}\n        {% for member in members %}\n            {% set identifier = member.get('identifier') %}\n            {% if identifier not in seen_identifiers %}\n            {% do seen_identifiers.update({identifier: true }) %}\n            {% do owners.update({\n                identifier: {\n                    'notify_channel': member.get('type'),\n                    'owner': owner,\n                    'name': member.get('name') \n                } \n            }) %}\n            {% endif %}\n        {% endfor %}\n    {% endfor %}\n    {{ return (owners) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3216543, "supported_languages": null}, "macro.re_data.get_monitored_columns": {"unique_id": "macro.re_data.get_monitored_columns", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/information_schema.sql", "original_file_path": "macros/meta/information_schema.sql", "name": "get_monitored_columns", "macro_sql": "{% macro get_monitored_columns(schema, database) %}\n    {{ adapter.dispatch('get_monitored_columns', 're_data')(schema, database) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__get_monitored_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3233862, "supported_languages": null}, "macro.re_data.default__get_monitored_columns": {"unique_id": "macro.re_data.default__get_monitored_columns", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/information_schema.sql", "original_file_path": "macros/meta/information_schema.sql", "name": "default__get_monitored_columns", "macro_sql": "{% macro default__get_monitored_columns(table_schema, db_name) %}\n    {% set relation = api.Relation.create(database=db_name, schema=table_schema) %}\n    select\n        table_name,\n        table_schema,\n        table_catalog,\n        column_name,\n        data_type,\n        is_nullable\n    from\n        {{ relation.information_schema('COLUMNS') }}\n    where\n        table_schema = '{{ table_schema }}'\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.324276, "supported_languages": null}, "macro.re_data.redshift__get_monitored_columns": {"unique_id": "macro.re_data.redshift__get_monitored_columns", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/information_schema.sql", "original_file_path": "macros/meta/information_schema.sql", "name": "redshift__get_monitored_columns", "macro_sql": "{% macro redshift__get_monitored_columns(table_schema, db_name) %}\n    select\n        table_name,\n        table_schema,\n        table_catalog,\n        column_name,\n        data_type,\n        is_nullable\n    from\n        svv_columns\n    where\n        table_schema = '{{ table_schema }}'\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3247, "supported_languages": null}, "macro.re_data.save_monitored": {"unique_id": "macro.re_data.save_monitored", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/save_monitored.sql", "original_file_path": "macros/meta/save_monitored.sql", "name": "save_monitored", "macro_sql": "{% macro save_monitored(monitored_path) %}\n\n    {% set monitored_query %}\n        select\n            {{ full_table_name('name', 'schema', 'database') }} as {{ re_data.quote_column('model') }},\n             time_filter as {{ re_data.quote_column('time_filter') }},\n            metrics as {{ re_data.quote_column('metrics') }},\n            columns as {{ re_data.quote_column('columns') }},\n            anomaly_detector as {{ re_data.quote_column('anomaly_detector') }},\n            owners as {{ re_data.quote_column('owners') }}\n        from {{ ref('re_data_selected') }}\n    {% endset %}\n    {% set query_result = run_query(monitored_query) %}\n    {% set monitored_file_path = monitored_path or 'target/re_data/monitored.json' %}\n    {% do query_result.to_json(monitored_file_path) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.full_table_name", "macro.re_data.quote_column", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3282135, "supported_languages": null}, "macro.re_data.full_table_name": {"unique_id": "macro.re_data.full_table_name", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/table_name.sql", "original_file_path": "macros/meta/table_name.sql", "name": "full_table_name", "macro_sql": "{% macro full_table_name(table_name, table_schema, table_catalog) %}\n    {{ adapter.dispatch('full_table_name', 're_data')(table_name, table_schema, table_catalog) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__full_table_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3305101, "supported_languages": null}, "macro.re_data.default__full_table_name": {"unique_id": "macro.re_data.default__full_table_name", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/table_name.sql", "original_file_path": "macros/meta/table_name.sql", "name": "default__full_table_name", "macro_sql": "{% macro default__full_table_name(table_name, table_schema, table_catalog) %}\n    '\"' || {{table_catalog}} || '\"' || '.' || '\"' || {{table_schema}} || '\"' || '.' || '\"' || {{table_name}} || '\"'\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3310378, "supported_languages": null}, "macro.re_data.bigquery__full_table_name": {"unique_id": "macro.re_data.bigquery__full_table_name", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/table_name.sql", "original_file_path": "macros/meta/table_name.sql", "name": "bigquery__full_table_name", "macro_sql": "{% macro bigquery__full_table_name(table_name, table_schema, table_catalog) %}\n    '`' || {{table_catalog}} || '`' || '.' || '`' || {{table_schema}} || '`' || '.' || '`' || {{table_name}} || '`'\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3315458, "supported_languages": null}, "macro.re_data.full_table_name_values": {"unique_id": "macro.re_data.full_table_name_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/table_name.sql", "original_file_path": "macros/meta/table_name.sql", "name": "full_table_name_values", "macro_sql": "{% macro full_table_name_values(table_name, table_schema, table_catalog) %}\n    {% set result = adapter.dispatch('full_table_name_values', 're_data')(table_name, table_schema, table_catalog) %}\n    {{ return (result.strip()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__full_table_name_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3324754, "supported_languages": null}, "macro.re_data.default__full_table_name_values": {"unique_id": "macro.re_data.default__full_table_name_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/table_name.sql", "original_file_path": "macros/meta/table_name.sql", "name": "default__full_table_name_values", "macro_sql": "{% macro default__full_table_name_values(table_name, table_schema, table_catalog) %}\n    \"{{table_catalog}}\".\"{{table_schema}}\".\"{{table_name}}\"\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3329918, "supported_languages": null}, "macro.re_data.bigquery__full_table_name_values": {"unique_id": "macro.re_data.bigquery__full_table_name_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/table_name.sql", "original_file_path": "macros/meta/table_name.sql", "name": "bigquery__full_table_name_values", "macro_sql": "{% macro bigquery__full_table_name_values(table_name, table_schema, table_catalog) %}\n    `{{table_catalog}}`.`{{table_schema}}`.`{{table_name}}`\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3334932, "supported_languages": null}, "macro.re_data.snowflake__full_table_name_values": {"unique_id": "macro.re_data.snowflake__full_table_name_values", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/meta/table_name.sql", "original_file_path": "macros/meta/table_name.sql", "name": "snowflake__full_table_name_values", "macro_sql": "{% macro snowflake__full_table_name_values(table_name, table_schema, table_catalog) %}\n    \"{{table_catalog|upper}}\".\"{{table_schema|upper}}\".\"{{table_name|upper}}\"\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.334113, "supported_languages": null}, "macro.re_data.save_test_history": {"unique_id": "macro.re_data.save_test_history", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/run_end/save_results_history.sql", "original_file_path": "macros/run_end/save_results_history.sql", "name": "save_test_history", "macro_sql": "{% macro save_test_history(results) -%}\n\n{{ adapter.dispatch('save_test_history_impl', 're_data') (results) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__save_test_history_impl"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.343676, "supported_languages": null}, "macro.re_data.default__save_test_history_impl": {"unique_id": "macro.re_data.default__save_test_history_impl", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/run_end/save_results_history.sql", "original_file_path": "macros/run_end/save_results_history.sql", "name": "default__save_test_history_impl", "macro_sql": "{% macro default__save_test_history_impl(results) %}\n    -- depends_on: {{ ref('re_data_test_history') }}\n    {% set command = flags.WHICH %}\n    {% if execute and results and command in ('test', 'build') %}\n        {% set tests = [] %}\n        {% for el in results %}\n            {% if el.node.resource_type.value == 'test' %}\n                {% do tests.append(re_data.test_data_dict(el)) %}\n            {% endif %}\n        {% endfor %}\n\n        {% if tests %}\n            {% do re_data.insert_list_to_table(\n                ref('re_data_test_history'),\n                tests,\n                ['table_name', 'column_name', 'test_name', 'status', 'execution_time', 'message', 'failures_count', 'failures_json', 'failures_table', 'severity', 'compiled_sql', 'run_at'],\n                { 'run_at': timestamp_type() }\n            ) %}\n        {% endif %}\n\n    {% endif %}\n    {{ return ('') }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.test_data_dict", "macro.re_data.insert_list_to_table", "macro.re_data.timestamp_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3470874, "supported_languages": null}, "macro.re_data.test_data_dict": {"unique_id": "macro.re_data.test_data_dict", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/run_end/save_results_history.sql", "original_file_path": "macros/run_end/save_results_history.sql", "name": "test_data_dict", "macro_sql": "{% macro test_data_dict(el) %}\n\n    {% set run_started_at_str = run_started_at.strftime('%Y-%m-%d %H:%M:%S') %}\n\n    {% if el.node.to_dict().get('test_metadata') %}\n        {% set any_refs = modules.re.findall(\"ref\\(\\'(?P<name>.*)\\'\\)\", el.node.test_metadata.kwargs['model']) %}\n        {% set any_source = modules.re.findall(\"source\\(\\'(?P<one>.*)\\'\\,\\s+\\'(?P<two>.*)\\'\\)\", el.node.test_metadata.kwargs['model']) %}\n\n        {% if any_refs %}\n            {% set name = any_refs[0] %}\n            {% set node_name = re_data.priv_full_name_from_depends(el.node, name) %}\n            {% set schema = graph.nodes.get(node_name)['schema'] %}\n            {% set database = graph.nodes.get(node_name)['database'] %}\n            {% set table_name = (database + '.' + schema + '.' + name) | lower %} \n            \n        {% elif any_source %}\n            {% set package_name = any_source[0][0] %}\n            {% set name = any_source[0][1] %}\n            {% set node_name = re_data.priv_full_name_from_depends(el.node, name) %}\n            {% set schema = graph.sources.get(node_name)['schema'] %}\n            {% set database = graph.sources.get(node_name)['database'] %}\n            {% set table_name = (database + '.' + schema + '.' + name) | lower %}\n        {% else %}\n            {% set table_name = none %}\n        {% endif %}\n    {% else %}\n        {% set table_name = none %}\n    {% endif %}\n\n    {% if var.has_var('re_data:query_test_failures') %}\n        {% set query_failures = var('re_data:query_test_failures') %}\n    {% else %}\n        {% set query_failures = true %}\n    {% endif %}\n\n    {% if el.failures and el.failures > 0 and el.node.relation_name and query_failures %}\n        {% if var.has_var('re_data:test_history_failures_limit') %}\n            {% set limit_count = var('re_data:test_history_failures_limit')%}\n        {% else %}\n            {% set limit_count = 10 %}\n        {% endif %}\n\n        {% set failures_query %}\n            select * from {{ el.node.relation_name}} limit {{ limit_count }}\n        {% endset %}\n        {% set failures_list = re_data.agate_to_list(run_query(failures_query)) %}\n    {% endif %}\n\n    {% set failures_json = none %}\n\n    {{ return ({\n        'table_name': table_name,\n        'column_name': el.node.column_name or none,\n        'test_name': el.node.name,\n        'status': el.status.name,\n        'execution_time': el.execution_time,\n        'message': el.message,\n        'failures_count': el.failures,\n        'failures_json': '' ~ failures_list,\n        'failures_table': el.node.relation_name or none,\n        'severity': el.node.config.severity,\n        'compiled_sql': el.node.compiled_sql or none,\n        'run_at': run_started_at_str,\n        })\n    }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.priv_full_name_from_depends", "macro.re_data.agate_to_list", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3588085, "supported_languages": null}, "macro.re_data.priv_full_name_from_depends": {"unique_id": "macro.re_data.priv_full_name_from_depends", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/run_end/save_results_history.sql", "original_file_path": "macros/run_end/save_results_history.sql", "name": "priv_full_name_from_depends", "macro_sql": "{% macro priv_full_name_from_depends(node, name) %}\n\n    {% for full_name in node.depends_on.nodes %}\n        {% set node_name = full_name.split('.')[-1] %}\n        {% if node_name == name %}\n            {{ return(full_name) }}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(none) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3603253, "supported_languages": null}, "macro.re_data.postgres__escape_seq_for_json": {"unique_id": "macro.re_data.postgres__escape_seq_for_json", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/postgres/escape.sql", "original_file_path": "macros/db/postgres/escape.sql", "name": "postgres__escape_seq_for_json", "macro_sql": "{% macro postgres__escape_seq_for_json(chr) %}'\\{{chr}}'{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3612993, "supported_languages": null}, "macro.re_data.postgres__quote_new_line": {"unique_id": "macro.re_data.postgres__quote_new_line", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/postgres/quote_string.sql", "original_file_path": "macros/db/postgres/quote_string.sql", "name": "postgres__quote_new_line", "macro_sql": "{%- macro postgres__quote_new_line() %}'\\\\n'{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3621368, "supported_languages": null}, "macro.re_data.snowflake__name_in_db": {"unique_id": "macro.re_data.snowflake__name_in_db", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/snowflake/identifier_mapping.sql", "original_file_path": "macros/db/snowflake/identifier_mapping.sql", "name": "snowflake__name_in_db", "macro_sql": "{% macro snowflake__name_in_db(name) %}\n    {% if name %}\n        {{ return (name.upper()) }}\n    {% else %}\n        {{ return (name) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3636572, "supported_languages": null}, "macro.re_data.bigquery__quote_column_name": {"unique_id": "macro.re_data.bigquery__quote_column_name", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/bigquery/quote_column_name.sql", "original_file_path": "macros/db/bigquery/quote_column_name.sql", "name": "bigquery__quote_column_name", "macro_sql": "{% macro bigquery__quote_column_name(column_name) %}\n    {% set quoted_col_name = '`' + column_name + '`' %}\n    {{ return(quoted_col_name) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3649652, "supported_languages": null}, "macro.re_data.bigquery__quote_string": {"unique_id": "macro.re_data.bigquery__quote_string", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/bigquery/quote_string.sql", "original_file_path": "macros/db/bigquery/quote_string.sql", "name": "bigquery__quote_string", "macro_sql": "{%- macro bigquery__quote_string(str) %}\n    \"\"\"{{ str }}\"\"\"\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3659115, "supported_languages": null}, "macro.re_data.bigquery__split_and_return_nth_value": {"unique_id": "macro.re_data.bigquery__split_and_return_nth_value", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/bigquery/split_and_return_nth_value.sql", "original_file_path": "macros/db/bigquery/split_and_return_nth_value.sql", "name": "bigquery__split_and_return_nth_value", "macro_sql": "{% macro bigquery__split_and_return_nth_value(column_name, delimiter, ordinal) %}\n    split({{ re_data.clean_blacklist(column_name, ['\"', '`'], '') }}, '{{ delimiter }}')[ORDINAL( {{ ordinal }} )]\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.clean_blacklist"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3674254, "supported_languages": null}, "macro.re_data.escape_seq_for_json": {"unique_id": "macro.re_data.escape_seq_for_json", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/core/escape.sql", "original_file_path": "macros/db/core/escape.sql", "name": "escape_seq_for_json", "macro_sql": "{% macro escape_seq_for_json(chr) %}{{adapter.dispatch('escape_seq_for_json', 're_data')(chr)}}{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__escape_seq_for_json"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.368636, "supported_languages": null}, "macro.re_data.default__escape_seq_for_json": {"unique_id": "macro.re_data.default__escape_seq_for_json", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/core/escape.sql", "original_file_path": "macros/db/core/escape.sql", "name": "default__escape_seq_for_json", "macro_sql": "{% macro default__escape_seq_for_json(chr) %}'\\\\\\{{chr}}'{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.368999, "supported_languages": null}, "macro.re_data.name_in_db": {"unique_id": "macro.re_data.name_in_db", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/core/identifier_mapping.sql", "original_file_path": "macros/db/core/identifier_mapping.sql", "name": "name_in_db", "macro_sql": "{% macro name_in_db(name) %}\n    {% set translated = adapter.dispatch('name_in_db', 're_data')(name) %}\n    {{ return(translated) }}\n    \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__name_in_db"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3705113, "supported_languages": null}, "macro.re_data.default__name_in_db": {"unique_id": "macro.re_data.default__name_in_db", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/core/identifier_mapping.sql", "original_file_path": "macros/db/core/identifier_mapping.sql", "name": "default__name_in_db", "macro_sql": "{% macro default__name_in_db(name) %}\n    {{ return(name) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.370961, "supported_languages": null}, "macro.re_data.quote_column_name": {"unique_id": "macro.re_data.quote_column_name", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/core/quote_column_name.sql", "original_file_path": "macros/db/core/quote_column_name.sql", "name": "quote_column_name", "macro_sql": "{% macro quote_column_name(column_name) %}\n    {% set col_name = adapter.dispatch('quote_column_name', 're_data')(column_name) %}\n    {{ return(col_name) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__quote_column_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3725038, "supported_languages": null}, "macro.re_data.default__quote_column_name": {"unique_id": "macro.re_data.default__quote_column_name", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/core/quote_column_name.sql", "original_file_path": "macros/db/core/quote_column_name.sql", "name": "default__quote_column_name", "macro_sql": "{% macro default__quote_column_name(column_name) %}\n    {% set quoted_col_name = '\"' + column_name + '\"' %}\n    {{ return(quoted_col_name) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3731954, "supported_languages": null}, "macro.re_data.quote_string": {"unique_id": "macro.re_data.quote_string", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/core/quote_string.sql", "original_file_path": "macros/db/core/quote_string.sql", "name": "quote_string", "macro_sql": "{%- macro quote_string(str) %}\n    {{ adapter.dispatch('quote_string', 're_data')(str) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__quote_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.374633, "supported_languages": null}, "macro.re_data.default__quote_string": {"unique_id": "macro.re_data.default__quote_string", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/core/quote_string.sql", "original_file_path": "macros/db/core/quote_string.sql", "name": "default__quote_string", "macro_sql": "\n\n{%- macro default__quote_string(str) %}\n    $${{ str }}$$\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3750086, "supported_languages": null}, "macro.re_data.quote_new_line": {"unique_id": "macro.re_data.quote_new_line", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/core/quote_string.sql", "original_file_path": "macros/db/core/quote_string.sql", "name": "quote_new_line", "macro_sql": "\n\n\n{%- macro quote_new_line() %}{{ adapter.dispatch('quote_new_line', 're_data')() }}{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__quote_new_line"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3755012, "supported_languages": null}, "macro.re_data.default__quote_new_line": {"unique_id": "macro.re_data.default__quote_new_line", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/core/quote_string.sql", "original_file_path": "macros/db/core/quote_string.sql", "name": "default__quote_new_line", "macro_sql": "\n\n{%- macro default__quote_new_line() %}'\\134\\134n'{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3757644, "supported_languages": null}, "macro.re_data.split_and_return_nth_value": {"unique_id": "macro.re_data.split_and_return_nth_value", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/core/split_and_return_nth_value.sql", "original_file_path": "macros/db/core/split_and_return_nth_value.sql", "name": "split_and_return_nth_value", "macro_sql": "{% macro split_and_return_nth_value(column_name, delimiter, ordinal) -%}\n    {{ adapter.dispatch('split_and_return_nth_value', 're_data')(column_name, delimiter, ordinal) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__split_and_return_nth_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.377234, "supported_languages": null}, "macro.re_data.default__split_and_return_nth_value": {"unique_id": "macro.re_data.default__split_and_return_nth_value", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/core/split_and_return_nth_value.sql", "original_file_path": "macros/db/core/split_and_return_nth_value.sql", "name": "default__split_and_return_nth_value", "macro_sql": "{% macro default__split_and_return_nth_value(column_name, delimiter, ordinal) -%}\n    split_part({{ re_data.clean_blacklist(column_name, ['\"', '`'], '') }}, '{{ delimiter }}', {{ ordinal }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.clean_blacklist"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3781102, "supported_languages": null}, "macro.re_data.redshift__escape_seq_for_json": {"unique_id": "macro.re_data.redshift__escape_seq_for_json", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/redshift/escape.sql", "original_file_path": "macros/db/redshift/escape.sql", "name": "redshift__escape_seq_for_json", "macro_sql": "{% macro redshift__escape_seq_for_json(chr) %}'\\\\\\{{chr}}'{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3790624, "supported_languages": null}, "macro.re_data.redshift__quote_new_line": {"unique_id": "macro.re_data.redshift__quote_new_line", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/db/redshift/quote_string.sql", "original_file_path": "macros/db/redshift/quote_string.sql", "name": "redshift__quote_new_line", "macro_sql": "{%- macro redshift__quote_new_line() %}'\\134\\134n'{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3798695, "supported_languages": null}, "macro.re_data.comma_delimited_list": {"unique_id": "macro.re_data.comma_delimited_list", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/comma_delimited_list.sql", "original_file_path": "macros/utils/comma_delimited_list.sql", "name": "comma_delimited_list", "macro_sql": "{% macro comma_delimited_list(args) %}\n    {%- for arg in args %} \n        {{- arg -}} {{- \", \" if not loop.last else \"\" -}}\n    {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3812666, "supported_languages": null}, "macro.re_data.generate_depends": {"unique_id": "macro.re_data.generate_depends", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/depends_macro.sql", "original_file_path": "macros/utils/depends_macro.sql", "name": "generate_depends", "macro_sql": "{% macro generate_depends(used_tables) %}\n    {% for t in used_tables %}\n        -- depends_on: {{ ref(t) }}\n    {% endfor %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3825858, "supported_languages": null}, "macro.re_data.regex_match_expression": {"unique_id": "macro.re_data.regex_match_expression", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/regular_expression.sql", "original_file_path": "macros/utils/regular_expression.sql", "name": "regex_match_expression", "macro_sql": "{% macro regex_match_expression(column_name, pattern) %}\n    {{ adapter.dispatch('regex_match_expression', 're_data')(column_name, pattern) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__regex_match_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3842998, "supported_languages": null}, "macro.re_data.default__regex_match_expression": {"unique_id": "macro.re_data.default__regex_match_expression", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/regular_expression.sql", "original_file_path": "macros/utils/regular_expression.sql", "name": "default__regex_match_expression", "macro_sql": "{% macro default__regex_match_expression(column_name, pattern) %}\n    ({{column_name}} ~ '{{pattern}}')\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.384751, "supported_languages": null}, "macro.re_data.bigquery__regex_match_expression": {"unique_id": "macro.re_data.bigquery__regex_match_expression", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/regular_expression.sql", "original_file_path": "macros/utils/regular_expression.sql", "name": "bigquery__regex_match_expression", "macro_sql": "{% macro bigquery__regex_match_expression(column_name, pattern) %}\n    regexp_contains({{column_name}}, r'{{pattern}}')\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3851678, "supported_languages": null}, "macro.re_data.snowflake__regex_match_expression": {"unique_id": "macro.re_data.snowflake__regex_match_expression", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/regular_expression.sql", "original_file_path": "macros/utils/regular_expression.sql", "name": "snowflake__regex_match_expression", "macro_sql": "{% macro snowflake__regex_match_expression(column_name, pattern) %}\n    regexp_like({{column_name | upper}}, '{{pattern}}')\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3856218, "supported_languages": null}, "macro.re_data.get_column_type": {"unique_id": "macro.re_data.get_column_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/column_types.sql", "original_file_path": "macros/utils/column_types.sql", "name": "get_column_type", "macro_sql": "{% macro get_column_type(column) %}\n    {% set result = adapter.dispatch('get_column_type', 're_data')(column) %}\n    {{ return(result) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__get_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3890448, "supported_languages": null}, "macro.re_data.default__get_column_type": {"unique_id": "macro.re_data.default__get_column_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/column_types.sql", "original_file_path": "macros/utils/column_types.sql", "name": "default__get_column_type", "macro_sql": "{% macro default__get_column_type(column) %}\n    \n    {% if column.data_type in [\n        'character varying',\n        'varchar',\n        'character',\n        'char',\n        'text'\n    ] %}\n        {{ return('text') }}\n\n    {% elif column.data_type in [\n            'smallint',\n            'integer',\n            'bigint',\n            'decimal',\n            'numeric',\n            'real',\n            'double precision',\n            'enum',\n        ] %}\n        {{ return('numeric') }}\n\n    {% else %}\n        {{ return('unknown') }}\n\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3908966, "supported_languages": null}, "macro.re_data.snowflake__get_column_type": {"unique_id": "macro.re_data.snowflake__get_column_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/column_types.sql", "original_file_path": "macros/utils/column_types.sql", "name": "snowflake__get_column_type", "macro_sql": "{% macro snowflake__get_column_type(column) %}\n\n    {% if column.DATA_TYPE in [\n        'VARCHAR',\n        'CHAR',\n        'CHARACTER',\n        'STRING',\n        'TEXT'\n    ] %}\n\n        {{ return('text') }}\n\n    {% elif column.DATA_TYPE in [\n            'NUMBER',\n            'DECIMAL',\n            'NUMERIC',\n            'INT',\n            'INTEGER',\n            'BIGINT',\n            'SMALLINT',\n            'TINYINT',\n            'BYTEINT',\n            'FLOAT',\n            'FLOAT4',\n            'FLOAT8',\n            'DOUBLE',\n            'DOUBLE PRECISION',\n            'REAL',\n    ] %}\n\n        {{ return('numeric') }}\n\n    {% else %}\n\n        {{ return('unknown') }}\n\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3929777, "supported_languages": null}, "macro.re_data.bigquery__get_column_type": {"unique_id": "macro.re_data.bigquery__get_column_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/column_types.sql", "original_file_path": "macros/utils/column_types.sql", "name": "bigquery__get_column_type", "macro_sql": "{% macro bigquery__get_column_type(column) %}\n    \n    {% if column.data_type in [\n        'STRING'\n    ] %}\n\n        {{ return('text') }}\n\n    {% elif column.data_type in [\n        \"INT64\", \"NUMERIC\", \"BIGNUMERIC\", \"FLOAT64\", \"INTEGER\"]\n    %}\n\n        {{ return('numeric') }}\n\n    {% else %}\n    \n        {{ return('unknown') }}\n\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.394413, "supported_languages": null}, "macro.re_data.columns_in_db": {"unique_id": "macro.re_data.columns_in_db", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/monitored_config.sql", "original_file_path": "macros/utils/monitored_config.sql", "name": "columns_in_db", "macro_sql": "{% macro columns_in_db(columns) %}\n    {% set translated = [] %}\n    {% if columns is none %}\n        {{ return (none) }}\n    {% endif %}\n    {% for col in columns %}\n        {% do translated.append(re_data.name_in_db(col))%}\n    {% endfor %}\n    {{ return (translated) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.name_in_db"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3976645, "supported_languages": null}, "macro.re_data.metrics_in_db": {"unique_id": "macro.re_data.metrics_in_db", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/monitored_config.sql", "original_file_path": "macros/utils/monitored_config.sql", "name": "metrics_in_db", "macro_sql": "{% macro metrics_in_db(metrics) %}\n    {% set translated = metrics %}\n    {% set column_metrics = {} %}\n    {% for col in metrics.column %}\n        {% do column_metrics.update({re_data.name_in_db(col): metrics.column[col]}) %}\n    {% endfor %}\n    {% if column_metrics %}\n        {% do metrics.update({'column': column_metrics}) %}\n    {% endif %}\n    {{ return (metrics) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.name_in_db"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.3995929, "supported_languages": null}, "macro.re_data.final_metrics": {"unique_id": "macro.re_data.final_metrics", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/monitored_config.sql", "original_file_path": "macros/utils/monitored_config.sql", "name": "final_metrics", "macro_sql": "{% macro final_metrics(metrics_groups, additional_metrics) %}\n    {% set final_metrics_dict = dict([('group', {}), ('additional', {})]) %}\n    {% set all_metrics_groups = var('re_data:metrics_groups')%}\n\n    {% for group in metrics_groups %}\n        {% set value = all_metrics_groups.get(group) %}\n        {% do final_metrics_dict['group'].update(value) %}\n    {% endfor %}\n\n    {% do final_metrics_dict['additional'].update(additional_metrics) %}\n    {{ return (final_metrics_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4016736, "supported_languages": null}, "macro.re_data.is_list": {"unique_id": "macro.re_data.is_list", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/is_list.sql", "original_file_path": "macros/utils/is_list.sql", "name": "is_list", "macro_sql": "{% macro is_list(obj) %}\n    {% if not obj %}\n        {{ return (False) }}\n    {% endif %}\n    {% set check = obj is iterable and (obj is not string and obj is not mapping) %}\n    {{ return (check) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4034655, "supported_languages": null}, "macro.re_data.bool_to_string": {"unique_id": "macro.re_data.bool_to_string", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/bool_to_string.sql", "original_file_path": "macros/utils/bool_to_string.sql", "name": "bool_to_string", "macro_sql": "{% macro bool_to_string(column) %}\n    (\n    case when {{ column }} = true then 'true'\n         when {{ column }} = false then 'false'\n    end\n    ) as {{ column }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4045374, "supported_languages": null}, "macro.re_data.comparison_text": {"unique_id": "macro.re_data.comparison_text", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/comparison_text.sql", "original_file_path": "macros/utils/comparison_text.sql", "name": "comparison_text", "macro_sql": "{% macro comparison_text(a, b) %}\n    case when {{a}} > {{b}} then 'greater than' \n    when {{a}} = {{b}} then 'equal to'\n    else 'less than' end\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.405667, "supported_languages": null}, "macro.re_data.print_list": {"unique_id": "macro.re_data.print_list", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/for_loops.sql", "original_file_path": "macros/utils/for_loops.sql", "name": "print_list", "macro_sql": "{% macro print_list(l) %}\n    {% for el in l %}{{el}}{% if not loop.last %},{% endif %}{% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.407051, "supported_languages": null}, "macro.re_data.time_window_start": {"unique_id": "macro.re_data.time_window_start", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "time_window_start", "macro_sql": "{% macro time_window_start() %}\n    cast('{{- var('re_data:time_window_start') -}}' as timestamp) \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4117055, "supported_languages": null}, "macro.re_data.time_window_end": {"unique_id": "macro.re_data.time_window_end", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "time_window_end", "macro_sql": "{% macro time_window_end() %}\n    cast('{{- var('re_data:time_window_end') -}}' as timestamp)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4121041, "supported_languages": null}, "macro.re_data.anamaly_detection_time_window_start": {"unique_id": "macro.re_data.anamaly_detection_time_window_start", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "anamaly_detection_time_window_start", "macro_sql": "{% macro anamaly_detection_time_window_start() %}\n   {{ adapter.dispatch('anamaly_detection_time_window_start', 're_data')() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__anamaly_detection_time_window_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4125855, "supported_languages": null}, "macro.re_data.default__anamaly_detection_time_window_start": {"unique_id": "macro.re_data.default__anamaly_detection_time_window_start", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "default__anamaly_detection_time_window_start", "macro_sql": "{% macro default__anamaly_detection_time_window_start() %}\n    {{ time_window_start() }} - interval '{{var('re_data:anomaly_detection_look_back_days')}} days'\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.time_window_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4130607, "supported_languages": null}, "macro.re_data.bigquery__anamaly_detection_time_window_start": {"unique_id": "macro.re_data.bigquery__anamaly_detection_time_window_start", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "bigquery__anamaly_detection_time_window_start", "macro_sql": "{% macro bigquery__anamaly_detection_time_window_start() %}\n    DATE_ADD({{ time_window_start() }}, INTERVAL -{{var('re_data:anomaly_detection_look_back_days')}} DAY)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.time_window_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4135292, "supported_languages": null}, "macro.re_data.snowflake__anamaly_detection_time_window_start": {"unique_id": "macro.re_data.snowflake__anamaly_detection_time_window_start", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "snowflake__anamaly_detection_time_window_start", "macro_sql": "{% macro snowflake__anamaly_detection_time_window_start() %}\n    DATEADD('DAY', -{{-var('re_data:anomaly_detection_look_back_days')-}}, {{ time_window_start() }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.time_window_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.414021, "supported_languages": null}, "macro.re_data.interval_length_sec": {"unique_id": "macro.re_data.interval_length_sec", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "interval_length_sec", "macro_sql": "{% macro interval_length_sec(start_timestamp, end_timestamp) %}\n    {{ adapter.dispatch('interval_length_sec', 're_data')(start_timestamp, end_timestamp) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__interval_length_sec"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4146852, "supported_languages": null}, "macro.re_data.default__interval_length_sec": {"unique_id": "macro.re_data.default__interval_length_sec", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "default__interval_length_sec", "macro_sql": "{% macro default__interval_length_sec(start_timestamp, end_timestamp) %}\n   EXTRACT(EPOCH FROM ({{ end_timestamp }} - {{ start_timestamp }} ))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4153433, "supported_languages": null}, "macro.re_data.bigquery__interval_length_sec": {"unique_id": "macro.re_data.bigquery__interval_length_sec", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "bigquery__interval_length_sec", "macro_sql": "{% macro bigquery__interval_length_sec(start_timestamp, end_timestamp) %}\n    TIMESTAMP_DIFF ({{ end_timestamp }}, {{ start_timestamp }}, SECOND)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4157832, "supported_languages": null}, "macro.re_data.snowflake__interval_length_sec": {"unique_id": "macro.re_data.snowflake__interval_length_sec", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "snowflake__interval_length_sec", "macro_sql": "{% macro snowflake__interval_length_sec(start_timestamp, end_timestamp) %}\n   timediff(second, {{ start_timestamp }}, {{ end_timestamp }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4162056, "supported_languages": null}, "macro.re_data.redshift__interval_length_sec": {"unique_id": "macro.re_data.redshift__interval_length_sec", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "redshift__interval_length_sec", "macro_sql": "{% macro redshift__interval_length_sec(start_timestamp, end_timestamp) %}\n   DATEDIFF(second, {{ start_timestamp }}, {{ end_timestamp }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4166718, "supported_languages": null}, "macro.re_data.in_time_window": {"unique_id": "macro.re_data.in_time_window", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "in_time_window", "macro_sql": "\n\n{%- macro in_time_window(time_column) %}\n    {# /* If not time_filter is specified, we compute the metric over the entire table else we filter for the time frame */ #}\n    {% if time_column is none %}\n            true\n    {% else %}\n        {{ adapter.dispatch('in_time_window', 're_data')(time_column) }}\n    {% endif %}\n{% endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__in_time_window"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4175594, "supported_languages": null}, "macro.re_data.default__in_time_window": {"unique_id": "macro.re_data.default__in_time_window", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "default__in_time_window", "macro_sql": "{% macro default__in_time_window(time_column) %}\n    {{time_column}} >= {{ time_window_start() }} and\n    {{time_column}} < {{ time_window_end() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.time_window_start", "macro.re_data.time_window_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4182222, "supported_languages": null}, "macro.re_data.bigquery__in_time_window": {"unique_id": "macro.re_data.bigquery__in_time_window", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "bigquery__in_time_window", "macro_sql": "{% macro bigquery__in_time_window(time_column) %}\n    cast({{time_column}} as timestamp) >= {{ time_window_start() }} and\n    cast({{time_column}} as timestamp) < {{ time_window_end() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.time_window_start", "macro.re_data.time_window_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4188545, "supported_languages": null}, "macro.re_data.format_timestamp": {"unique_id": "macro.re_data.format_timestamp", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "format_timestamp", "macro_sql": "{% macro format_timestamp(column_name) %}\n    {{ adapter.dispatch('format_timestamp', 're_data')(column_name) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__format_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4194522, "supported_languages": null}, "macro.re_data.default__format_timestamp": {"unique_id": "macro.re_data.default__format_timestamp", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "default__format_timestamp", "macro_sql": "{% macro default__format_timestamp(column_name) %}\n    to_char({{column_name}}, 'YYYY-MM-DD HH24:MI:SS')\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4197862, "supported_languages": null}, "macro.re_data.bigquery__format_timestamp": {"unique_id": "macro.re_data.bigquery__format_timestamp", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "bigquery__format_timestamp", "macro_sql": "{% macro bigquery__format_timestamp(column_name) %}\n    FORMAT_TIMESTAMP('%Y-%m-%d %H:%I:%S', {{column_name}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4201124, "supported_languages": null}, "macro.re_data.in_date_window": {"unique_id": "macro.re_data.in_date_window", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "in_date_window", "macro_sql": "\n{%- macro in_date_window(target, start_date, end_date) %}\n  {{ adapter.dispatch('in_date_window','re_data')(target, start_date, end_date) }}\n{% endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__in_date_window"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.420783, "supported_languages": null}, "macro.re_data.default__in_date_window": {"unique_id": "macro.re_data.default__in_date_window", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/time_macros.sql", "original_file_path": "macros/utils/time_macros.sql", "name": "default__in_date_window", "macro_sql": "{% macro default__in_date_window(target, start_date, end_date) %}\n  {% if start_date is not none and end_date is not none %}\n    date({{target}}) between '{{start_date}}' and '{{end_date}}'\n  {% elif start_date is none %}\n    date({{target}}) <= '{{end_date}}'\n  {% elif end_date is none %}\n    date({{target}}) >= '{{start_date}}'\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4221144, "supported_languages": null}, "macro.re_data.quote_column": {"unique_id": "macro.re_data.quote_column", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/quote.sql", "original_file_path": "macros/utils/quote.sql", "name": "quote_column", "macro_sql": "{% macro quote_column(col_name) %}\n    {{ adapter.dispatch('quote_column', 're_data')(col_name) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__quote_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4233797, "supported_languages": null}, "macro.re_data.default__quote_column": {"unique_id": "macro.re_data.default__quote_column", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/quote.sql", "original_file_path": "macros/utils/quote.sql", "name": "default__quote_column", "macro_sql": "{% macro default__quote_column(col_name) %}\n    \"{{ col_name }}\"\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4237216, "supported_languages": null}, "macro.re_data.bigquery__quote_column": {"unique_id": "macro.re_data.bigquery__quote_column", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/quote.sql", "original_file_path": "macros/utils/quote.sql", "name": "bigquery__quote_column", "macro_sql": "{% macro bigquery__quote_column(col_name) %}\n    `{{ col_name }}`\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4240503, "supported_languages": null}, "macro.re_data.timestamp_type": {"unique_id": "macro.re_data.timestamp_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "timestamp_type", "macro_sql": "{% macro timestamp_type() %}\n    {{ adapter.dispatch('timestamp_type', 're_data')() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__timestamp_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4276185, "supported_languages": null}, "macro.re_data.default__timestamp_type": {"unique_id": "macro.re_data.default__timestamp_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "default__timestamp_type", "macro_sql": "{% macro default__timestamp_type() %}\n    timestamp without time zone\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4278884, "supported_languages": null}, "macro.re_data.redshift__timestamp_type": {"unique_id": "macro.re_data.redshift__timestamp_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "redshift__timestamp_type", "macro_sql": "{% macro redshift__timestamp_type() %}\n    TIMESTAMP\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4281235, "supported_languages": null}, "macro.re_data.bigquery__timestamp_type": {"unique_id": "macro.re_data.bigquery__timestamp_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "bigquery__timestamp_type", "macro_sql": "{% macro bigquery__timestamp_type() %}\n    TIMESTAMP\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4283564, "supported_languages": null}, "macro.re_data.snowflake__timestamp_type": {"unique_id": "macro.re_data.snowflake__timestamp_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "snowflake__timestamp_type", "macro_sql": "{% macro snowflake__timestamp_type() %}\n    TIMESTAMP_NTZ\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4285886, "supported_languages": null}, "macro.re_data.string_type": {"unique_id": "macro.re_data.string_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "string_type", "macro_sql": "{% macro string_type() %}\n    {{ adapter.dispatch('string_type', 're_data')() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__string_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4290633, "supported_languages": null}, "macro.re_data.default__string_type": {"unique_id": "macro.re_data.default__string_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "default__string_type", "macro_sql": "{% macro default__string_type() %}\n    text\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4293058, "supported_languages": null}, "macro.re_data.redshift__string_type": {"unique_id": "macro.re_data.redshift__string_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "redshift__string_type", "macro_sql": "{% macro redshift__string_type() %}\n    varchar(2047)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.429539, "supported_languages": null}, "macro.re_data.bigquery__string_type": {"unique_id": "macro.re_data.bigquery__string_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "bigquery__string_type", "macro_sql": "{% macro bigquery__string_type() %}\n    STRING\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4297662, "supported_languages": null}, "macro.re_data.snowflake__string_type": {"unique_id": "macro.re_data.snowflake__string_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "snowflake__string_type", "macro_sql": "{% macro snowflake__string_type() %}\n    STRING\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4301987, "supported_languages": null}, "macro.re_data.long_string_type": {"unique_id": "macro.re_data.long_string_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "long_string_type", "macro_sql": "{% macro long_string_type() %}\n    {{ adapter.dispatch('long_string_type', 're_data')() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__long_string_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4306943, "supported_languages": null}, "macro.re_data.default__long_string_type": {"unique_id": "macro.re_data.default__long_string_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "default__long_string_type", "macro_sql": "{% macro default__long_string_type() %}\n    {{ re_data.string_type() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.string_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4310646, "supported_languages": null}, "macro.re_data.redshift__long_string_type": {"unique_id": "macro.re_data.redshift__long_string_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "redshift__long_string_type", "macro_sql": "{% macro redshift__long_string_type() %}\n    varchar(65535)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4313014, "supported_languages": null}, "macro.re_data.integer_type": {"unique_id": "macro.re_data.integer_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "integer_type", "macro_sql": "{% macro integer_type() %}\n    INTEGER\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4315305, "supported_languages": null}, "macro.re_data.boolean_type": {"unique_id": "macro.re_data.boolean_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "boolean_type", "macro_sql": "{% macro boolean_type() %}\n    {{ adapter.dispatch('boolean_type', 're_data')() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__boolean_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4320042, "supported_languages": null}, "macro.re_data.default__boolean_type": {"unique_id": "macro.re_data.default__boolean_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "default__boolean_type", "macro_sql": "{% macro default__boolean_type() %}\n    BOOLEAN\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.432246, "supported_languages": null}, "macro.re_data.redshift__boolean_type": {"unique_id": "macro.re_data.redshift__boolean_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "redshift__boolean_type", "macro_sql": "{% macro redshift__boolean_type() %}\n    boolean\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4324782, "supported_languages": null}, "macro.re_data.bigquery__boolean_type": {"unique_id": "macro.re_data.bigquery__boolean_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "bigquery__boolean_type", "macro_sql": "{% macro bigquery__boolean_type() %}\n    BOOLEAN\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4327075, "supported_languages": null}, "macro.re_data.snowflake__boolean_type": {"unique_id": "macro.re_data.snowflake__boolean_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "snowflake__boolean_type", "macro_sql": "{% macro snowflake__boolean_type() %}\n    BOOLEAN\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4329348, "supported_languages": null}, "macro.re_data.numeric_type": {"unique_id": "macro.re_data.numeric_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "numeric_type", "macro_sql": "{% macro numeric_type() %}\n    {{ adapter.dispatch('numeric_type', 're_data')() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__numeric_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4334009, "supported_languages": null}, "macro.re_data.default__numeric_type": {"unique_id": "macro.re_data.default__numeric_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "default__numeric_type", "macro_sql": "{% macro default__numeric_type() %}\n    double precision\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4336576, "supported_languages": null}, "macro.re_data.redshift__numeric_type": {"unique_id": "macro.re_data.redshift__numeric_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "redshift__numeric_type", "macro_sql": "{% macro redshift__numeric_type() %}\n    DOUBLE PRECISION\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4338903, "supported_languages": null}, "macro.re_data.bigquery__numeric_type": {"unique_id": "macro.re_data.bigquery__numeric_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "bigquery__numeric_type", "macro_sql": "{% macro bigquery__numeric_type() %}\n    FLOAT64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.434141, "supported_languages": null}, "macro.re_data.snowflake__numeric_type": {"unique_id": "macro.re_data.snowflake__numeric_type", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/used_types.sql", "original_file_path": "macros/utils/used_types.sql", "name": "snowflake__numeric_type", "macro_sql": "{% macro snowflake__numeric_type() %}\n    FLOAT\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4343765, "supported_languages": null}, "macro.re_data.percentage_formula": {"unique_id": "macro.re_data.percentage_formula", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/formulas.sql", "original_file_path": "macros/utils/formulas.sql", "name": "percentage_formula", "macro_sql": "{% macro percentage_formula(summation, total) %}\n    abs(\n        ( \n            cast({{ summation }} as {{ numeric_type() }})\n        ) / \n        nullif(\n            cast( {{ total }} as {{ numeric_type() }} )\n        , 0) * 100.0\n    )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.numeric_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4357536, "supported_languages": null}, "macro.re_data.get_target_database": {"unique_id": "macro.re_data.get_target_database", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/get_database.sql", "original_file_path": "macros/utils/get_database.sql", "name": "get_target_database", "macro_sql": "{% macro get_target_database() %}\n    {{- adapter.dispatch('get_target_database', 're_data')() -}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__get_target_database"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4370682, "supported_languages": null}, "macro.re_data.default__get_target_database": {"unique_id": "macro.re_data.default__get_target_database", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/get_database.sql", "original_file_path": "macros/utils/get_database.sql", "name": "default__get_target_database", "macro_sql": "{% macro default__get_target_database() %}\n    {{- return (target.dbname) -}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4374921, "supported_languages": null}, "macro.re_data.bigquery__get_target_database": {"unique_id": "macro.re_data.bigquery__get_target_database", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/get_database.sql", "original_file_path": "macros/utils/get_database.sql", "name": "bigquery__get_target_database", "macro_sql": "{% macro bigquery__get_target_database() %}\n    {{- return (target.project) -}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4379046, "supported_languages": null}, "macro.re_data.snowflake__get_target_database": {"unique_id": "macro.re_data.snowflake__get_target_database", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/get_database.sql", "original_file_path": "macros/utils/get_database.sql", "name": "snowflake__get_target_database", "macro_sql": "{% macro snowflake__get_target_database() %}\n    {{- return (target.database) -}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4383388, "supported_languages": null}, "macro.re_data.generate_anomaly_message": {"unique_id": "macro.re_data.generate_anomaly_message", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/generate_alert_message.sql", "original_file_path": "macros/utils/generate_alert_message.sql", "name": "generate_anomaly_message", "macro_sql": "{% macro generate_anomaly_message(column_name, metric, last_value, last_avg) %}\n\n    case when {{ column_name }} != '' then metric || '(' || column_name || ')'\n    else metric\n    end \n    || ' is ' ||\n    {{ to_2dp( percentage_formula('last_value - last_avg', last_avg) ) }}\n    || '% ' ||\n    {{ comparison_text(last_value, last_avg) }}\n    || ' average.'\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.to_2dp", "macro.re_data.percentage_formula", "macro.re_data.comparison_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4428155, "supported_languages": null}, "macro.re_data.to_2dp": {"unique_id": "macro.re_data.to_2dp", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/generate_alert_message.sql", "original_file_path": "macros/utils/generate_alert_message.sql", "name": "to_2dp", "macro_sql": "{% macro to_2dp(val) %}\n    {{ adapter.dispatch('to_2dp', 're_data')(val) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.default__to_2dp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4433656, "supported_languages": null}, "macro.re_data.default__to_2dp": {"unique_id": "macro.re_data.default__to_2dp", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/generate_alert_message.sql", "original_file_path": "macros/utils/generate_alert_message.sql", "name": "default__to_2dp", "macro_sql": "{% macro default__to_2dp(val) %}\n    trim(to_char({{ val }}, '9999999999999999990D00'))\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4437063, "supported_languages": null}, "macro.re_data.bigquery__to_2dp": {"unique_id": "macro.re_data.bigquery__to_2dp", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/generate_alert_message.sql", "original_file_path": "macros/utils/generate_alert_message.sql", "name": "bigquery__to_2dp", "macro_sql": "{% macro bigquery__to_2dp(val) %}\n    format('%.2f', {{ val }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.444034, "supported_languages": null}, "macro.re_data.seconds_to_hours": {"unique_id": "macro.re_data.seconds_to_hours", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/generate_alert_message.sql", "original_file_path": "macros/utils/generate_alert_message.sql", "name": "seconds_to_hours", "macro_sql": "{% macro seconds_to_hours(val) %}\n    cast({{ val }} as {{ numeric_type() }}) / 3600\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.numeric_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4446251, "supported_languages": null}, "macro.re_data.generate_metric_value_text": {"unique_id": "macro.re_data.generate_metric_value_text", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/generate_alert_message.sql", "original_file_path": "macros/utils/generate_alert_message.sql", "name": "generate_metric_value_text", "macro_sql": "{% macro generate_metric_value_text(metric, value) %}\n    case \n        when {{ metric }} = 'freshness' \n            then cast({{ to_2dp(seconds_to_hours(value)) }} as {{ string_type() }}) || ' hours'\n        when {{ regex_match_expression(metric, 'percent') }} \n            then cast({{ to_2dp(value) }} as {{ string_type() }}) || '%'\n        when {{ regex_match_expression(metric, 'count') }} \n            then cast({{ value }} as {{ string_type() }})\n        else cast({{ to_2dp(value) }} as {{ string_type() }})\n    end\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.to_2dp", "macro.re_data.seconds_to_hours", "macro.re_data.string_type", "macro.re_data.regex_match_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4462588, "supported_languages": null}, "macro.re_data.generate_schema_change_message": {"unique_id": "macro.re_data.generate_schema_change_message", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/generate_alert_message.sql", "original_file_path": "macros/utils/generate_alert_message.sql", "name": "generate_schema_change_message", "macro_sql": "{% macro generate_schema_change_message(operation, column_name, prev_column_name, prev_data_type, data_type, detected_time) %}\n    case \n        when {{ operation }} = 'column_added'\n            then 'column ' || {{ column_name }} || ' of type ' || {{ data_type }} || ' was added.'\n        when {{ operation }} = 'column_removed'\n            then 'column ' || {{ prev_column_name }} || ' of type ' || {{ prev_data_type }} || ' was removed.'\n        when {{ operation }} = 'type_change'\n            then {{ column_name }} || ' column data type was changed from ' || {{ prev_data_type }} || ' to ' || {{ data_type }} || '.'\n        else ''\n    end\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4474275, "supported_languages": null}, "macro.re_data.generate_failed_test_message": {"unique_id": "macro.re_data.generate_failed_test_message", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/generate_alert_message.sql", "original_file_path": "macros/utils/generate_alert_message.sql", "name": "generate_failed_test_message", "macro_sql": "{% macro generate_failed_test_message(test_name, column_name) %}\n    case \n        when {{ column_name }} is null\n            then 'Test ' || {{ test_name }} || ' failed.'\n        else\n            'Test ' || {{ test_name }} || ' failed for column ' || {{ column_name }} || '.'\n    end\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4480395, "supported_languages": null}, "macro.re_data.dict_from_list": {"unique_id": "macro.re_data.dict_from_list", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/dict_from_list.sql", "original_file_path": "macros/utils/dict_from_list.sql", "name": "dict_from_list", "macro_sql": "{% macro dict_from_list(el_list) %}\n\n    {% if el_list is none %}\n        {{ return (none) }}\n    {% endif %}\n\n    {% set for_cols_dict = {} %}\n    {% for col in el_list %}\n        {% do for_cols_dict.update({col: True})%}\n    {% endfor %}\n    {% do return(for_cols_dict) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4501622, "supported_languages": null}, "macro.re_data.in_compile": {"unique_id": "macro.re_data.in_compile", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/in_compile.sql", "original_file_path": "macros/utils/in_compile.sql", "name": "in_compile", "macro_sql": "{% macro in_compile() %}\n\n    {%- call statement('in_compile', fetch_result=True) -%}\n        select * from {{ ref('re_data_run_started_at') }}\n    {%- endcall -%}\n\n    {% if execute %}\n        {%- set result = load_result('in_compile')['data'][0][0] -%}\n        {% if result == run_started_at.timestamp() * 1000000 %}\n            {{ return(False) }}\n        {% else %}\n            {{ return(True) }}\n        {% endif %}\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.452727, "supported_languages": null}, "macro.re_data.all_types_select": {"unique_id": "macro.re_data.all_types_select", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/mock/empty_tables.sql", "original_file_path": "macros/utils/mock/empty_tables.sql", "name": "all_types_select", "macro_sql": "{% macro all_types_select() %}\n    with types_table as (\n        select\n            cast (null as {{ string_type() }}) as string_type,\n            cast (null as {{ long_string_type() }}) as long_string_type,\n            cast (1 as {{ numeric_type() }}) as numeric_type,\n            cast ('2000-01-10' as {{ timestamp_type() }}) as timestamp_type,\n            cast (true as {{ boolean_type() }}) as boolean_type\n    )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.string_type", "macro.re_data.long_string_type", "macro.re_data.numeric_type", "macro.re_data.timestamp_type", "macro.re_data.boolean_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4559178, "supported_languages": null}, "macro.re_data.empty_table_generic": {"unique_id": "macro.re_data.empty_table_generic", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/mock/empty_tables.sql", "original_file_path": "macros/utils/mock/empty_tables.sql", "name": "empty_table_generic", "macro_sql": "{% macro empty_table_generic(list) %}\n    {{ re_data.all_types_select() }}\n    select\n    {% for name, type in list %}\n         {{ type }}_type as {{ name }}\n        {%- if not loop.last %}, {%- endif %}\n    {% endfor %}\n    from types_table\n    where string_type is not null\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.all_types_select"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4569478, "supported_languages": null}, "macro.re_data.empty_last_base_metrics": {"unique_id": "macro.re_data.empty_last_base_metrics", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/mock/empty_tables.sql", "original_file_path": "macros/utils/mock/empty_tables.sql", "name": "empty_last_base_metrics", "macro_sql": "{% macro empty_last_base_metrics() %}\n    {{\n        re_data.empty_table_generic([\n            ('table_name', 'string'),\n            ('column_name', 'string'),\n            ('metric', 'string'),\n            ('value', 'numeric')\n        ])\n    }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.empty_table_generic"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4579215, "supported_languages": null}, "macro.re_data.empty_last_table_samples": {"unique_id": "macro.re_data.empty_last_table_samples", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/mock/empty_tables.sql", "original_file_path": "macros/utils/mock/empty_tables.sql", "name": "empty_last_table_samples", "macro_sql": "{% macro empty_last_table_samples() %}\n    {{\n        re_data.empty_table_generic([\n            ('table_name', 'string'),\n            ('sample_data', 'string')\n        ])\n    }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.empty_table_generic"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4586673, "supported_languages": null}, "macro.re_data.empty_columns_table": {"unique_id": "macro.re_data.empty_columns_table", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/mock/empty_tables.sql", "original_file_path": "macros/utils/mock/empty_tables.sql", "name": "empty_columns_table", "macro_sql": "{% macro empty_columns_table() %}\n    {{\n        re_data.empty_table_generic([\n            ('name', 'string'),\n            ('schema', 'string'),\n            ('database', 'string'),\n            ('column_name', 'string'),\n            ('data_type', 'string'),\n            ('is_nullable', 'boolean'),\n            ('time_filter', 'string'),\n            ('computed_on', 'timestamp')\n        ])\n    }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.empty_table_generic"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4600277, "supported_languages": null}, "macro.re_data.empty_table": {"unique_id": "macro.re_data.empty_table", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/mock/empty_tables.sql", "original_file_path": "macros/utils/mock/empty_tables.sql", "name": "empty_table", "macro_sql": "{% macro empty_table() %}\n    {{\n        re_data.empty_table_generic([\n            ('name', 'string')\n        ])\n    }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.empty_table_generic"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.460571, "supported_languages": null}, "macro.re_data.add_duplication_context": {"unique_id": "macro.re_data.add_duplication_context", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/deduplication/add_duplication_context.sql", "original_file_path": "macros/utils/deduplication/add_duplication_context.sql", "name": "add_duplication_context", "macro_sql": "{% macro add_duplication_context(relation, unique_cols, sort_columns) %}\n\n            select {{ dbt_utils.star(from=relation) }}\n            , count(*) over (\n                 partition by {{ re_data.comma_delimited_list(unique_cols) }} \n            ) as re_data_duplicate_group_row_count\n            , row_number() over (\n                partition by {{ re_data.comma_delimited_list(unique_cols) }} {% if sort_columns %} order by {{ re_data.comma_delimited_list(sort_columns) }} {% endif %}\n            ) as re_data_duplicate_group_row_number\n\n            from {{ relation }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.star", "macro.re_data.comma_delimited_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4626172, "supported_languages": null}, "macro.re_data.json_extract": {"unique_id": "macro.re_data.json_extract", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/fivetran_utils/json_extract.sql", "original_file_path": "macros/utils/fivetran_utils/json_extract.sql", "name": "json_extract", "macro_sql": "{% macro json_extract(string, string_path) -%}\n\n{{ adapter.dispatch('json_extract') (string, string_path) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__json_extract"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4644487, "supported_languages": null}, "macro.re_data.default__json_extract": {"unique_id": "macro.re_data.default__json_extract", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/fivetran_utils/json_extract.sql", "original_file_path": "macros/utils/fivetran_utils/json_extract.sql", "name": "default__json_extract", "macro_sql": "{% macro default__json_extract(string, string_path) %}\n\n  json_extract_path_text({{string}}, {{ \"'\" ~ string_path ~ \"'\" }} )\n \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4649708, "supported_languages": null}, "macro.re_data.snowflake__json_extract": {"unique_id": "macro.re_data.snowflake__json_extract", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/fivetran_utils/json_extract.sql", "original_file_path": "macros/utils/fivetran_utils/json_extract.sql", "name": "snowflake__json_extract", "macro_sql": "{% macro snowflake__json_extract(string, string_path) %}\n\n  json_extract_path_text(try_parse_json( {{string}} ), {{ \"'\" ~ string_path ~ \"'\" }} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4654763, "supported_languages": null}, "macro.re_data.redshift__json_extract": {"unique_id": "macro.re_data.redshift__json_extract", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/fivetran_utils/json_extract.sql", "original_file_path": "macros/utils/fivetran_utils/json_extract.sql", "name": "redshift__json_extract", "macro_sql": "{% macro redshift__json_extract(string, string_path) %}\n\n  case when is_valid_json( {{string}} ) then json_extract_path_text({{string}}, {{ \"'\" ~ string_path ~ \"'\" }} ) else null end\n \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4660556, "supported_languages": null}, "macro.re_data.bigquery__json_extract": {"unique_id": "macro.re_data.bigquery__json_extract", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/fivetran_utils/json_extract.sql", "original_file_path": "macros/utils/fivetran_utils/json_extract.sql", "name": "bigquery__json_extract", "macro_sql": "{% macro bigquery__json_extract(string, string_path) %}\n\n  json_extract_scalar({{string}}, {{ \"'$.\" ~ string_path ~ \"'\" }} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4665637, "supported_languages": null}, "macro.re_data.postgres__json_extract": {"unique_id": "macro.re_data.postgres__json_extract", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/fivetran_utils/json_extract.sql", "original_file_path": "macros/utils/fivetran_utils/json_extract.sql", "name": "postgres__json_extract", "macro_sql": "{% macro postgres__json_extract(string, string_path) %}\n\n  {{string}}::json->>{{\"'\" ~ string_path ~ \"'\" }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4670613, "supported_languages": null}, "macro.re_data.percentile": {"unique_id": "macro.re_data.percentile", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/fivetran_utils/percentile.sql", "original_file_path": "macros/utils/fivetran_utils/percentile.sql", "name": "percentile", "macro_sql": "{% macro percentile(percentile_field, partition_field, percent) -%}\n\n{{ adapter.dispatch('percentile') (percentile_field, partition_field, percent) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.redshift__percentile"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4696312, "supported_languages": null}, "macro.re_data.default__percentile": {"unique_id": "macro.re_data.default__percentile", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/fivetran_utils/percentile.sql", "original_file_path": "macros/utils/fivetran_utils/percentile.sql", "name": "default__percentile", "macro_sql": "{% macro default__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile_cont( \n        {{ percent }} )\n        within group ( order by {{ percentile_field }} )\n        over ( partition by {{ partition_field }} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4701982, "supported_languages": null}, "macro.re_data.redshift__percentile": {"unique_id": "macro.re_data.redshift__percentile", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/fivetran_utils/percentile.sql", "original_file_path": "macros/utils/fivetran_utils/percentile.sql", "name": "redshift__percentile", "macro_sql": "{% macro redshift__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile_cont( \n        {{ percent }} )\n        within group ( order by {{ percentile_field }} )\n        over ( partition by {{ partition_field }} )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4707325, "supported_languages": null}, "macro.re_data.bigquery__percentile": {"unique_id": "macro.re_data.bigquery__percentile", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/fivetran_utils/percentile.sql", "original_file_path": "macros/utils/fivetran_utils/percentile.sql", "name": "bigquery__percentile", "macro_sql": "{% macro bigquery__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile_cont( \n        {{ percentile_field }}, \n        {{ percent }}) \n        over (partition by {{ partition_field }}    \n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.47126, "supported_languages": null}, "macro.re_data.postgres__percentile": {"unique_id": "macro.re_data.postgres__percentile", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/fivetran_utils/percentile.sql", "original_file_path": "macros/utils/fivetran_utils/percentile.sql", "name": "postgres__percentile", "macro_sql": "{% macro postgres__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile_cont( \n        {{ percent }} )\n        within group ( order by {{ percentile_field }} )\n    /* have to group by partition field */\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4721615, "supported_languages": null}, "macro.re_data.spark__percentile": {"unique_id": "macro.re_data.spark__percentile", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/fivetran_utils/percentile.sql", "original_file_path": "macros/utils/fivetran_utils/percentile.sql", "name": "spark__percentile", "macro_sql": "{% macro spark__percentile(percentile_field, partition_field, percent)  %}\n\n    percentile( \n        {{ percentile_field }}, \n        {{ percent }}) \n        over (partition by {{ partition_field }}    \n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4727564, "supported_languages": null}, "macro.re_data.to_json_string_value_or_null": {"unique_id": "macro.re_data.to_json_string_value_or_null", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/json/to_single_json.sql", "original_file_path": "macros/utils/json/to_single_json.sql", "name": "to_json_string_value_or_null", "macro_sql": "{% macro to_json_string_value_or_null(column) %}\n    (\n        case \n            when {{column}} is null then 'null'\n            else '\"' ||\n                regexp_replace(\n                    replace(cast({{column}} as {{string_type()}}), '\"', {{escape_seq_for_json('\"') }}),\n                    '\\n', {{ quote_new_line() }} {% if target.type == 'postgres' %}, 'g' {% endif %}\n                ) || '\"'\n        end\n    )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.string_type", "macro.re_data.escape_seq_for_json", "macro.re_data.quote_new_line"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4747863, "supported_languages": null}, "macro.re_data.to_single_json": {"unique_id": "macro.re_data.to_single_json", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/json/to_single_json.sql", "original_file_path": "macros/utils/json/to_single_json.sql", "name": "to_single_json", "macro_sql": "{% macro to_single_json(columns) %}\n    '{' ||\n    {%- for column in columns %}\n        '\"{{ column }}\": ' ||\n        {{ to_json_string_value_or_null(column) }}\n        {%- if not loop.last %} || ',' || {%- endif %}\n    {%- endfor %}\n    || '}'\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.to_json_string_value_or_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4756544, "supported_languages": null}, "macro.re_data.row_value": {"unique_id": "macro.re_data.row_value", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/agate/row_value.sql", "original_file_path": "macros/utils/agate/row_value.sql", "name": "row_value", "macro_sql": "{% macro row_value(agate_row, column) %}\n    {{ return (agate_row[re_data.name_in_db(column)]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.name_in_db"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.477396, "supported_languages": null}, "macro.re_data.agate_to_list": {"unique_id": "macro.re_data.agate_to_list", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/utils/agate/row_value.sql", "original_file_path": "macros/utils/agate/row_value.sql", "name": "agate_to_list", "macro_sql": "{% macro agate_to_list(table) %}\n    {% set col_names = table.column_names %}\n    {% set query_result = [] %}\n    {% for row in table.rows %}\n        {% set pairs = [] %}\n        {% for col_name in col_names %}\n            {% set value = row.get(col_name) | string %}\n            {% do pairs.append('\"' ~ (col_name | lower) ~ '\":' ~ '\"' ~ (value | replace('\"', '\\\\\\\"') | replace('\\n', '\\\\n') ) ~ '\"') %}\n        {% endfor %}\n        {% set joined_pairs = '{' ~ (pairs | join(',')) ~ '}' %}\n        {% do query_result.append(joined_pairs) %}\n    {% endfor %}\n    {% set query_result = '[' ~ (query_result | join(',')) ~ ']' %}\n    {{ return (query_result) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4806833, "supported_languages": null}, "macro.re_data.metric_expression": {"unique_id": "macro.re_data.metric_expression", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/tests/test_metrics.sql", "original_file_path": "macros/tests/test_metrics.sql", "name": "metric_expression", "macro_sql": "{% macro metric_expression(table, metric, expression, column_name=None, condition=None) %}\n    select * from {{ref('re_data_base_metrics')}}\n    where\n        table_name = '{{ re_data.full_table_name_values(table.identifier, table.schema, table.database)}}' and\n        metric = '{{ metric }}' and\n        {% if condition is not none %}\n            {{ condition }} and\n        {% endif %}\n        {% if column_name is none %}\n        not ( {{ expression }} )\n        {% else %}\n        column_name = '{{ column_name }}' and\n        not ( {{ expression }} )\n        {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.full_table_name_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4876041, "supported_languages": null}, "macro.re_data.test_metric_expression_is_true": {"unique_id": "macro.re_data.test_metric_expression_is_true", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/tests/test_metrics.sql", "original_file_path": "macros/tests/test_metrics.sql", "name": "test_metric_expression_is_true", "macro_sql": "{% test metric_expression_is_true(model, table, metric, expression, column_name=None, condition=None) %}\n    {{ re_data.metric_expression(table, metric, expression, column_name=None, condition=None) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.metric_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4885755, "supported_languages": null}, "macro.re_data.test_metric_equal_to": {"unique_id": "macro.re_data.test_metric_equal_to", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/tests/test_metrics.sql", "original_file_path": "macros/tests/test_metrics.sql", "name": "test_metric_equal_to", "macro_sql": "{% test metric_equal_to(model, table, metric, value, column_name=None, condition=None) %}\n    {{ re_data.metric_expression(table, metric, 'value = ' ~ value, column_name, condition) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.metric_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4894674, "supported_languages": null}, "macro.re_data.test_metric_in_range": {"unique_id": "macro.re_data.test_metric_in_range", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/tests/test_metrics.sql", "original_file_path": "macros/tests/test_metrics.sql", "name": "test_metric_in_range", "macro_sql": "{% test metric_in_range(model, table, metric, min_value, max_value, column_name=None, condition=None) %}\n    {{ re_data.metric_expression(table, metric, 'value >= ' ~ min_value ~ ' and value <= ' ~ max_value, column_name, condition) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.metric_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4903762, "supported_languages": null}, "macro.re_data.test_assert_true": {"unique_id": "macro.re_data.test_assert_true", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/tests/test_metrics.sql", "original_file_path": "macros/tests/test_metrics.sql", "name": "test_assert_true", "macro_sql": "{% test assert_true(model, column_name=None, metric=None, expression=expression, where=None) %}\n    -- depends_on: {{ ref('re_data_base_metrics') }}\n    {% if execute %}\n        {{ re_data.metric_expression(model, metric, expression, column_name, where) }}\n    {% else %}\n        {{ re_data.empty_table() }}\n    {% endif %}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.metric_expression", "macro.re_data.empty_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4917037, "supported_languages": null}, "macro.re_data.test_assert_false": {"unique_id": "macro.re_data.test_assert_false", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/tests/test_metrics.sql", "original_file_path": "macros/tests/test_metrics.sql", "name": "test_assert_false", "macro_sql": "{% test assert_false(model, column_name=None, metric=None, expression=expression, where=None) %}\n    -- depends_on: {{ ref('re_data_base_metrics') }}\n    {% if execute %}\n        {{ re_data.metric_expression(model, metric, 'not (' ~ expression ~ ')', column_name, where) }}\n    {% else %}\n        {{ re_data.empty_table() }}\n    {% endif %}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.metric_expression", "macro.re_data.empty_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4931004, "supported_languages": null}, "macro.re_data.test_assert_in_range": {"unique_id": "macro.re_data.test_assert_in_range", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/tests/test_metrics.sql", "original_file_path": "macros/tests/test_metrics.sql", "name": "test_assert_in_range", "macro_sql": "{% test assert_in_range(model, column_name=None, metric=None, min_value=None, max_value=None, where=None) %}\n    -- depends_on: {{ ref('re_data_base_metrics') }}\n    {% if execute %}\n        {{ re_data.metric_expression(model, metric, 'value >= ' ~ min_value ~ ' and value <= ' ~ max_value, column_name, where) }}\n    {% else %}\n        {{ re_data.empty_table() }}\n    {% endif %}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.metric_expression", "macro.re_data.empty_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4946256, "supported_languages": null}, "macro.re_data.test_assert_equal": {"unique_id": "macro.re_data.test_assert_equal", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/tests/test_metrics.sql", "original_file_path": "macros/tests/test_metrics.sql", "name": "test_assert_equal", "macro_sql": "{% test assert_equal(model, column_name=None, metric=None, value=value, where=None) %}\n    -- depends_on: {{ ref('re_data_base_metrics') }}\n    {% if execute %}\n        {{ re_data.metric_expression(model, metric, 'value = ' ~ value, column_name, where) }}\n    {% else %}\n        {{ re_data.empty_table() }}\n    {% endif %}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.metric_expression", "macro.re_data.empty_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4959972, "supported_languages": null}, "macro.re_data.test_assert_greater": {"unique_id": "macro.re_data.test_assert_greater", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/tests/test_metrics.sql", "original_file_path": "macros/tests/test_metrics.sql", "name": "test_assert_greater", "macro_sql": "{% test assert_greater(model, column_name=None, metric=None, value=None, where=None) %}\n    -- depends_on: {{ ref('re_data_base_metrics') }}\n    {% if execute %}\n        {{ re_data.metric_expression(model, metric, 'value > ' ~ value, column_name, where) }}\n    {% else %}\n        {{ re_data.empty_table() }}\n    {% endif %}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.metric_expression", "macro.re_data.empty_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.4974089, "supported_languages": null}, "macro.re_data.test_assert_greater_equal": {"unique_id": "macro.re_data.test_assert_greater_equal", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/tests/test_metrics.sql", "original_file_path": "macros/tests/test_metrics.sql", "name": "test_assert_greater_equal", "macro_sql": "{% test assert_greater_equal(model, column_name=None, metric=None, value=None, where=None) %}\n    -- depends_on: {{ ref('re_data_base_metrics') }}\n    {% if execute %}\n        {{ re_data.metric_expression(model, metric, 'value >= ' ~ value, column_name, where) }}\n    {% else %}\n        {{ re_data.empty_table() }}\n    {% endif %}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.metric_expression", "macro.re_data.empty_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.498899, "supported_languages": null}, "macro.re_data.test_assert_less": {"unique_id": "macro.re_data.test_assert_less", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/tests/test_metrics.sql", "original_file_path": "macros/tests/test_metrics.sql", "name": "test_assert_less", "macro_sql": "{% test assert_less(model, column_name=None, metric=None, value=None, where=None) %}\n    -- depends_on: {{ ref('re_data_base_metrics') }}\n    {% if execute %}\n        {{ re_data.metric_expression(model, metric, 'value < ' ~ value, column_name, where) }}\n    {% else %}\n        {{ re_data.empty_table() }}\n    {% endif %}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.metric_expression", "macro.re_data.empty_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.5003793, "supported_languages": null}, "macro.re_data.test_assert_less_equal": {"unique_id": "macro.re_data.test_assert_less_equal", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/tests/test_metrics.sql", "original_file_path": "macros/tests/test_metrics.sql", "name": "test_assert_less_equal", "macro_sql": "{% test assert_less_equal(model, column_name=None, metric=None, value=None, where=None) %}\n    -- depends_on: {{ ref('re_data_base_metrics') }}\n    {% if execute %}\n        {{ re_data.metric_expression(model, metric, 'value <= ' ~ value, column_name, where) }}\n    {% else %}\n        {{ re_data.empty_table() }}\n    {% endif %}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.metric_expression", "macro.re_data.empty_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.5017807, "supported_languages": null}, "macro.re_data.pub_insert_into_re_data_monitored": {"unique_id": "macro.re_data.pub_insert_into_re_data_monitored", "package_name": "re_data", "root_path": "/home/runner/work/re-data/re-data/getting_started/toy_shop/dbt_packages/re_data", "path": "macros/post_hook/re_data_monitored.sql", "original_file_path": "macros/post_hook/re_data_monitored.sql", "name": "pub_insert_into_re_data_monitored", "macro_sql": "{% macro pub_insert_into_re_data_monitored() %}\n    {% set monitored = re_data.pub_monitored_from_graph() %}\n    {% do re_data.insert_list_to_table(\n        this,\n        monitored,\n        ['name', 'schema', 'database', 'time_filter', 'metrics_groups', 'additional_metrics', 'metrics', 'columns', 'anomaly_detector', 'owners', 'selected']\n    ) %}\n\n    {{ return('') }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.re_data.pub_monitored_from_graph", "macro.re_data.insert_list_to_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1666008870.503821, "supported_languages": null}}, "docs": {"dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.7.14/x64/lib/python3.7/site-packages/dbt/include/global_project", "path": "overview.md", "original_file_path": "docs/overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.toy_shop.not_monitored": [], "model.toy_shop.sanitized_user_data": ["seed.toy_shop.user_data"], "model.toy_shop.orders_per_age": ["seed.toy_shop.orders", "source.toy_shop.toy_shop_feature_add_integrations_sources.toy_shop_customers"], "model.toy_shop.pending_orders": ["seed.toy_shop.orders"], "model.toy_shop.revenue_per_age": ["model.toy_shop.orders_per_age"], "seed.toy_shop.customers": [], "seed.toy_shop.orders": [], "seed.toy_shop.user_data": [], "seed.toy_shop.companies": [], "model.re_data.re_data_metrics": ["model.re_data.re_data_base_metrics"], "model.re_data.re_data_base_metrics": ["model.re_data.re_data_columns", "model.re_data.re_data_last_base_metrics_part0", "model.re_data.re_data_last_base_metrics_part0", "model.re_data.re_data_last_base_metrics_part1", "model.re_data.re_data_last_base_metrics_part1", "model.re_data.re_data_last_base_metrics_part2", "model.re_data.re_data_last_base_metrics_part2", "model.re_data.re_data_last_base_metrics_part3", "model.re_data.re_data_last_base_metrics_part3", "model.re_data.re_data_last_base_metrics_thread0", "model.re_data.re_data_last_base_metrics_thread1", "model.re_data.re_data_last_base_metrics_thread2", "model.re_data.re_data_last_base_metrics_thread3", "model.re_data.re_data_monitored", "model.re_data.re_data_run_started_at", "model.re_data.re_data_selected"], "model.re_data.re_data_table_samples": ["model.re_data.re_data_last_table_samples", "model.re_data.re_data_last_table_samples_part", "model.re_data.re_data_last_table_samples_part"], "model.re_data.re_data_columns_over_time": ["model.re_data.re_data_columns", "model.re_data.re_data_selected"], "model.re_data.re_data_last_stats": ["model.re_data.re_data_base_metrics", "model.re_data.re_data_base_metrics", "model.re_data.re_data_base_metrics"], "model.re_data.re_data_last_metrics": ["model.re_data.re_data_base_metrics"], "model.re_data.re_data_selected": ["model.re_data.re_data_monitored"], "model.re_data.re_data_monitored": [], "model.re_data.re_data_columns": ["model.re_data.re_data_monitored", "model.re_data.re_data_run_started_at", "model.re_data.re_data_selected"], "model.re_data.re_data_test_history": [], "model.re_data.re_data_alerts": ["model.re_data.re_data_anomalies", "model.re_data.re_data_schema_changes", "model.re_data.re_data_test_history"], "model.re_data.re_data_test_runs": ["model.re_data.re_data_test_history"], "model.re_data.re_data_anomalies": ["model.re_data.re_data_selected", "model.re_data.re_data_z_score"], "model.re_data.re_data_schema_changes": ["model.re_data.re_data_columns_over_time", "model.re_data.re_data_monitored", "model.re_data.re_data_run_started_at", "model.re_data.re_data_selected"], "model.re_data.re_data_z_score": ["model.re_data.re_data_last_metrics", "model.re_data.re_data_last_stats"], "model.re_data.re_data_run_started_at": [], "model.re_data.re_data_last_table_samples_part": [], "model.re_data.re_data_last_table_samples": ["model.re_data.re_data_columns", "model.re_data.re_data_last_table_samples_part", "model.re_data.re_data_monitored", "model.re_data.re_data_run_started_at", "model.re_data.re_data_selected"], "model.re_data.re_data_last_base_metrics_part1": ["model.re_data.re_data_columns"], "model.re_data.re_data_last_base_metrics_part2": ["model.re_data.re_data_columns"], "model.re_data.re_data_last_base_metrics_thread3": ["model.re_data.re_data_columns", "model.re_data.re_data_last_base_metrics_part3", "model.re_data.re_data_monitored", "model.re_data.re_data_run_started_at", "model.re_data.re_data_selected"], "model.re_data.re_data_last_base_metrics_thread0": ["model.re_data.re_data_columns", "model.re_data.re_data_last_base_metrics_part0", "model.re_data.re_data_monitored", "model.re_data.re_data_run_started_at", "model.re_data.re_data_selected"], "model.re_data.re_data_last_base_metrics_part0": ["model.re_data.re_data_columns"], "model.re_data.re_data_last_base_metrics_thread1": ["model.re_data.re_data_columns", "model.re_data.re_data_last_base_metrics_part1", "model.re_data.re_data_monitored", "model.re_data.re_data_run_started_at", "model.re_data.re_data_selected"], "model.re_data.re_data_last_base_metrics_part3": ["model.re_data.re_data_columns"], "model.re_data.re_data_last_base_metrics_thread2": ["model.re_data.re_data_columns", "model.re_data.re_data_last_base_metrics_part2", "model.re_data.re_data_monitored", "model.re_data.re_data_run_started_at", "model.re_data.re_data_selected"], "operation.re_data.re_data-on-run-end-0": ["model.re_data.re_data_test_history"], "test.toy_shop.not_null_orders_status.8a27272c0a": ["seed.toy_shop.orders"], "test.toy_shop.re_data_assert_in_range_orders_550__row_count__450.6aae41952a": ["model.re_data.re_data_base_metrics", "seed.toy_shop.orders"], "test.toy_shop.not_null_pending_orders_status.f8a64aa7bf": ["model.toy_shop.pending_orders"], "test.toy_shop.re_data_source_assert_in_range_toy_shop_feature_add_integrations_sources_toy_shop_customers_20__row_count__10.e41bfaad68": ["model.re_data.re_data_base_metrics", "source.toy_shop.toy_shop_feature_add_integrations_sources.toy_shop_customers"], "test.toy_shop.source_not_null_toy_shop_feature_add_integrations_sources_toy_shop_customers_age.6da1e19b44": ["source.toy_shop.toy_shop_feature_add_integrations_sources.toy_shop_customers"], "source.toy_shop.toy_shop_feature_add_integrations_sources.toy_shop_customers": []}, "child_map": {"model.toy_shop.not_monitored": [], "model.toy_shop.sanitized_user_data": [], "model.toy_shop.orders_per_age": ["model.toy_shop.revenue_per_age"], "model.toy_shop.pending_orders": ["test.toy_shop.not_null_pending_orders_status.f8a64aa7bf"], "model.toy_shop.revenue_per_age": [], "seed.toy_shop.customers": [], "seed.toy_shop.orders": ["model.toy_shop.orders_per_age", "model.toy_shop.pending_orders", "test.toy_shop.not_null_orders_status.8a27272c0a", "test.toy_shop.re_data_assert_in_range_orders_550__row_count__450.6aae41952a"], "seed.toy_shop.user_data": ["model.toy_shop.sanitized_user_data"], "seed.toy_shop.companies": [], "model.re_data.re_data_metrics": [], "model.re_data.re_data_base_metrics": ["model.re_data.re_data_last_metrics", "model.re_data.re_data_last_stats", "model.re_data.re_data_last_stats", "model.re_data.re_data_last_stats", "model.re_data.re_data_metrics", "test.toy_shop.re_data_assert_in_range_orders_550__row_count__450.6aae41952a", "test.toy_shop.re_data_source_assert_in_range_toy_shop_feature_add_integrations_sources_toy_shop_customers_20__row_count__10.e41bfaad68"], "model.re_data.re_data_table_samples": [], "model.re_data.re_data_columns_over_time": ["model.re_data.re_data_schema_changes"], "model.re_data.re_data_last_stats": ["model.re_data.re_data_z_score"], "model.re_data.re_data_last_metrics": ["model.re_data.re_data_z_score"], "model.re_data.re_data_selected": ["model.re_data.re_data_anomalies", "model.re_data.re_data_base_metrics", "model.re_data.re_data_columns", "model.re_data.re_data_columns_over_time", "model.re_data.re_data_last_base_metrics_thread0", "model.re_data.re_data_last_base_metrics_thread1", "model.re_data.re_data_last_base_metrics_thread2", "model.re_data.re_data_last_base_metrics_thread3", "model.re_data.re_data_last_table_samples", "model.re_data.re_data_schema_changes"], "model.re_data.re_data_monitored": ["model.re_data.re_data_base_metrics", "model.re_data.re_data_columns", "model.re_data.re_data_last_base_metrics_thread0", "model.re_data.re_data_last_base_metrics_thread1", "model.re_data.re_data_last_base_metrics_thread2", "model.re_data.re_data_last_base_metrics_thread3", "model.re_data.re_data_last_table_samples", "model.re_data.re_data_schema_changes", "model.re_data.re_data_selected"], "model.re_data.re_data_columns": ["model.re_data.re_data_base_metrics", "model.re_data.re_data_columns_over_time", "model.re_data.re_data_last_base_metrics_part0", "model.re_data.re_data_last_base_metrics_part1", "model.re_data.re_data_last_base_metrics_part2", "model.re_data.re_data_last_base_metrics_part3", "model.re_data.re_data_last_base_metrics_thread0", "model.re_data.re_data_last_base_metrics_thread1", "model.re_data.re_data_last_base_metrics_thread2", "model.re_data.re_data_last_base_metrics_thread3", "model.re_data.re_data_last_table_samples"], "model.re_data.re_data_test_history": ["model.re_data.re_data_alerts", "model.re_data.re_data_test_runs", "operation.re_data.re_data-on-run-end-0"], "model.re_data.re_data_alerts": [], "model.re_data.re_data_test_runs": [], "model.re_data.re_data_anomalies": ["model.re_data.re_data_alerts"], "model.re_data.re_data_schema_changes": ["model.re_data.re_data_alerts"], "model.re_data.re_data_z_score": ["model.re_data.re_data_anomalies"], "model.re_data.re_data_run_started_at": ["model.re_data.re_data_base_metrics", "model.re_data.re_data_columns", "model.re_data.re_data_last_base_metrics_thread0", "model.re_data.re_data_last_base_metrics_thread1", "model.re_data.re_data_last_base_metrics_thread2", "model.re_data.re_data_last_base_metrics_thread3", "model.re_data.re_data_last_table_samples", "model.re_data.re_data_schema_changes"], "model.re_data.re_data_last_table_samples_part": ["model.re_data.re_data_last_table_samples", "model.re_data.re_data_table_samples", "model.re_data.re_data_table_samples"], "model.re_data.re_data_last_table_samples": ["model.re_data.re_data_table_samples"], "model.re_data.re_data_last_base_metrics_part1": ["model.re_data.re_data_base_metrics", "model.re_data.re_data_base_metrics", "model.re_data.re_data_last_base_metrics_thread1"], "model.re_data.re_data_last_base_metrics_part2": ["model.re_data.re_data_base_metrics", "model.re_data.re_data_base_metrics", "model.re_data.re_data_last_base_metrics_thread2"], "model.re_data.re_data_last_base_metrics_thread3": ["model.re_data.re_data_base_metrics"], "model.re_data.re_data_last_base_metrics_thread0": ["model.re_data.re_data_base_metrics"], "model.re_data.re_data_last_base_metrics_part0": ["model.re_data.re_data_base_metrics", "model.re_data.re_data_base_metrics", "model.re_data.re_data_last_base_metrics_thread0"], "model.re_data.re_data_last_base_metrics_thread1": ["model.re_data.re_data_base_metrics"], "model.re_data.re_data_last_base_metrics_part3": ["model.re_data.re_data_base_metrics", "model.re_data.re_data_base_metrics", "model.re_data.re_data_last_base_metrics_thread3"], "model.re_data.re_data_last_base_metrics_thread2": ["model.re_data.re_data_base_metrics"], "operation.re_data.re_data-on-run-end-0": [], "test.toy_shop.not_null_orders_status.8a27272c0a": [], "test.toy_shop.re_data_assert_in_range_orders_550__row_count__450.6aae41952a": [], "test.toy_shop.not_null_pending_orders_status.f8a64aa7bf": [], "test.toy_shop.re_data_source_assert_in_range_toy_shop_feature_add_integrations_sources_toy_shop_customers_20__row_count__10.e41bfaad68": [], "test.toy_shop.source_not_null_toy_shop_feature_add_integrations_sources_toy_shop_customers_age.6da1e19b44": [], "source.toy_shop.toy_shop_feature_add_integrations_sources.toy_shop_customers": ["model.toy_shop.orders_per_age", "test.toy_shop.re_data_source_assert_in_range_toy_shop_feature_add_integrations_sources_toy_shop_customers_20__row_count__10.e41bfaad68", "test.toy_shop.source_not_null_toy_shop_feature_add_integrations_sources_toy_shop_customers_age.6da1e19b44"]}}